import Mathlib

variable {G : Type _} [Group G]

/-- If a and b satisfy a^5 = 1, b^2 = 1, and ba = a^2 b in a group G, then a = 1. -/
theorem presentation_a_eq_one (a b : G) (ha : a ^ 5 = 1) (hb : b ^ 2 = 1)
  (hab : b * a = a ^ 2 * b) : a = 1 := by sorry

/-- Under the same hypotheses, the subgroup generated by a and b is isomorphic to Multiplicative (ZMod 2). -/
noncomputable def presentation_subgroup_is_ZMod2 (a b : G) (ha : a ^ 5 = 1) (hb : b ^ 2 = 1)
  (hab : b * a = a ^ 2 * b) :
  MulEquiv (Subgroup.closure ({a, b} : Set G)) (Multiplicative (ZMod 2)) := by sorry
