import Mathlib

open Equiv

/-- The symmetric group S_n is generated by adjacent transpositions (i i+1) for 1 ≤ i < n. -/
theorem symmetric_group_generated_by_adjacent_transpositions (n : Nat) (hn : 2 ≤ n) :
  Subgroup.closure ({ s : Perm (Fin n) | ∃ i : Fin (n - 1),
    let a : Fin n := Fin.cast (congrArg (fun m => m) (by simp [Nat.sub_add_cancel (Nat.pred_lt.2 (by decide))])) i;
    let b : Fin n := Fin.cast (congrArg (fun m => m) (by simp [Nat.sub_add_cancel (Nat.pred_lt.2 (by decide))])) i.succ;
    s = swap a b } : Set (Perm (Fin n))) = (⊤ : Subgroup (Perm (Fin n))) := by sorry
