name,domain,status,passed,steps,nl_statement,lean4_code
srdoty_alg_Z_n_782,Algebra,success,True,2,"Let $R$ be a ring and let $a,b,c \in R$. Prove each of the following: $a \cdot 0 = 0 = 0 \cdot a$, $a(-b) = -(ab) = (-a)b$, $(-a)(-b) = ab$, $a(b-c) = ab - ac$, and $(-1)a = -a$.","import Mathlib

variable {R : Type _} [Ring R]
variable (a b c : R)

-- a * 0 = 0
theorem mul_zero_eq_zero : a * 0 = 0 := by sorry

-- 0 * a = 0
theorem zero_mul_eq_zero : 0 * a = 0 := by sorry

-- a * (-b) = -(a * b)
theorem mul_neg_eq_neg_mul : a * -b = -(a * b) := by sorry

-- (-a) * b = -(a * b)
theorem neg_mul_eq_neg_mul : -a * b = -(a * b) := by sorry

-- (-a) * (-b) = a * b
theorem neg_mul_neg_eq_mul : (-a) * (-b) = a * b := by sorry

-- a * (b - c) = a * b - a * c
theorem mul_sub_eq_sub_mul : a * (b - c) = a * b - a * c := by sorry

-- (-1) * a = -a
theorem neg_one_mul_eq_neg : (-1 : R) * a = -a := by sorry
"
srdoty_alg_Z_n_671,Algebra,success,True,2,"Let $n$ be a fixed positive integer and let $a,b,c,d \in \mathbb{Z}$. Suppose that $a \equiv b \pmod{n}$ and $c \equiv d \pmod{n}$. Show that $a+c \equiv b+d \pmod{n}$.","import Mathlib

/-!
Simple statement: if a ≡ b (mod n) and c ≡ d (mod n) then a + c ≡ b + d (mod n).
We express congruence by divisibility: n ∣ a - b.
-/

theorem srdoty_alg_Z_n_671 {n : Int} (hn : 0 < n) {a b c d : Int}
  (hab : n ∣ a - b) (hcd : n ∣ c - d) : n ∣ (a + c) - (b + d) := by
  sorry
"
srdoty_alg_Z_n_511,Algebra,success,True,3,"Let $R$ be a ring and let $a,b,c\in R$. Show that $a(b-c) = ab - ac$.","import Mathlib

/-!
Simple lemma: left distributivity of multiplication over subtraction in a ring.
-/

theorem mul_left_distrib_sub {R : Type*} [Ring R] (a b c : R) : a * (b - c) = a * b - a * c := by sorry
"
srdoty_alg_Z_n_509,Algebra,success,True,4,"Let $R$ be a ring and let $a,b\in R$. Show that $(-a)(-b) = ab$.","import Mathlib

variable {R : Type _} [Ring R]

theorem neg_mul_neg (a b : R) : (-a) * (-b) = a * b := by sorry
"
srdoty_alg_Z_n_505,Algebra,success,True,3,Let $R$ be a ring and let $a\in R$. Show that $a\cdot 0 = 0 = 0\cdot a$.,"import Mathlib

/-!
Simple lemmas: in any ring, multiplication by 0 on either side gives 0.
-/-

theorem srdoty_mul_zero {R : Type _} [Ring R] (a : R) : a * 0 = 0 := by sorry

theorem srdoty_zero_mul {R : Type _} [Ring R] (a : R) : 0 * a = 0 := by sorry
"
srdoty_alg_Z_n_779,Algebra,success,True,4,"Let $n>0$ be an integer and let $a,b \in \mathbb{Z}$. Prove that $a \equiv b \pmod{n}$ if and only if $a$ and $b$ have the same remainder upon division by $n$.","import Mathlib

/-!
Let n > 0 be an integer and let a, b ∈ ℤ. Prove that a ≡ b (mod n) iff a and b have the same remainder upon division by n.
-/

theorem int_modeq_iff_same_remainder {n : Int} (hn : 0 < n) (a b : Int) : (a ≡ b [ZMOD n]) ↔ a % n = b % n := by sorry
"
srdoty_alg_Z_n_815,Algebra,success,True,2,Define a relation $\approx$ on $\mathbb{R}$ by $a \approx b$ if and only if $a-b \in \mathbb{Z}$. Prove that $\approx$ is an equivalence relation on $\mathbb{R}$.,"import Mathlib

/-- Relation a ≈ b iff a - b is an integer (viewed as a real). -/
def approx (a b : ℝ) : Prop := ∃ k : Int, (a - b) = (k : ℝ)

theorem approx_equivalence : Equivalence (approx : ℝ → ℝ → Prop) := by sorry
"
srdoty_alg_Z_n_507,Algebra,success,True,3,"Let $R$ be a ring and let $a,b\in R$. Show that $a(-b) = -(ab) = (-a)b$.","import Mathlib

/-- Let R be a ring and let a b ∈ R. Show that a(-b) = -(ab) = (-a)b. -/
theorem mul_neg_eq_neg_mul_eq_neg_mul (R : Type*) [Ring R] (a b : R) :
  a * (-b) = -(a * b) ∧ -(a * b) = (-a) * b := by sorry
"
srdoty_alg_Z_n_513,Algebra,success,True,5,Let $R$ be a ring and let $a\in R$. Show that $(-1)a = -a$.,"import Mathlib

/-- Let R be a ring and let a ∈ R. Show that (-1) * a = -a. -/
lemma neg_one_mul_eq_neg {R : Type _} [Ring R] (a : R) : (-1 : R) * a = -a := by sorry
"
srdoty_alg_Z_n_828,Algebra,success,True,4,"Let $n$ be a fixed positive integer and let $a,b,c,d\in \mathbb{Z}$ with $a \equiv b \pmod{n}$ and $c \equiv d \pmod{n}$. Prove that $a+c \equiv b+d \pmod{n}$ and $ac \equiv bd \pmod{n}$.","import Mathlib

open Int

theorem srdoty_alg_Z_n_828 (n : Int) (hn : 0 < n) {a b c d : Int}
  (hab : a ≡ b [ZMOD n]) (hcd : c ≡ d [ZMOD n]) :
  a + c ≡ b + d [ZMOD n] ∧ a * c ≡ b * d [ZMOD n] := by sorry
"
srdoty_alg_Z_n_673,Algebra,success,True,5,"Let $n$ be a fixed positive integer and let $a,b,c,d \in \mathbb{Z}$. Suppose that $a \equiv b \pmod{n}$ and $c \equiv d \pmod{n}$. Show that $ac \equiv bd \pmod{n}$.","import Mathlib

/-!
Let n be a fixed positive integer and let a,b,c,d ∈ ℤ.
Suppose that a ≡ b [ZMOD n] and c ≡ d [ZMOD n].
Show that ac ≡ bd [ZMOD n].
-/

theorem int_modeq_mul {n : ℤ} (hn : 0 < n) (a b c d : ℤ)
  (hab : a ≡ b [ZMOD n]) (hcd : c ≡ d [ZMOD n]) :
  a * c ≡ b * d [ZMOD n] := by sorry
"
srdoty_alg_Z_n_607,Algebra,success,True,6,"Let $n$ be a fixed positive integer and let $a,b,c\in \mathbb{Z}$. Show that if $a \equiv b \pmod{n}$ and $b \equiv c \pmod{n}$, then $a \equiv c \pmod{n}$.","import Mathlib

/-- Let n be a fixed positive integer and let a, b, c be integers. If a ≡ b (mod n)
    and b ≡ c (mod n), then a ≡ c (mod n). -/
theorem modeq_trans {n : ℕ} {a b c : ℤ} (hn : 0 < n) (h1 : a ≡ b [ZMOD n]) (h2 : b ≡ c [ZMOD n]) : a ≡ c [ZMOD n] := by sorry
"
srdoty_alg_Z_n_1021,Algebra,success,True,4,Let $n>1$ be an integer. Prove that the linear congruence $ax \equiv b \pmod{n}$ has a solution in $\mathbb{Z}_n$ whenever the class $[a] \in \mathbb{Z}_n$ is a unit.,"import Mathlib

/--
Let n > 1 be an integer. If the class `a : ZMod n` is a unit, then the linear congruence
`a * x = b` has a solution in `ZMod n` (take `x = a⁻¹ * b`).
-/
theorem linear_congruence_solvable_of_unit {n : ℕ} (hn : n > 1) {a b : ZMod n} (ha : IsUnit a) :
  ∃ x : ZMod n, a * x = b := by sorry
"
srdoty_alg_Z_n_970,Algebra,success,True,5,Prove that a commutative ring $R$ is a field if and only if $R^{\times} = R\setminus\{0\}$.,"import Mathlib

open Set

theorem field_iff_units_eq_nonzero {R : Type*} [CommRing R] : Field R ↔ Set.range (coe : Rˣ → R) = {x : R | x ≠ 0} := by sorry
"
srdoty_alg_Z_n_901,Algebra,success,True,5,"Let $n$ be a positive integer. A congruence class $[a] \in \mathbb{Z}_n$ is a unit if and only if $\gcd(a,n) = 1$. Hence, the set $\mathbb{Z}_n^{\times}$ of units in $\mathbb{Z}_n$ is equal to $\{ [a] \in \mathbb{Z}_n : \gcd(a,n) = 1 \}$.","import Mathlib

/-!
Let n be a positive integer. A congruence class [a] ∈ ℤ_n is a unit iff gcd(a, n) = 1.
Hence the set of units in ℤ_n equals the set of residue classes with gcd 1.
-/

theorem zmod_isUnit_iff_gcd {n : ℕ} (hn : 0 < n) (a : Int) :
  IsUnit (a : ZMod n) ↔ Int.gcd a n = 1 := by sorry

theorem zmod_units_eq_gcd_one {n : ℕ} (hn : 0 < n) :
  { x : ZMod n | IsUnit x } = { x : ZMod n | ∃ b : Int, x = (b : ZMod n) ∧ Int.gcd b n = 1 } := by sorry
"
srdoty_alg_Z_n_930,Algebra,success,True,6,Let $n$ be a positive integer. Then $\mathbb{Z}_n$ is a field if and only if $n$ is a prime number.,"import Mathlib

/-!
Let n be a positive integer. Then Z_n is a field if and only if n is a prime number.
-/-

theorem zmod_field_iff_prime (n : ℕ) : Field (ZMod n) ↔ Nat.Prime n := by sorry
"
srdoty_alg_Sylow_402,Algebra,success,True,4,"Prove that if $G$ is a finite group in which every element has order a power of a fixed prime $p$, then $\lvert G\rvert = p^r$ for some integer $r\ge 1$.","import Mathlib

/-- If G is a finite group and every element has order a power of a fixed prime p,
    then the order of G is a power of p. -/
theorem srdoty_alg_Sylow_402 {G : Type _} [Group G] [Fintype G] {p : ℕ} (hp : Nat.Prime p)
  (h_elem_pow : ∀ g : G, ∃ k : ℕ, orderOf g = p ^ k) (hne : Fintype.card G ≠ 1) :
  ∃ r : ℕ, 1 ≤ r ∧ Fintype.card G = p ^ r := by sorry
"
srdoty_alg_Sylow_394,Algebra,success,True,10,"Let $p$ be a prime. Prove that if $G$ is a finite group with exactly one Sylow $p$-subgroup, then that Sylow $p$-subgroup is normal in $G$.","import Mathlib

/-- Let p be a prime. If G is a finite group with exactly one Sylow p-subgroup H,
then H is normal in G. -/
theorem normal_of_unique_sylow {G : Type _} [Group G] [Fintype G] {p : ℕ} [Fact (Nat.Prime p)]
  (H : Subgroup G) (hH : IsSylow p H) (h_unique : ∀ K : Subgroup G, IsSylow p K → K = H) :
  IsNormal H := by sorry
"
srdoty_alg_abelian_389,Algebra,success,True,6,"Prove that for integers $m,n\ge 1$ with $\gcd(m,n)=1$, one has $\mathbb{Z}_{m}\times \mathbb{Z}_{n}\cong \mathbb{Z}_{mn}$.","import Mathlib

/--
For m,n ≥ 1 with gcd(m,n) = 1, the Chinese remainder theorem gives an isomorphism
ZMod (m * n) ≃+ ZMod m × ZMod n (as additive groups).
-/
theorem zmod_mul_equiv_prod (m n : ℕ) (hm : 1 ≤ m) (hn : 1 ≤ n) (hc : Nat.Coprime m n) :
  AddEquiv (ZMod (m * n)) (ZMod m × ZMod n) := by sorry
"
srdoty_alg_abstract-gps_649,Algebra,success,True,5,"Let $R$ be a set with two binary operations $+$ and $\cdot$. Show that $R$ is a ring if and only if: (1) $(R,+)$ is an abelian group with identity $0$; (2) $(R,\cdot)$ is a monoid with identity $1$; and (3) $a(b+c)=ab+ac$ and $(b+c)a=ba+ca$ for all $a,b,c\in R$.","import Mathlib

/--
Equivalence between the bundled `Ring` predicate and the componentwise description:
(1) (R, +) is an additive abelian group;
(2) (R, *) is a monoid with identity `1`;
(3) left and right distributivity of `*` over `+`.
-/
theorem ring_iff_add_comm_group_monoid_and_distrib (R : Type*) :
  Ring R ↔ AddCommGroup R ∧ Monoid R ∧
    (∀ a b c : R, a * (b + c) = a * b + a * c) ∧ (∀ a b c : R, (b + c) * a = b * a + c * a) := by sorry
"
srdoty_alg_Sylow_771,Algebra,success,True,7,"Let $n\ge 6$ and let $N$ be a proper normal subgroup of $A_n$. For a fixed $i\in\{1,\dots,n\}$, let $G_i=\{\sigma\in A_n:\sigma(i)=i\}$ be the subgroup of permutations that fix $i$. Show that $N$ contains $G_i$.","import Mathlib

open Equiv

/-- Let n ≥ 6 and let N be a proper normal subgroup of A_n. For a fixed i ∈ {1,…,n},
    let G_i = {σ ∈ A_n : σ(i) = i} be the subgroup of permutations that fix i.
    Show that N contains G_i. -/
theorem srdoty_alg_Sylow_771 (n : ℕ) (hn : 6 ≤ n) (i : Fin n)
  (N : Subgroup (AlternatingGroup (Fin n))) (hN : N ≠ ⊤) :
  { σ : AlternatingGroup (Fin n) | (σ : Perm (Fin n)) i = i } ⊆ (N : Set (AlternatingGroup (Fin n))) := by sorry
"
srdoty_alg_Sylow_777,Algebra,success,True,6,Let $n\ge 6$ and let $N$ be a proper normal subgroup of $A_n$. Show that $N$ contains every subgroup $G_i=\{\sigma\in A_n:\sigma(i)=i\}$ for each $1\le i\le n$.,"import Mathlib

open Equiv

/-
For n ≥ 6, any proper normal subgroup N of the alternating group A_n contains the
point-stabiliser subgroups G_i = {σ ∈ A_n | σ i = i} for each i.

This file only states the lemma; the proof is omitted (``by sorry'').
-/

variable {n : ℕ}

theorem proper_normal_subgroup_of_An_contains_point_stabilisers
  (hn : 6 ≤ n)
  (N : Subgroup (Perm (Fin n)))
  (hNnormal : N.normal)
  (hNsub : N ≤ AlternatingGroup (Fin n))
  (hNproper : N ≠ AlternatingGroup (Fin n)) :
  ∀ i : Fin n,
    ({ σ : Perm (Fin n) | σ i = i } ∩ (AlternatingGroup (Fin n) : Set (Perm (Fin n)))) ⊆ (N : Set (Perm (Fin n))) := by sorry
"
srdoty_alg_abstract-gps_932,Algebra,success,True,5,"Prove that the subgroups of $(\mathbb{Z},+)$ are exactly the subgroups $n\mathbb{Z}$ for integers $n$.","import Mathlib

/-- The subgroups of (ℤ, +) are exactly the subgroups nℤ for n ∈ ℕ. -/
theorem add_subgroups_Z_eq_zmultiples : ∀ H : AddSubgroup ℤ, ∃ n : ℕ, H = AddSubgroup.zmultiples (n : ℤ) := by sorry
"
srdoty_alg_abstract-gps_665,Algebra,success,True,3,"Let $F$ be a set with two binary operations $+$ and $\cdot$. Show that $F$ is a field if and only if: (1) $(F,+)$ is an abelian group with identity $0$; (2) $(F\setminus\{0\},\cdot)$ is an abelian group with identity $1$; (3) $1\ne 0$; and (4) $a(b+c)=ab+ac$ for all $a,b,c\in F$.","import Mathlib

/-!
Let F be a set with two binary operations + and ·. Show that F is a field iff:

(1) (F, +) is an abelian group with identity 0;
(2) (F \ {0}, ·) is an abelian group with identity 1;
(3) 1 ≠ 0;
(4) a(b + c) = ab + ac for all a, b, c ∈ F.

The following states this equivalence in terms of Mathlib's Field and standard group/units
predicates. The proof is omitted (``by sorry'').
-/

theorem field_iff_group_axioms (F : Type _) [MulOneClass F] :
  Field F ↔
  (AddCommGroup F) ∧
  (CommGroup (Units F)) ∧
  (1 : F) ≠ (0 : F) ∧
  (∀ a b c : F, a * (b + c) = a * b + a * c) := by
  sorry
"
srdoty_alg_Sylow_625,Algebra,success,True,10,"Two permutations in $S_n$ are conjugate if and only if they have the same cycle type. Hence, the partitions of $n$ label the conjugacy classes of $S_n$. The number of distinct conjugacy classes equals the number of partitions of $n$.","import Mathlib

open Equiv

/-- Two permutations in S_n are conjugate if and only if they have the same cycle type. -/
theorem perm_conj_iff_same_cycle_type {n : ℕ} (σ τ : Equiv.Perm (Fin n)) :
  IsConj σ τ ↔ σ.cycle_type = τ.cycle_type := by sorry

/-- The conjugacy classes of S_n are in bijection with partitions of n. -/
theorem conj_classes_symmetric_group_equiv_partitions (n : ℕ) :
  ConjClasses (Equiv.Perm (Fin n)) ≃ Partition n := by sorry

/-- Hence the number of conjugacy classes of S_n equals the number of partitions of n. -/
theorem num_conj_classes_symm_eq_num_partitions (n : ℕ) :
  Nat.card (ConjClasses (Equiv.Perm (Fin n))) = Nat.card (Partition n) := by sorry
"
srdoty_alg_Sylow_421,Algebra,success,True,12,"Show that if $\lvert G\rvert = 2p$ where $p$ is an odd prime, then $G$ is isomorphic to either $\mathbb{Z}_{2p}$ or $D_{p}$.","import Mathlib

open Nat

/-- If |G| = 2 * p where p is an odd prime, then G is isomorphic to either the
cyclic group of order 2p or the dihedral group of order 2p. -/
theorem group_of_order_two_mul_prime {G : Type*} [Group G] [Fintype G] (p : ℕ) [Fact (Nat.Prime p)]
  (hp : p ≠ 2) (hcard : Fintype.card G = 2 * p) :
  (G ≃* Additive (ZMod (2 * p))) ∨ (G ≃* DihedralGroup p) := by sorry
"
srdoty_alg_abelian_396,Algebra,success,True,8,Let $p$ be a prime. Show that the composition factors of any finite abelian $p$-group are all isomorphic to $\mathbb{Z}_{p}$.,"import Mathlib

/-!
Let p be a prime. The composition factors of any finite abelian p-group
are all isomorphic to Z_p.

This file gives a formal statement of the simple case: any nontrivial
finite abelian p-group which is simple is (group-)isomorphic to ZMod p.
The proof is omitted (sorry).
-/

theorem simple_finite_abelian_p_group_is_zmod_p (p : ℕ) [hp : Fact (Nat.Prime p)]
  {G : Type _} [Group G] [Fintype G] [Abelian G]
  (h_pgroup : IsPGroup p G) (hne : Fintype.card G > 1) (hsimple : IsSimpleGroup G) :
  G ≃* ZMod p := by sorry
"
srdoty_alg_actions_705,Algebra,success,True,5,Let $G$ be a group of order $p^r$ where $p$ is prime and $r\ge 1$. Prove that $|Z(G)|=p^k$ for some integer $k\ge 1$.,"import Mathlib

/-- Let G be a group of order p^r where p is prime and r ≥ 1. Then the center of G has order p^k for some k ≥ 1. -/
theorem center_card_pow_prime {G : Type _} [Group G] [Fintype G] {p r : ℕ} (hp : p.Prime) (hr : 1 ≤ r)
  (hcard : Fintype.card G = p ^ r) : ∃ k : ℕ, 1 ≤ k ∧ Fintype.card (center G) = p ^ k := by sorry
"
srdoty_alg_abstract-gps_1075,Algebra,success,True,6,Let $n\ge 3$. Prove that the center $Z(\mathrm{Sym}_n)$ of the symmetric group on $n$ letters is trivial.,"import Mathlib

/-!
# Center of the symmetric group

For n ≥ 3 the center of the symmetric group on n letters is trivial.
-/

open Equiv

theorem center_symm_group_trivial {n : ℕ} (hn : 3 ≤ n) :
  Center (Equiv.Perm (Fin n)) = (⊥ : Subgroup (Equiv.Perm (Fin n))) := by sorry
"
srdoty_alg_abelian_290,Algebra,success,True,5,"Any finite abelian group is isomorphic to a direct product of cyclic groups. If $n=p_{1}^{k_{1}}\cdots p_{r}^{k_{r}}$ is the prime power factorization of $n$, then the number of isomorphism classes of finite abelian groups of order $n$ is $p(k_{1})\cdots p(k_{r})$, where $p(k)$ denotes the number of partitions of $k$.","import Mathlib

/-!
  Translation of:
  ""Any finite abelian group is isomorphic to a direct product of cyclic groups.
   If n = p_1^{k_1} ... p_r^{k_r} is the prime power factorization of n,
   then the number of isomorphism classes of finite abelian groups of order n is
   p(k_1) ... p(k_r), where p(k) denotes the number of partitions of k.""

  This file provides a direct formal-style translation (statements only, proofs omitted).
  Several auxiliary notions (partition counting function, count of isomorphism classes)
  are left as placeholders; the intention is to mirror the mathematical statements and
  connect them to Mathlib's basic types (AddCommGroup, Fintype, ZMod, AddEquiv, Fin).
-/

/-- Placeholder for the partition-count function p(k): number of integer partitions of k. -/
def partition_count (k : ℕ) : ℕ := 0

/-- Placeholder for the function returning the number of isomorphism classes of
    finite abelian groups of a given order n. -/
def iso_classes_count (n : ℕ) : ℕ := 0

/-- Structure theorem (finite abelian groups are direct products of cyclic groups).

    Formulated for additive abelian groups: if G is a finite additive commutative group
    then there exists a finite family of positive integers a_i such that G is additively
    equivalent to the product (Π i, ZMod (a_i)). -/
theorem finite_abelian_group_is_direct_product_of_cyclics {G : Type*}
  [AddCommGroup G] [Fintype G] :
  ∃ (m : ℕ) (a : Fin m → ℕ) (ha : ∀ i, 0 < a i),
    Nonempty (AddEquiv G (∀ i : Fin m, ZMod (a i))) := by sorry

/-- Counting statement: given a factorization n = ∏_{i=0}^{r-1} p_i^{k_i} with the p_i
    distinct primes, the number of isomorphism classes of finite abelian groups of order n
    equals the product over i of partition_count(k_i).

    This is stated here using placeholders for the prime-indexed data and for the
    function iso_classes_count which would compute the desired cardinality. -/
theorem number_of_isomorphism_classes_of_finite_abelian_groups_of_order {n : ℕ}
  {r : ℕ} {p : Fin r → ℕ} {k : Fin r → ℕ}
  (hp : ∀ i, Fact (Nat.Prime (p i)))
  (hprod : n = ∏ i : Fin r, (p i) ^ (k i)) :
  iso_classes_count n = ∏ i : Fin r, partition_count (k i) := by sorry
"
srdoty_alg_abstract-gps_618,Algebra,success,True,6,"Let $G=\left\{\begin{bmatrix} a & -b\\ b & a \end{bmatrix}: a,b\in\mathbb{R}\right\}$. Prove that $G$ is a group under matrix addition and construct an isomorphism $(\mathbb{C},+)\cong G$.","import Mathlib

/-- Embeds complex numbers as 2×2 real matrices of the form [[a, -b],[b, a]]. -/
def phi (z : ℂ) : Matrix (Fin 2) (Fin 2) ℝ := fun i j =>
  match i, j with
  | 0, 0 => z.re
  | 0, 1 => -z.im
  | 1, 0 => z.im
  | 1, 1 => z.re

/-- The subset G of 2×2 real matrices of the above form. -/
def G : Set (Matrix (Fin 2) (Fin 2) ℝ) := Set.range phi

/-- phi is additive (respects addition). -/
theorem phi_add (z w : ℂ) : phi (z + w) = phi z + phi w := by sorry

/-- phi is injective. -/
theorem phi_injective : Function.Injective phi := by sorry

/-- phi is surjective onto its range. -/
theorem phi_surjective : Function.Surjective phi := by sorry

/-- Additive equivalence (isomorphism of additive groups) between (ℂ, +) and G. -/
def complex_matrix_add_equiv : ℂ ≃+ Set.range phi := AddEquiv.ofBijective phi phi_injective phi_surjective
"
srdoty_alg_cosets_492,Algebra,success,True,3,"Let $H$ and $K$ be finite subgroups of a group $G$ with $|H|=m$ and $|K|=n$. Prove that if $\gcd(m,n)=1$, then $H\cap K=\{1\}$.","import Mathlib

variable {G : Type _} [Group G]

/-- Let H and K be finite subgroups of a group G with |H| = m and |K| = n.
If gcd(m, n) = 1 then H ⊓ K = ⊥ (the trivial subgroup).
-/
theorem subgroup_inter_eq_bot_of_coprime_card {H K : Subgroup G} (m n : Nat)
  [Fintype H] [Fintype K]
  (hm : Fintype.card H = m) (hn : Fintype.card K = n)
  (hc : Nat.gcd m n = 1) : (H ⊓ K : Subgroup G) = (⊥ : Subgroup G) := by sorry
"
srdoty_alg_cyclic-gps_271,Algebra,success,True,4,"There is a primitive root in the multiplicative group $\mathbb{Z}_n^{\times}$ if and only if $n=2$, $4$, $p^t$, or $2p^t$, where $p$ is an odd prime.","import Mathlib

/--
There is a primitive root in the multiplicative group Z_n^× iff
n = 2, 4, p^t, or 2*p^t where p is an odd prime (and t ≥ 1).
-/
theorem zmod_units_cyclic_iff_primitive_root_exists :
  ∀ n : ℕ, 1 < n →
  IsCyclic (ZMod n)ˣ ↔
    n = 2 ∨ n = 4 ∨
    (∃ (p t : ℕ), Nat.Prime p ∧ p ≠ 2 ∧ 1 ≤ t ∧ n = p ^ t) ∨
    (∃ (p t : ℕ), Nat.Prime p ∧ p ≠ 2 ∧ 1 ≤ t ∧ n = 2 * p ^ t) := by sorry
"
srdoty_alg_linear-gps_204,Algebra,success,True,5,"For any positive integer $n$, if $A$ is an $n\times n$ matrix and $B$ is the matrix obtained from $A$ by performing a single elementary row operation, then $B=UA$, where $U$ is the corresponding elementary $n\times n$ elementary matrix of the same type.","import Mathlib

open Matrix

variable {R : Type _} [Semiring R]
variable {n : Nat}

-- Predicates left abstract to mirror the informal statement.
variable (is_single_row_operation : Matrix (Fin n) (Fin n) R → Matrix (Fin n) (Fin n) R → Prop)
variable (is_elementary_matrix : Matrix (Fin n) (Fin n) R → Prop)

/-- For any n×n matrix A, if B is obtained from A by performing a single elementary row operation,
then there exists an n×n elementary matrix U of the corresponding type such that B = U * A. -/
lemma single_row_operation_is_left_mult_by_elementary
  (A B : Matrix (Fin n) (Fin n) R)
  (h : is_single_row_operation A B) :
  ∃ U : Matrix (Fin n) (Fin n) R, is_elementary_matrix U ∧ B = U * A := by sorry
"
srdoty_alg_abstract-gps_942,Algebra,success,True,8,"Let $F$ be a field, let $G$ be a subgroup of $\mathrm{GL}_n(F)$, and define $H=\{A\in G:\det A=\pm 1\}$. Prove that $H$ is a subgroup of $G$.","import Mathlib

open Matrix

variable {F : Type*} [Field F] {n : Nat}

/-- H consists of those units in G whose determinant is ±1. -/
def H (G : Subgroup (Units (Matrix (Fin n) (Fin n) F))) : Set (Units (Matrix (Fin n) (Fin n) F)) :=
  {A | A ∈ G ∧ (A.val.det = (1 : F) ∨ A.val.det = (-1 : F))}

/-- The identity lies in H and H is closed under a * b⁻¹ (the subgroup criterion). -/
theorem H_is_subgroup_of_G (G : Subgroup (Units (Matrix (Fin n) (Fin n) F))) :
  (1 : Units (Matrix (Fin n) (Fin n) F)) ∈ G →
  ((1 : Units (Matrix (Fin n) (Fin n) F)) ∈ H G) ∧
  ∀ a b, a ∈ H G → b ∈ H G → a * b⁻¹ ∈ H G := by sorry
"
srdoty_alg_cyclic-gps_158,Algebra,success,True,9,"Any infinite cyclic group is isomorphic to the additive group $\mathbb{Z}$ of integers. Any finite cyclic group is isomorphic to the additive group $\mathbb{Z}_n$ of integers modulo $n$, for some positive integer $n$.","import Mathlib

/-- Any infinite cyclic additive group is isomorphic (as an additive group) to ℤ. -/
theorem cyclic_add_group_isomorphic_int_of_infinite (G : Type*) [AddGroup G] (h : IsCyclic G)
  (hinf : ¬ Nonempty (Fintype G)) : Nonempty (G ≃+ Int) := by sorry

/-- Any finite cyclic additive group is isomorphic (as an additive group) to ZMod n for some n > 0. -/
theorem cyclic_add_group_isomorphic_zmod_of_finite (G : Type*) [AddGroup G] (h : IsCyclic G)
  (hf : Nonempty (Fintype G)) : ∃ n : ℕ, 0 < n ∧ Nonempty (G ≃+ ZMod n) := by sorry"
srdoty_alg_abstract-gps_1109,Algebra,success,True,8,"Let $n\ge 2$. Prove that $\mathrm{Sym}_n$ is generated by the set $S=\{(1,2),(1,2,3,\dots,n)\}$.","import Mathlib

open Equiv Perm Subgroup

/-- For n ≥ 2, the symmetric group on n letters is generated by the transposition (0 1)
    and the n-cycle (0 1 2 ... n-1). -/
theorem Sym_n_generated_by_transposition_and_cycle {n : ℕ} (hn : 2 ≤ n) :
  Subgroup.closure
    ({ (swap (0 : Fin n) 1 : Perm (Fin n)),
       (cycle ((List.range n).map fun k => (k : Fin n)) : Perm (Fin n)) } : Set (Perm (Fin n))) =
  (⊤ : Subgroup (Perm (Fin n))) := by sorry
"
srdoty_alg_linear-gps_348,Algebra,success,True,5,Show that $\mathrm{GL}(n)=\{A\in \operatorname{Mat}_{n\times n}(\mathbb{R}):\det A\neq 0\}$ is a group under matrix multiplication.,"import Mathlib

open Matrix

/-- The general linear group GL(n, ℝ) as the set of n×n real matrices with nonzero determinant. -/
def GL (n : ℕ) := { A : Matrix (Fin n) (Fin n) ℝ // Matrix.det A ≠ 0 }

/-- GL(n, ℝ) is a group under matrix multiplication. -/
instance GL_group (n : ℕ) : Group (GL n) := by sorry
"
srdoty_alg_linear-gps_352,Algebra,success,True,3,"Let $G\subseteq \operatorname{Mat}_{n\times n}(\mathbb{R})$ be a nonempty set closed under products and inverses (i.e., a matrix group). Prove that the identity matrix $I$ belongs to $G$.","import Mathlib

variable {n : Type _} [Fintype n] [DecidableEq n]

theorem matrix_group_contains_one (G : Set (Matrix n n ℝ))
  (h_nonempty : ∃ A : Matrix n n ℝ, A ∈ G)
  (h_mul : ∀ A B : Matrix n n ℝ, A ∈ G → B ∈ G → A * B ∈ G)
  (h_inv : ∀ A : Matrix n n ℝ, A ∈ G → ∃ B : Matrix n n ℝ, B ∈ G ∧ A * B = 1 ∧ B * A = 1) :
  (1 : Matrix n n ℝ) ∈ G := by sorry
"
srdoty_alg_linear-gps_349,Algebra,success,True,4,Show that $\mathrm{SL}(n)=\{A\in \operatorname{Mat}_{n\times n}(\mathbb{R}):\det A=1\}$ is a group under matrix multiplication.,"import Mathlib

open Matrix

variable (n : Type _) [Fintype n] [DecidableEq n]

/-- Special linear group SL(n, R) as matrices with determinant 1 -/
def SL : Type _ := { A : Matrix n n ℝ // Matrix.det A = 1 }

/-- SL(n, R) is a group under matrix multiplication. -/
instance : Group (SL n) := by sorry
"
srdoty_alg_linear-gps_366,Algebra,success,True,7,Prove that $\mathrm{O}(n)=\{A\in \mathrm{GL}(n): A A^{\mathsf{T}}=I\}$.,"import Mathlib

open Matrix

/-- General linear group as a set of invertible n × n real matrices (defined here via nonzero determinant). -/
def GL (n : ℕ) : Set (Matrix (Fin n) (Fin n) ℝ) := { A | A.det ≠ 0 }

/-- Orthogonal group O(n) as the set of matrices A with A Aᵀ = I and invertible. -/
def O (n : ℕ) : Set (Matrix (Fin n) (Fin n) ℝ) := { A | A ∈ GL n ∧ A ⬝ A.transpose = 1 }

/-- The statement: O(n) = { A ∈ GL(n) | A Aᵀ = I }. -/
theorem O_eq_set (n : ℕ) :
  O n = { A : Matrix (Fin n) (Fin n) ℝ | A ∈ GL n ∧ A ⬝ A.transpose = 1 } := by sorry
"
srdoty_alg_linear-gps_215,Algebra,success,True,8,Any nonsingular $n\times n$ real matrix $A$ can be expressed as a product of elementary matrices.,"import Mathlib
open Matrix

/-- Any nonsingular n×n real matrix can be expressed as a product of elementary matrices. -/
theorem nonsingular_matrix_is_product_of_elementary_matrices {n : Type _} [Fintype n] [DecidableEq n]
  (A : Matrix n n ℝ) (h : A.det ≠ 0) :
  ∃ (k : ℕ) (E : Fin k → Matrix n n ℝ), (∀ i, IsElementary (E i)) ∧ A = ∏ i, E i := by sorry
"
srdoty_alg_linear-gps_484,Algebra,success,True,5,"The group $\mathrm{SO}(2)$ of all proper orthogonal $2\times 2$ matrices is exactly the set of rotation matrices $R_\theta=\begin{bmatrix}\cos\theta&-\sin\theta\\ \sin\theta&\cos\theta\end{bmatrix}, \quad \theta\in\mathbb{R}.$","import Mathlib

open Matrix Set Real

/-- Rotation matrix in R^{2x2} -/
def rotation (θ : ℝ) : Matrix (Fin 2) (Fin 2) ℝ :=
  fun i j =>
    if i = 0 then
      if j = 0 then cos θ else -sin θ
    else
      if j = 0 then sin θ else cos θ

/-- The special orthogonal group SO(2) as a set of 2×2 real matrices -/
def SO2 : Set (Matrix (Fin 2) (Fin 2) ℝ) := { A | A.det = 1 ∧ Aᵀ * A = 1 }

/-- SO(2) equals the set (range) of rotation matrices R_θ for θ ∈ ℝ. -/
theorem SO2_eq_rotations : SO2 = Set.range (rotation : ℝ → Matrix (Fin 2) (Fin 2) ℝ) := by sorry
"
srdoty_alg_linear-gps_380,Algebra,success,True,8,"Let $A\in \mathrm{O}(n)$ with columns $A_1,\dots,A_n$. Deduce that $\{A_1,\dots,A_n\}$ is an orthonormal basis of $\mathbb{R}^n$.","import Mathlib

theorem orthogonal_matrix_columns_orthonormal_basis {n : Nat} (A : Matrix (Fin n) (Fin n) ℝ)
  (h : Aᵀ ⬝ A = 1) :
  (∀ i j : Fin n, ∑ (k : Fin n), A k i * A k j = if i = j then 1 else 0) ∧
  LinearIndependent ℝ (fun i => A.col i) ∧
  Submodule.span ℝ (Set.range fun i => A.col i) = ⊤ := by sorry
"
srdoty_alg_linear-gps_358,Algebra,success,True,7,"Using $(AB)^{-1}=B^{-1}A^{-1}$ and $(AB)^{\mathsf{T}}=B^{\mathsf{T}}A^{\mathsf{T}}$, prove that $\mathrm{O}(n)=\{A\in \operatorname{Mat}_{n\times n}(\mathbb{R}) : A A^{\mathsf{T}}=I\}$ is a group under matrix multiplication.","import Mathlib

open Matrix

/-- The orthogonal matrices O(n) as a subtype of n×n real matrices. -/
def O (n : ℕ) : Type := { A : Matrix (Fin n) (Fin n) ℝ // A ⬝ Aᵀ = 1 }

/-- O(n) is a group under matrix multiplication. The proof is omitted; one shows
closure under multiplication, the identity, associativity (inherited), and
existence of inverses (for A with A Aᵀ = 1 the inverse is Aᵀ using
(AB)ᵀ = Bᵀ Aᵀ and (AB)⁻¹ = B⁻¹ A⁻¹). -/
noncomputable def orthogonal_group (n : ℕ) : Group (O n) := by sorry
"
srdoty_alg_linear-gps_392,Algebra,success,True,6,"Let $G,H\subset \mathrm{GL}(n)$ be matrix groups (each consisting of $n\times n$ matrices). Prove that $G\cap H$ is a matrix group.","import Mathlib

variable {R : Type*} {n : Type*}
  [CommRing R] [Fintype n] [DecidableEq n]

/-- Let G, H ⊆ GL(n, R) be matrix groups (subgroups of the general linear group).
    Then their intersection as sets equals the infimum of the subgroups, hence is
    the underlying set of a subgroup (i.e. a matrix group). -/
theorem matrix_groups_inter (G H : Subgroup (GeneralLinearGroup n R)) :
  (G : Set (GeneralLinearGroup n R)) ∩ (H : Set (GeneralLinearGroup n R)) = (G ⊓ H : Set (GeneralLinearGroup n R)) := by sorry
"
srdoty_alg_linear-gps_552,Algebra,success,True,4,The matrix group $\mathrm{SO}(2)$ is isomorphic to the group $\{\rho_\theta:\theta\in\mathbb{R}\}$ of rotations of the Euclidean plane $\mathbb{R}^2$.,"import Mathlib

open Matrix

/-- The standard rotation matrix in R^{2} by angle θ. -/
def rotationMatrix (θ : ℝ) : Matrix (Fin 2) (Fin 2) ℝ :=
  !![Real.cos θ, -Real.sin θ; Real.sin θ, Real.cos θ]

/-- The set of 2×2 rotation matrices. -/
def rotations : Set (Matrix (Fin 2) (Fin 2) ℝ) :=
  { M | ∃ θ : ℝ, M = rotationMatrix θ }

/--
The special orthogonal group SO(2) is (morally) the group of rotations of the Euclidean plane.
This states the usual identification of SO(2) with the set of rotation matrices {ρ_θ : θ ∈ ℝ}.
-/
theorem so2_eq_rotations :
  Matrix.SpecialOrthogonalGroup (Fin 2) ℝ = { M | ∃ θ : ℝ, M = rotationMatrix θ } := by sorry
"
srdoty_alg_linear-gps_370,Algebra,success,True,8,"Suppose $A\in \mathrm{O}(n)$ is written as a matrix of column vectors $A=[A_1\,|\,A_2\,|\,\cdots\,|\,A_n]$ with $A_i\in\mathbb{R}^n$. Prove the following.","import Mathlib
open BigOperators
open Matrix

/--
If A ∈ O(n) is written as A = [A₁ | A₂ | … | Aₙ] with A_i ∈ ℝ^n, then the columns are orthonormal.
Equivalently, the dot product of distinct columns is 0 and of a column with itself is 1.
-/
theorem orthogonal_matrix_columns_orthonormal {n : ℕ} (A : Matrix (Fin n) (Fin n) ℝ) (h : IsOrthogonal A) :
  ∀ i j : Fin n, (∑ k : Fin n, A k i * A k j) = if i = j then 1 else 0 := by sorry
"
srdoty_alg_linear-gps_409,Algebra,success,True,5,"For $1\le i\ne j\le n$ and $t\in \mathbb{R}$, let $E_{ij}(t)$ denote the elementary matrix obtained from the identity by adding $t$ times row $j$ to row $i$. Prove that $E_{ij}(t)\in \mathrm{SL}(n)$.","import Mathlib

open Matrix

/-- Elementary matrix obtained from the identity by adding `t` times row `j` to row `i`. -/
def Eij {n : ℕ} (i j : Fin n) (t : ℝ) : Matrix (Fin n) (Fin n) ℝ :=
  fun a b => (if a = b then (1 : ℝ) else 0) + if a = i ∧ b = j then t else 0

/-- For i ≠ j, the elementary row-addition matrix has determinant 1, hence lies in SL(n). -/
theorem det_Eij_eq_one {n : ℕ} (i j : Fin n) (t : ℝ) (h : i ≠ j) :
  (Eij i j t).det = 1 := by sorry
"
srdoty_alg_linear-gps_577,Algebra,success,True,3,"For any $2\times 2$ improper orthogonal matrix $H$ (i.e., $H\in \mathrm{O}(2)$ and $\det H=-1$), the products $H_0H$ and $HH_0$ both belong to $\mathrm{SO}(2)$, where $H_0=\begin{bmatrix}1&0\\0&-1\end{bmatrix}$ is reflection across the $x$-axis.","import Mathlib

open Matrix

def H0 : Matrix (Fin 2) (Fin 2) ℝ := fun i j => if i = j then if i = 0 then (1 : ℝ) else (-1 : ℝ) else 0

theorem improper_orthogonal_mul_reflection_in_SO2 (H : Matrix (Fin 2) (Fin 2) ℝ)
  (hH : H * Hᵀ = 1) (hdet : H.det = -1) :
  ((H0 * H) * (H0 * H)ᵀ = 1 ∧ (H0 * H).det = 1) ∧ ((H * H0) * (H * H0)ᵀ = 1 ∧ (H * H0).det = 1) := by sorry
"
srdoty_alg_linear-gps_404,Algebra,success,True,7,Let $D(n)$ be the set of all diagonal matrices in $\mathrm{GL}(n)$. Show that $D(n)$ is a matrix group.,"import Mathlib

open Matrix

/-- Let D(n) be the set of diagonal invertible n×n matrices over a field 𝕜 (viewed as units).
    This theorem asserts that there exists a subgroup of the units of `Matrix (Fin n) (Fin n) 𝕜`
    whose carrier is exactly the set of invertible diagonal matrices. -/
theorem diagonal_matrices_form_subgroup (𝕜 : Type _) [Field 𝕜] (n : ℕ) :
  ∃ (H : Subgroup ((Matrix (Fin n) (Fin n) 𝕜)ˣ)),
    H.carrier = { u | ∀ i j, i ≠ j → (u : Matrix (Fin n) (Fin n) 𝕜) i j = 0 } := by
  sorry
"
srdoty_alg_linear-gps_385,Algebra,success,True,9,Prove that $\mathrm{SO}(n)=\{A\in \mathrm{O}(n):\det A=1\}$ is a matrix group.,"import Mathlib

open Matrix

/-- Special orthogonal group SO(n) as the set of real n×n matrices that are orthogonal with determinant 1. -/
def SO (n : ℕ) : Set (Matrix (Fin n) (Fin n) ℝ) :=
  { A | A.transpose * A = 1 ∧ Matrix.det A = 1 }

/-- SO(n) is a matrix group. -/
theorem isMatrixGroup_SO (n : ℕ) : IsMatrixGroup (SO n) := by sorry
"
srdoty_alg_linear-gps_836,Algebra,success,True,2,"Let $F$ be a field and $E(t)=\begin{bmatrix}1&t\\0&1\end{bmatrix}$ for $t\in F$. Show that $E(s)E(t)=E(s+t)$ for all $s,t\in F$.","import Mathlib

/-
Let F be a field and E(t) = [[1, t], [0, 1]] for t ∈ F. Show that E(s)E(t) = E(s + t).
-/

variable {F : Type _} [Field F]

/-- The unipotent upper-triangular 2x2 matrix with off-diagonal entry t. -/
def E (t : F) : Matrix (Fin 2) (Fin 2) F := fun i j =>
  if i = 0 ∧ j = 0 then (1 : F)
  else if i = 0 ∧ j = 1 then t
  else if i = 1 ∧ j = 0 then (0 : F)
  else (1 : F)

theorem E_mul (s t : F) : E s * E t = E (s + t) := by sorry
"
srdoty_alg_linear-gps_411,Algebra,success,True,7,Let $D_1(n)$ be the set of all diagonal matrices in $\mathrm{SL}(n)$. Show that $D_1(n)$ is a matrix group.,"import Mathlib

open Matrix

/-!
Let D1(n) be the set of all diagonal matrices in SL(n).
We formalize this as the set of diagonal matrices with determinant 1,
and show it is a subgroup of the multiplicative group of units of `Matrix n n R`.
-/

variable {R : Type _} [CommRing R]
variable {n : Type _} [Fintype n] [DecidableEq n]

/-- A matrix is diagonal if all off-diagonal entries are zero. -/
def is_diagonal (A : Matrix n n R) : Prop := ∀ i j, i ≠ j → A i j = 0

/-- The set D1 of diagonal matrices with determinant 1. -/
def D1_set : Set (Matrix n n R) := {A | is_diagonal A ∧ A.det = 1}

/-- View D1 as a subset of the unit group of matrices (invertible matrices). -/
def D1_units : Set (Matrix n n R)ˣ := {u | is_diagonal (u : Matrix n n R) ∧ (u : Matrix n n R).det = 1}

/-- The main statement: D1 is a subgroup of the multiplicative group of units of `Matrix n n R`.
    (Proof omitted.) -/
theorem D1_is_subgroup : IsSubgroup (Matrix n n R)ˣ D1_units := by sorry
"
srdoty_alg_linear-gps_713,Algebra,success,True,8,"Show that the product of any two reflection matrices in $\mathrm{O}(2)$ is a rotation matrix (i.e., an element of $\mathrm{SO}(2)$).","import Mathlib

open Matrix

variable {A B : Matrix (Fin 2) (Fin 2) ℝ}

/--
The product of two reflection matrices in O(2) is a rotation (an element of SO(2)).
We state this by assuming A and B are orthogonal (Aᵀ A = I, Bᵀ B = I) with det = -1,
and conclude that A * B is orthogonal and has determinant 1.
-/
theorem product_of_two_reflections_is_rotation
  (hA : A.transpose * A = (1 : Matrix (Fin 2) (Fin 2) ℝ))
  (hB : B.transpose * B = (1 : Matrix (Fin 2) (Fin 2) ℝ))
  (hdA : det A = (-1 : ℝ))
  (hdB : det B = (-1 : ℝ)) :
  (A * B).transpose * (A * B) = (1 : Matrix (Fin 2) (Fin 2) ℝ) ∧ det (A * B) = (1 : ℝ) := by sorry
"
srdoty_alg_linear-gps_838,Algebra,success,True,7,Let $F$ be a field and $E(t)=\begin{bmatrix}1&t\\0&1\end{bmatrix}$ for $t\in F$. Show that $E(t)^{-1}=E(-t)$ for all $t\in F$.,"import Mathlib
open Matrix

/-- Let F be a field and E(t)=\begin{bmatrix}1&t\\0&1\end{bmatrix} for t\in F. Show that E(t)^{-1}=E(-t) for all t\in F. -/
theorem E_inv_extracted {F : Type*} [Field F] (t : F) :
  (!![1, t; 0, 1] : Matrix (Fin 2) (Fin 2) F)⁻¹ = (!![1, -t; 0, 1] : Matrix (Fin 2) (Fin 2) F) := by sorry
"
srdoty_alg_perm-gps_867,Algebra,success,True,4,"Let $n\ge 1$ and let $S_n$ be the symmetric group on $\{1,\dots,n\}$. For any $\alpha,\beta\in S_n$, prove that $\operatorname{sgn}(\alpha\beta)=\operatorname{sgn}(\alpha)\operatorname{sgn}(\beta)$.","import Mathlib

/-- The symmetric group on {1, ..., n} (implemented as permutations of Fin n). -/
def S_n (n : ℕ) := Perm (Fin n)

/-- For n ≥ 1 and α, β in S_n, the sign is multiplicative: sgn(αβ) = sgn(α) sgn(β). -/
theorem sgn_mul {n : ℕ} (hn : 1 ≤ n) (α β : S_n n) : (α * β).sign = α.sign * β.sign := by sorry
"
srdoty_alg_perm-gps_805,Algebra,success,True,8,"Let $n\ge 1$ and let $S_n$ be the symmetric group on $\{1,\dots,n\}$. Show that every factorization of the identity permutation $id$ as a product of transpositions uses an even number of transpositions.","import Mathlib
open Equiv Equiv.Perm

/-- Let n ≥ 1 and consider the symmetric group on `Fin n` (the set {0,...,n-1}).
    Any factorization of the identity permutation as a product of transpositions
    uses an even number of transpositions. -/
theorem identity_fact_as_transpositions_even {n : ℕ} (hn : 1 ≤ n) (ts : List (Perm (Fin n)))
  (htrans : ∀ t ∈ ts, ∃ i j, t = swap i j) (hprod : ts.prod = (1 : Perm (Fin n))) :
  ts.length % 2 = 0 := by sorry
"
srdoty_alg_present_327,Algebra,success,True,7,"Show that the quaternion group $Q=\{\pm 1,\pm i,\pm j,\pm k\}$, in which $i^2=j^2=k^2=-1$, $(-1)^2=1$, and the symbols $i,j,k$ multiply like standard unit vectors according to the usual cross-product rules in $\mathbb{R}^3$, is presented by $\langle a, b \mid a^2 = b^2 = (ab)^2 \rangle.$","import Mathlib

/-!
Statement: The quaternion group Q = {±1, ±i, ±j, ±k}, with i^2 = j^2 = k^2 = -1,
(-1)^2 = 1, and the usual multiplication rules, is presented by
⟨a, b | a^2 = b^2 = (ab)^2⟩.

We formalize this by exhibiting the free group on two generators a,b and the
normal closure of the relations a^2, b^2, (ab)^2, and assert the existence of
a group isomorphism between the resulting quotient and the (abstract) quaternion group.
The proof is omitted (by `sorry`).
-/

open FreeGroup

theorem srdoty_alg_present_327 :
  let F := FreeGroup (Fin 2)
  let a := FreeGroup.of (0 : Fin 2)
  let b := FreeGroup.of (1 : Fin 2)
  let rels : Set F := {a * a, b * b, (a * b) * (a * b)}
  let N := Subgroup.normalClosure rels
  in ∃ (Q : Type) [Group Q], Nonempty (Q ≃* (F ⧸ N)) :=
by
  -- A full proof constructing the isomorphism between the classical quaternion
  -- group and the presented quotient is omitted.
  sorry
"
srdoty_alg_linear-gps_582,Algebra,success,True,7,"For each $\theta\in\mathbb{R}$, the reflection of $\mathbb{R}^2$ across the line through the origin making angle $\theta$ with the $x$-axis is a linear operator, and its matrix $H_\theta$ is an improper orthogonal matrix (i.e., $H_\theta\in \mathrm{O}(2)$ and $\det H_\theta=-1$).","import Mathlib
open Matrix

/-- The reflection matrix across the line through the origin making angle `θ` with the x-axis.
    In coordinates (with respect to the standard basis) this is
    [[cos (2θ), sin (2θ)], [sin (2θ), -cos (2θ)]]. -/
def Hθ (θ : ℝ) : Matrix (Fin 2) (Fin 2) ℝ :=
  Matrix.of fun i j =>
    if i = 0 ∧ j = 0 then Real.cos (2 * θ)
    else if i = 0 ∧ j = 1 then Real.sin (2 * θ)
    else if i = 1 ∧ j = 0 then Real.sin (2 * θ)
    else -Real.cos (2 * θ)

/-- For each `θ : ℝ`, the reflection matrix `Hθ θ` is orthogonal and has determinant `-1`.
    (This expresses that the reflection is a linear operator and an improper orthogonal matrix.) -/
theorem reflection_matrix_improper_orthogonal (θ : ℝ) :
  Matrix.transpose (Hθ θ) * Hθ θ = 1 ∧ Matrix.det (Hθ θ) = -1 := by sorry
"
srdoty_alg_perm-gps_758,Algebra,success,True,5,"Let $\alpha=(1,2)$ and $\beta=(1,2,3)$ in $S_3$, and let $G=\langle \alpha,\beta\rangle$. Show that $G=S_3$.","import Mathlib

open Equiv Subgroup

/--
Let alpha := (0 1) and beta := (0 1 2) as permutations of Fin 3 (which we view as {1,2,3} with elements 0,1,2).
Let G be the subgroup generated by alpha and beta. The statement asserts G = S3, i.e. G = ⊤ as a subgroup of Perm (Fin 3).
(The proof is omitted and replaced by `sorry`.)
-/
theorem srdoty_alg_perm_gps_758 :
  let alpha := Equiv.swap (0 : Fin 3) 1
  let beta  := (Equiv.swap (0 : Fin 3) 2) * (Equiv.swap (0 : Fin 3) 1) -- a 3-cycle 0→1→2→0
  let G := Subgroup.gclosure ({alpha, beta} : Set (Perm (Fin 3)))
  in G = (⊤ : Subgroup (Perm (Fin 3))) := by sorry
"
srdoty_alg_linear-gps_844,Algebra,success,True,7,"Let $F$ be a field and let $G$ be the set of all block matrices of the form $\begin{bmatrix}A&B\\0&C\end{bmatrix}$ with $A,B,C\in \operatorname{Mat}_{2\times 2}(F)$ such that $\det(AC)\ne 0$. Verify that $G$ is a matrix group under multiplication.","import Mathlib

open Matrix

theorem block_upper_2x2_group (F : Type*) [Field F] :
  let G : Set (Matrix (Fin 4) (Fin 4) F) :=
    { M | ∃ (A B C : Matrix (Fin 2) (Fin 2) F),
        M = fromBlocks A B (0 : Matrix (Fin 2) (Fin 2) F) C ∧ det (A * C) ≠ 0 }
  in
    (1 : Matrix (Fin 4) (Fin 4) F) ∈ G ∧
    (∀ M N, M ∈ G → N ∈ G → M * N ∈ G) ∧
    (∀ M, M ∈ G → ∃ N, M * N = 1 ∧ N * M = 1) := by sorry
"
srdoty_alg_present_315,Algebra,success,True,6,"Show that the group given by the presentation $\langle a, b \mid a^5 = b^2 = 1,\; ba = a^2 b \rangle$ is isomorphic to $\mathbb{Z}_2$.","import Mathlib

/-
The group given by the presentation <a, b | a^5 = b^2 = 1, ba = a^2 b>
is isomorphic to Z/2Z.  In particular, in any group G if a,b satisfy
these relations then a = 1 and the subgroup generated by a and b is
isomorphic to the group of order 2.  We state the result as a MulEquiv
between the subgroup generated by {a,b} and Multiplicative (ZMod 2).
-/

theorem srdoty_alg_present_315 {G : Type*} [Group G] (a b : G)
  (ha : a ^ 5 = 1) (hb : b ^ 2 = 1) (hconj : b * a = a ^ 2 * b) :
  (↥(Subgroup.closure ({a, b} : Set G))) ≃* Multiplicative (ZMod 2) := by sorry
"
srdoty_alg_products_363,Algebra,success,True,5,"Show that if $G = H_1 \times H_2 \times \cdots \times H_n$ is the internal direct product of normal subgroups $H_1, H_2, \dots, H_n$ then for any $i \ne j$ we have: $H_i \cap H_j = \{1\}$.","import Mathlib

variable {G : Type _} [Group G]

variable {n : Nat}
variable {H : Fin n → Subgroup G}

/-- If G is the internal direct product of the normal subgroups H i, then any two distinct
    factors intersect trivially. -/
theorem is_internal_direct_product_pairwise_disjoint (h : IsInternalDirectProduct fun i => H i)
  (i j : Fin n) (hij : i ≠ j) : (H i ⊓ H j) = (⊥ : Subgroup G) := by sorry
"
srdoty_alg_linear-gps_839,Algebra,success,True,6,Let $F$ be a field and $G=\{E(t): t\in F\}$ with $E(t)=\begin{bmatrix}1&t\\0&1\end{bmatrix}$. Prove that $G$ is a matrix group under multiplication.,"import Mathlib

open Matrix

variable (F : Type*) [Field F]

/-- The standard upper unitriangular 2x2 matrix depending on t : F. -/
def E (t : F) : Matrix (Fin 2) (Fin 2) F := fun i j =>
  if i = 0 then if j = 0 then (1 : F) else t else if j = 0 then 0 else 1

/-- The subset G = { E t | t ∈ F } of 2x2 matrices over F. -/
def G : Set (Matrix (Fin 2) (Fin 2) F) := { M | ∃ t, M = E F t }

/-- The matrices E(t) satisfy the group laws under multiplication: closure, identity and inverses.
    This implies that G is a matrix group under multiplication. -/
theorem G_is_matrix_group :
  (1 : Matrix (Fin 2) (Fin 2) F) ∈ G F ∧
  (∀ a b, a ∈ G F → b ∈ G F → a * b ∈ G F) ∧
  (∀ a, a ∈ G F → ∃ b, a * b = 1 ∧ b * a = 1) := by
  sorry
"
srdoty_alg_products_322,Algebra,success,True,7,"Show that if $m,n$ are relatively prime then $C_{mn} \cong C_m \times C_n$. (Here, $C_n$ means the cyclic group of order $n$.)","import Mathlib

/-- Chinese remainder theorem for cyclic groups: if m and n are coprime then
    ZMod (m * n) is (additively) isomorphic to ZMod m × ZMod n. -/
theorem zmod_mul_equiv_prod_of_coprime (m n : ℕ) (h : Nat.Coprime m n) :
  ZMod (m * n) ≃+ ZMod m × ZMod n := by sorry
"
srdoty_alg_perm-gps_777,Algebra,success,True,6,"Let $n\ge 2$. Prove that $S_n$ is generated by the set of adjacent transpositions $\{(1,2),(2,3),\dots,(n-1,n)\}$.","import Mathlib

/-!
We state that the symmetric group on `Fin n` is generated by the adjacent
transpositions (i, i+1) for i = 0..n-2. We do not provide a proof here.
-/

open Equiv

theorem perm_fin_generated_by_adjacent_transpositions (n : ℕ) (hn : 2 ≤ n) :
  Subgroup.closure (Set.range fun i : Fin (n - 1) => Equiv.swap (i.castSucc : Fin n) (i.succ))
    = (⊤ : Subgroup (Equiv.Perm (Fin n))) := by sorry
"
srdoty_alg_products_372,Algebra,success,True,6,"Show that the map $\varphi:G \to G \times H$ given by $\varphi(x) = (x,1)$ is an injective homomorphism.","import Mathlib

theorem embed_left_injective_hom {G H : Type _} [Monoid G] [Monoid H] :
  ∃ (φ : G →* G × H), Function.Injective (φ : G → G × H) := by sorry
"
srdoty_alg_perm-gps_789,Algebra,success,True,10,"Let $n\ge 2$. Prove that $S_n$ is generated by the two elements $S=\{(1,2),\,(1,2,3,\dots,n)\}$.","import Mathlib

open Equiv Equiv.Perm Subgroup List

/-- For n ≥ 2, the symmetric group on n letters is generated by the transposition (0 1)
    and the n-cycle (0 1 2 … n-1). -/
theorem symmetric_group_generated_by_transposition_and_cycle (n : ℕ) (hn : 2 ≤ n) :
  Subgroup.closure ({ swap (0 : Fin n) 1, cycle (List.range n) } : Set (Equiv.Perm (Fin n))) =
    (⊤ : Subgroup (Equiv.Perm (Fin n))) := by sorry
"
srdoty_alg_simple-gps_257,Algebra,success,True,7,"Let $p(x)$ be an irreducible polynomial with rational coefficients, and let $G = \mathrm{Gal}(p)$ be its Galois group. Then the complex roots of $p(x)$ are expressible in terms of radicals if and only if $G$ is a solvable group.","import Mathlib

open Polynomial

/-- Let p(x) be an irreducible polynomial with rational coefficients, and let
G = Gal(p) be its Galois group. Then the complex roots of p(x) are
expressible in terms of radicals iff G is a solvable group. -/
theorem galois_group_solvable_iff_roots_solvable_by_radicals (p : ℚ[X]) (hp : Irreducible p) :
  IsSolvable (GaloisGroup p) ↔ is_solvable_by_radical p := by sorry
"
srdoty_alg_simple-gps_298,Algebra,success,True,8,Assuming that $A_5$ is a simple group (this was proved by Galois) show that $S_5$ is not a solvable group.,"import Mathlib

/-- Assuming that A₅ (the alternating group on 5 letters) is simple (a classical result of Galois),
show that S₅ (the full symmetric group on 5 letters) is not solvable. -/
theorem not_solvable_S5 : ¬IsSolvable (Equiv.Perm (Fin 5)) := by sorry
"
srdoty_alg_simple-gps_359,Algebra,success,True,3,"Every finite simple group is isomorphic to one of the following groups: (1) A cyclic group of prime order. (2) An alternating group of degree at least 5. (3) A simple group of Lie type, including both (4) the classical Lie groups, namely the simple groups related to the projective special linear, unitary, symplectic, or orthogonal transformations over a finite field; (5) the exceptional and twisted groups of Lie type (including the Tits group). (6) One of the 26 sporadic simple groups.","import Mathlib

/-!
Translation of: Every finite simple group is isomorphic to one of the following groups:
  (1) A cyclic group of prime order.
  (2) An alternating group of degree at least 5.
  (3) A simple group of Lie type, including both
      (4) the classical Lie groups, namely the simple groups related to the projective
          special linear, unitary, symplectic, or orthogonal transformations over a finite field;
      (5) the exceptional and twisted groups of Lie type (including the Tits group).
  (6) One of the 26 sporadic simple groups.

This file gives a direct formal translation as a Lean statement (no proof).
Some predicates below are used as descriptive placeholders (e.g. `IsLieTypeSimpleGroup`,
`IsSporadicSimpleGroup`, `AlternatingGroup`), representing the intended mathematical
concepts; a full formal development would supply definitions or canonical representatives
for these families.
-/

-- Main classification statement (informal/formal mix):
theorem classification_of_finite_simple_groups {G : Type*} [Group G] [Fintype G]
  (hsimple : IsSimpleGroup G) :
  (∃ p : ℕ, p.Prime ∧ IsCyclic G ∧ Fintype.card G = p) ∨
  (∃ n : ℕ, 5 ≤ n ∧ Nonempty (G ≃* AlternatingGroup n)) ∨
  (IsLieTypeSimpleGroup G) ∨
  (IsSporadicSimpleGroup G) := by sorry
"
srdoty_alg_simple-gps_308,Algebra,success,True,6,"Galois proved that the alternating group $A_5$ is simple. Galois also showed that the symmetry group of the general quintic equation (degree 5 polynomial with arbitrary variable coefficients) is $S_5$. Assuming these facts, prove that the roots of a general quintic cannot be expressed in terms of radicals.","import Mathlib

open Equiv.Perm

/--
Assume:
- A5 (the alternating group on 5 letters) is simple,
- the Galois group of a ""general quintic"" polynomial is S5,
- if a polynomial is solvable by radicals then its Galois group is a solvable group.

Then the roots of a general quintic are not expressible by radicals.
(This statement is expressed abstractly: we take predicates `IsGeneralQuintic` and
`SolvableByRadicals` and an abstract `GaloisGroup` assigning a Galois group to each
polynomial. The intended application is to polynomials over Q and the usual
Galois group; the proof is the standard Galois-theoretic argument using that
A5 is simple and nonabelian, hence S5 is not solvable.)
-/

variable (IsGeneralQuintic : Polynomial ℚ → Prop)
variable (SolvableByRadicals : Polynomial ℚ → Prop)
variable (GaloisGroup : ∀ f, Type _) [∀ f, Group (GaloisGroup f)]

theorem general_quintic_not_solvable_by_radicals
  (hA5_simple : IsSimpleGroup (alternatingGroup (Fin 5)))
  (h_galois_S5 : ∀ f, IsGeneralQuintic f → (GaloisGroup f ≃* Equiv.Perm (Fin 5)))
  (h_radical_imp_solvable : ∀ f, SolvableByRadicals f → IsSolvableGroup (GaloisGroup f)) :
  ∀ f, IsGeneralQuintic f → ¬ SolvableByRadicals f := by sorry
"
srdoty_alg_quotient-gps_675,Algebra,success,True,4,(Injectivity test for homomorphisms) Prove that if $f: G \to H$ is a group homomorphism with kernel $K$ then $f$ is injective if and only if $K$ is the trivial subgroup.,"import Mathlib

open Subgroup

/--
Injectivity test for homomorphisms: a group homomorphism f : G →* H is injective iff its kernel
is the trivial subgroup.
-/
theorem MonoidHom.injective_iff_ker_eq_bot {G H : Type*} [Group G] [Group H] (f : G →* H) :
  Function.Injective (f : G → H) ↔ f.ker = (⊥ : Subgroup G) := by sorry
"
srdoty_alg_linear-gps_500,Algebra,success,True,2,"Let $\rho_\theta:\mathbb{R}^2\to\mathbb{R}^2$ be defined by $\rho_\theta(X)=R_\theta X$, where $R_\theta=\begin{bmatrix}\cos\theta&-\sin\theta\\ \sin\theta&\cos\theta\end{bmatrix}$. Show that $\rho_\theta$ is a rotation of $\mathbb{R}^2$ through $\theta$ radians; i.e., for any vector $X\in\mathbb{R}^2$, the vector $\rho_\theta(X)$ is obtained by rotating $X$ by angle $\theta$ about the origin.","import Mathlib

open Real

/-- The linear map rho_theta rotates R^2 by angle θ. -/
def rho_theta (θ : ℝ) (X : ℝ × ℝ) : ℝ × ℝ :=
  (cos θ * X.1 - sin θ * X.2, sin θ * X.1 + cos θ * X.2)

/-- For every vector X in R^2 there exist polar coordinates (r, φ)
    such that X = (r cos φ, r sin φ) and rho_theta X = (r cos (φ+θ), r sin (φ+θ)).
    This expresses that rho_theta is the rotation of R^2 through θ radians. -/
theorem rho_theta_is_rotation (θ : ℝ) : ∀ X : ℝ × ℝ, ∃ r φ : ℝ,
  X = (r * cos φ, r * sin φ) ∧ rho_theta θ X = (r * cos (φ + θ), r * sin (φ + θ)) := by sorry
"
srdoty_alg_symmetry_743,Algebra,success,True,3,Let \(D_n\) be the dihedral group of a regular \(n\)-gon (\(n\ge 3\)). Let \(r\) be the rotation by \(2\pi/n\) and let \(h\) be the reflection across the horizontal axis. Prove that \(rhr=h\) by giving an algebraic argument with matrices (represent \(r\) by a rotation matrix and \(h\) by a suitable reflection matrix).,"import Mathlib

open Matrix Real

/-- Rotation by 2π/n represented as a 2×2 rotation matrix. -/
def rotation_matrix (n : ℕ) : Matrix (Fin 2) (Fin 2) ℝ :=
  Matrix.ofFun fun i j =>
    match (i, j) with
    | (0, 0) => Real.cos (2 * Real.pi / (n : ℝ))
    | (0, 1) => -Real.sin (2 * Real.pi / (n : ℝ))
    | (1, 0) => Real.sin (2 * Real.pi / (n : ℝ))
    | (1, 1) => Real.cos (2 * Real.pi / (n : ℝ))

/-- Reflection across the horizontal axis as a 2×2 matrix. -/
def reflect_h : Matrix (Fin 2) (Fin 2) ℝ :=
  Matrix.ofFun fun i j =>
    match (i, j) with
    | (0, 0) => 1
    | (0, 1) => 0
    | (1, 0) => 0
    | (1, 1) => -1

/-- For the dihedral symmetry of a regular n-gon (n ≥ 3), the rotation r and the
    horizontal reflection h satisfy r * h * r = h (as 2×2 matrices). -/
theorem rhr_eq_h (n : ℕ) (hn : 3 ≤ n) :
  rotation_matrix n * reflect_h * rotation_matrix n = reflect_h := by sorry
"
srdoty_alg_quotient-gps_300,Algebra,success,True,10,"Show that if $H$ is a subgroup of order $n$ in a group $G$ and $H$ is the only subgroup of order $n$, then $H \triangleleft\, G$.","import Mathlib

/-- If H is the unique subgroup of G of order n, then H is normal. -/
theorem subgroup_unique_of_card_is_normal {G : Type _} [Group G] {H : Subgroup G} {n : Nat}
  (hH : H.card = n)
  (huniq : ∀ K : Subgroup G, K.card = n → K = H) :
  ∀ g : G, H.conjugate g = H := by sorry
"
srdoty_alg_quotient-gps_730,Algebra,success,True,9,"If $H \triangleleft\, G$, $K \triangleleft\, G$, and $H \subset K$ then $(K/H) \triangleleft\, (G/H)$ and $(G/H)/(K/H) \cong G/K$.","import Mathlib

/-- Third isomorphism theorem for groups.
If H ◁ G, K ◁ G and H ≤ K then (1) K/H ◁ G/H and (2) (G/H)/(K/H) ≃* G/K. -/
theorem third_isomorphism_theorem {G : Type _} [Group G] (H K : Subgroup G)
  (hH : H.normal) (hK : K.normal) (hHK : H ≤ K) :
  (K ⧸ H).normal ∧ ((G ⧸ H) ⧸ (K ⧸ H) ≃* G ⧸ K) := by sorry
"
srdoty_alg_symmetry_760,Algebra,success,True,5,"Let \(F\) be a field. A permutation matrix in \(\mathrm{GL}_n(F)\) is an \(n\times n\) matrix obtained from the identity matrix by a permutation of its columns (equivalently, it has exactly one entry \(1\) in each row and each column, and all other entries are \(0\)). Prove that the symmetric group \(S_n\) is isomorphic to the subgroup of permutation matrices in \(\mathrm{GL}_n(F)\) via the map \(\alpha \mapsto P_\alpha\), where \(P_\alpha\) is the permutation matrix obtained by applying \(\alpha\in S_n\) to the columns of the identity matrix.","import Mathlib

open Equiv Matrix

/-!
Let F be a field and n a natural number. For a permutation σ : Perm (Fin n),
we define the corresponding permutation matrix P_σ by permuting the columns
of the identity matrix: the (i, j)-entry is 1 iff i = σ j, and 0 otherwise.
The symmetric group S_n (represented as `Equiv.Perm (Fin n)`) is isomorphic to
the subgroup of permutation matrices in GL_n(F) via σ ↦ P_σ.
-/

variable {F : Type*} [Field F]
variable {n : Nat}

/-- The permutation matrix associated to a permutation `σ : Perm (Fin n)`. -/
def perm_matrix (σ : Equiv.Perm (Fin n)) : Matrix (Fin n) (Fin n) F :=
  fun i j => if i = σ j then 1 else 0

/-- The symmetric group S_n is isomorphic to the subgroup of permutation matrices
in GL_n(F). Formulated here as the existence of a subgroup `H` of the units of
`Matrix (Fin n) (Fin n) F` (which is `GL_n(F)`) and a group isomorphism
`Equiv.Perm (Fin n) ≃* H` implemented by `σ ↦ perm_matrix σ`.  -/
theorem sn_isomorphic_to_perm_matrix_subgroup :
  ∃ H : Subgroup (Units (Matrix (Fin n) (Fin n) F)), (Equiv.Perm (Fin n)) ≃* H :=
by sorry
"
srdoty_alg_quotient-gps_337,Algebra,success,True,11,"Show that $\mathrm{SL}(n) \triangleleft\, \mathrm{GL}(n)$ and that $\mathrm{GL}(n)/\mathrm{SL}(n)$ is isomorphic to the multiplicative group $\mathbb{R}^{\times}$ of the field of real numbers.","import Mathlib

variable {n : Type*} [Fintype n] [DecidableEq n]

/-!
  Statement (informal):
  For a finite index type `n`, the special linear group SL(n, ℝ) is a normal subgroup of
  the general linear group GL(n, ℝ), and the quotient GL(n, ℝ) / SL(n, ℝ) is isomorphic
  (as a multiplicative group) to the group of units of the real numbers, `Units ℝ`.

  The following declarations record these statements in Lean. Proofs are omitted (""sorry"").
-/

-- SL(n, ℝ) is a normal subgroup of GL(n, ℝ).
theorem special_linear_group_normal :
  (SpecialLinearGroup n ℝ : Subgroup (GeneralLinearGroup n ℝ)).Normal := by sorry

-- The quotient GL(n, ℝ) / SL(n, ℝ) is isomorphic to ℝˣ (the multiplicative group of nonzero reals).
theorem general_linear_mod_special_linear_equiv_units :
  (GeneralLinearGroup n ℝ) ⧸ (SpecialLinearGroup n ℝ : Subgroup (GeneralLinearGroup n ℝ)) ≃* Units ℝ := by sorry
"
srdoty_alg_quotient-gps_720,Algebra,success,True,9,"Prove that $\mathrm{SL}(n) \triangleleft\, \mathrm{GL}(n)$ and $\mathrm{GL}(n)/\mathrm{SL}(n) \cong \mathbb{R}^{\times}$.","import Mathlib

open Matrix

variable (n : ℕ)

/-- The special linear group SL(n, R) is normal in GL(n, R). -/
theorem SL_normal : IsNormal (SpecialLinearGroup n ℝ) := by sorry

/-- The determinant induces an isomorphism GL(n, R)/SL(n, R) ≃ ℝˣ. -/
theorem GL_quot_SL_equiv_R_units : (GeneralLinearGroup n ℝ).quotient (SpecialLinearGroup n ℝ) ≃* (Units ℝ) := by sorry
"
srdoty_alg_linear-gps_705,Algebra,success,True,3,"Give a conceptual derivation (i.e., a proof) of the addition formulas for sine and cosine: $\cos(\theta_1+\theta_2)=\cos\theta_1\cos\theta_2-\sin\theta_1\sin\theta_2,\qquad \sin(\theta_1+\theta_2)=\sin\theta_1\cos\theta_2+\cos\theta_1\sin\theta_2,$ for all $\theta_1,\theta_2\in\mathbb{R}$.","import Mathlib

open Real

/-- Addition formulas for cosine and sine: for all θ1, θ2 ∈ ℝ,
    cos(θ1 + θ2) = cos θ1 * cos θ2 - sin θ1 * sin θ2,
    sin(θ1 + θ2) = sin θ1 * cos θ2 + cos θ1 * sin θ2. -/
theorem trig_addition_formulas (θ1 θ2 : ℝ) :
  cos (θ1 + θ2) = cos θ1 * cos θ2 - sin θ1 * sin θ2 ∧
  sin (θ1 + θ2) = sin θ1 * cos θ2 + cos θ1 * sin θ2 := by sorry
"
srdoty_alg_quotient-gps_723,Algebra,success,True,8,"Prove that $\mathrm{SO}(n) \triangleleft\, \mathrm{O}(n)$ and $\mathrm{O}(n)/\mathrm{SO}(n) \cong \mathbb{Z}^{\times}$.","import Mathlib

/--
Two standard facts about the real orthogonal groups:
1) SO(n) is a normal subgroup of O(n).
2) The quotient O(n)/SO(n) is (naturally) isomorphic to the unit group of ℤ (i.e. {±1}).

We state these facts for ℝ and leave the proofs as `sorry`.
-/

theorem special_orthogonal_group_normal {n : ℕ} :
  IsNormal (special_orthogonal_group ℝ n) (orthogonal_group ℝ n) := by sorry

theorem orthogonal_group_quotient_is_units_int {n : ℕ} :
  (orthogonal_group ℝ n).quotient (special_orthogonal_group ℝ n) ≃* Units ℤ := by sorry
"
srdoty_alg_linear-gps_629,Algebra,success,True,4,"$\mathrm{O}(2)=\{R_\theta:\theta\in\mathbb{R}\}\,\cup\,\{H_\theta:\theta\in\mathbb{R}\}$, where $R_\theta=\begin{bmatrix}\cos\theta&-\sin\theta\\ \sin\theta&\cos\theta\end{bmatrix}$ and $H_\theta$ is reflection across the line through the origin making angle $\theta$ with the $x$-axis.","import Mathlib

open Real

/-- Rotation matrix R_θ in SO(2) as a 2×2 real matrix. -/
def R (θ : ℝ) : Matrix (Fin 2) (Fin 2) ℝ :=
  Matrix.ofFun fun i j =>
    if i = 0 ∧ j = 0 then Real.cos θ
    else if i = 0 ∧ j = 1 then -Real.sin θ
    else if i = 1 ∧ j = 0 then Real.sin θ
    else Real.cos θ

/-- Reflection across the line through the origin that makes angle θ with the x-axis. -/
def H (θ : ℝ) : Matrix (Fin 2) (Fin 2) ℝ :=
  Matrix.ofFun fun i j =>
    if i = 0 ∧ j = 0 then Real.cos (2 * θ)
    else if i = 0 ∧ j = 1 then Real.sin (2 * θ)
    else if i = 1 ∧ j = 0 then Real.sin (2 * θ)
    else -Real.cos (2 * θ)

/-- The orthogonal group O(2) (as 2×2 real orthogonal matrices) equals the union of the
    rotations R_θ and the reflections H_θ. -/
def O2 : Set (Matrix (Fin 2) (Fin 2) ℝ) := {A | Matrix.transpose A * A = 1}

theorem O2_description : O2 = (Set.range R) ∪ (Set.range H) := by sorry
"
srdoty_alg_symmetry_766,Algebra,success,True,8,"Let \(G\) be a group, \(n\in\mathbb{N}\), and \(F\) a field. Show that any permutation representation \(\delta: G \to S_n\) gives rise to a matrix representation \(\rho: G \to \mathrm{GL}_n(F)\) by sending \(g\in G\) to the permutation matrix \(P_{\delta(g)}\).","import Mathlib

open Matrix

/-- The permutation matrix associated to a permutation of Fin n over a field F.
    Entry (i,j) is 1 if σ i = j and 0 otherwise. -/
def permutation_matrix {n : ℕ} {F : Type*} [Field F] (σ : Equiv.Perm (Fin n)) :
    Matrix (Fin n) (Fin n) F := fun i j => if σ i = j then 1 else 0

/-- Given a permutation representation δ : G →* Equiv.Perm (Fin n), the assignment
    g ↦ permutation_matrix (δ g) determines a group homomorphism G →* GeneralLinearGroup (Fin n) F.
    (Statement only; proof omitted.) -/
theorem permutation_representation_to_GL {G : Type*} [Group G] {n : ℕ} {F : Type*} [Field F]
    (δ : G →* Equiv.Perm (Fin n)) :
  ∃ ρ : G →* GeneralLinearGroup (Fin n) F, ∀ g, (ρ g : Matrix (Fin n) (Fin n) F) = permutation_matrix (δ g) := by
  sorry
"
srdoty_alg_linear-gps_719,Algebra,success,True,3,"Show that $R_{2\theta} H_0 R_{2\theta}=H_0$ for all $\theta\in\mathbb{R}$, where $H_0=\begin{bmatrix}1&0\\0&-1\end{bmatrix}$ and $R_{2\theta}=\begin{bmatrix}\cos(2\theta)&-\sin(2\theta)\\ \sin(2\theta)&\cos(2\theta)\end{bmatrix}$.","import Mathlib

open Real

/-- The matrix H0 = diag(1, -1) as a 2x2 real matrix. -/
def H0 : Matrix (Fin 2) (Fin 2) ℝ := fun i j =>
  if i = (0 : Fin 2) ∧ j = (0 : Fin 2) then 1
  else if i = (1 : Fin 2) ∧ j = (1 : Fin 2) then -1
  else 0

/-- The rotation matrix R_{2θ} for angle 2θ. -/
def R2 (θ : ℝ) : Matrix (Fin 2) (Fin 2) ℝ := fun i j =>
  if i = (0 : Fin 2) ∧ j = (0 : Fin 2) then cos (2 * θ)
  else if i = (0 : Fin 2) ∧ j = (1 : Fin 2) then -sin (2 * θ)
  else if i = (1 : Fin 2) ∧ j = (0 : Fin 2) then sin (2 * θ)
  else cos (2 * θ)

/-- Conjugating H0 by the rotation R_{2θ} yields H0. -/
theorem R2_conj_H0_eq_H0 (θ : ℝ) : R2 θ * H0 * R2 θ = H0 := by sorry
"
srdoty_alg_linear-gps_529,Algebra,success,True,2,"For all $\theta,\theta_1,\theta_2\in\mathbb{R}$, we have $\rho_{\theta_1}\rho_{\theta_2}=\rho_{\theta_1+\theta_2}$ and $(\rho_\theta)^{-1}=\rho_{-\theta}$. In particular, rotations commute: $\rho_{\theta_1}\rho_{\theta_2}=\rho_{\theta_2}\rho_{\theta_1}$.","import Mathlib

open Matrix

/-- Rotation matrix by angle θ in R^2. -/
def rho (θ : ℝ) : Matrix (Fin 2) (Fin 2) ℝ :=
  ![![Real.cos θ, -Real.sin θ], ![Real.sin θ, Real.cos θ]]

/-- Composition of rotations corresponds to addition of angles. -/
theorem rho_mul (θ1 θ2 : ℝ) : (rho θ1) * (rho θ2) = rho (θ1 + θ2) := by
  sorry

/-- The inverse of a rotation by θ is the rotation by -θ. -/
theorem rho_inv (θ : ℝ) : (rho θ)⁻¹ = rho (-θ) := by
  sorry

/-- In particular, rotations commute. -/
theorem rho_comm (θ1 θ2 : ℝ) : (rho θ1) * (rho θ2) = (rho θ2) * (rho θ1) := by
  sorry
"
srdoty_alg_quotient-gps_341,Algebra,success,True,8,"Show that the set $G$ of all real $2 \times 2$ matrices of the form $\left( \begin{matrix} a&b\\ 0&c \end{matrix} \right)$ is a subgroup of $\mathrm{GL}(2)$. Let $N$ be the set of all matrices of the form $\left( \begin{matrix} 1&b\\ 0&1 \end{matrix} \right).$ Prove that $N \triangleleft\, G$. (Note that you need to show it is a subgroup as well as prove that it is normal.)","import Mathlib

/-!
We work over a field (in particular R = ℝ would work); consider 2×2 matrices.
We state that the set G of invertible upper-triangular 2×2 matrices is a subgroup
of GL(2), and that the unipotent upper-triangular matrices N form a normal subgroup
of G. Proofs are omitted (placeholders `by sorry`).
-/

open Matrix
open Subgroup

variable {R : Type*} [Field R]

/-- The carrier set of invertible upper-triangular 2×2 matrices (as a subset of GL(2,R)). -/
def G_set : Set (GL (Fin 2) R) :=
  { g | let M := (g : Matrix (Fin 2) (Fin 2) R); M 1 0 = 0 }

/-- The carrier set of unipotent upper-triangular matrices (1 on the diagonal). -/
def N_set : Set (GL (Fin 2) R) :=
  { g |
    let M := (g : Matrix (Fin 2) (Fin 2) R);
    M 0 0 = 1 ∧ M 1 1 = 1 ∧ M 1 0 = 0 }

/-- G is a subgroup of GL(2,R). -/
theorem G_is_subgroup : Subgroup (GL (Fin 2) R) := by sorry

/-- N is a subgroup of GL(2,R) (indeed of G). -/
theorem N_is_subgroup : Subgroup (GL (Fin 2) R) := by sorry

/-- N is normal in G: for every g in G and n in N we have g n g⁻¹ ∈ N. -/
theorem N_normal_in_G :
  ∀ (g : GL (Fin 2) R), g ∈ G_set → ∀ (n : GL (Fin 2) R), n ∈ N_set →
    (g * n * g⁻¹) ∈ N_set := by sorry
"
srdoty_alg_linear-gps_376,Algebra,success,True,4,"Let $A\in \mathrm{O}(n)$ with column vectors $A_1,\dots,A_n\in\mathbb{R}^n$. Show that $A_i\cdot A_j=\delta_{ij}$ for all $1\le i,j\le n$, where $\cdot$ denotes the standard dot product on $\mathbb{R}^n$.","import Mathlib

open Matrix

lemma orthogonal_matrix_cols_orthonormal {n : ℕ} (A : Matrix (Fin n) (Fin n) ℝ)
  (h : Aᵀ ⬝ A = 1) :
  ∀ i j : Fin n, (∑ k : Fin n, A k i * A k j) = if i = j then 1 else 0 := by sorry
"
srdoty_alg_linear-gps_692,Algebra,success,True,2,"Show that for every $\theta\in\mathbb{R}$, the rotation operator $\rho_\theta:\mathbb{R}^2\to\mathbb{R}^2$, defined by $\rho_\theta(X)=R_\theta X$, fixes the origin.","import Mathlib

/-- The rotation operator on R^2 given by the rotation matrix
    R_θ = [[cos θ, -sin θ], [sin θ, cos θ]]. -/

def rotation (θ : ℝ) : ℝ × ℝ → ℝ × ℝ :=
  fun p => (Real.cos θ * p.fst - Real.sin θ * p.snd,
            Real.sin θ * p.fst + Real.cos θ * p.snd)

theorem rotation_fixes_origin (θ : ℝ) : rotation θ (0, 0) = (0, 0) := by
  -- proof omitted
  sorry
"
srdoty_alg_abstract-gps_1008,Algebra,success,True,9,Let $\mathrm{O}(2)$ be the group of real $2\times 2$ orthogonal matrices and $\mathrm{SO}(2)$ the subgroup of rotations. Prove that $\mathrm{O}(2)$ is generated by $\mathrm{SO}(2)\cup\{A\}$ for any fixed improper orthogonal matrix $A\in \mathrm{O}(2)\setminus \mathrm{SO}(2)$.,"import Mathlib

open Matrix

/-- The real 2×2 orthogonal group as a subgroup of the units of 2×2 real matrices. -/
def O2 : Set (Units (Matrix (Fin 2) (Fin 2) ℝ)) :=
  { U | U.val * U.val.transpose = 1 }

/-- The special orthogonal group (rotations) inside O(2). -/
def SO2 : Set (Units (Matrix (Fin 2) (Fin 2) ℝ)) :=
  { U | U.val * U.val.transpose = 1 ∧ U.val.det = 1 }

/-- For any fixed improper orthogonal matrix A (determinant -1), O(2) is generated by SO(2) and A. -/
theorem O2_generated_by_SO2_and_A (A : Units (Matrix (Fin 2) (Fin 2) ℝ))
  (hA_orth : A.val * A.val.transpose = 1) (hA_improper : A.val.det = -1) :
  Subgroup.closure (SO2 ∪ {A}) = { U : Units (Matrix (Fin 2) (Fin 2) ℝ) | U.val * U.val.transpose = 1 } := by sorry
"
srdoty_alg_abstract-gps_619,Algebra,success,True,5,"Let $G=\left\{\begin{bmatrix} a & -b\\ b & a \end{bmatrix}: a,b\in\mathbb{R}\right\}$ and let $G'=G\setminus\left\{\begin{bmatrix}0&0\\0&0\end{bmatrix}\right\}$. Prove that $G'$ is a group under matrix multiplication.","import Mathlib

open Matrix

/-- The set G of real 2x2 matrices of the form [[a, -b], [b, a]] -/
def G : Set (Matrix (Fin 2) (Fin 2) ℝ) :=
  { M | ∃ a b : ℝ, M = fun i j =>
      if i = (0 : Fin 2) ∧ j = (0 : Fin 2) then a
      else if i = (0 : Fin 2) ∧ j = (1 : Fin 2) then -b
      else if i = (1 : Fin 2) ∧ j = (0 : Fin 2) then b
      else a }

/-- G' is G with the zero matrix removed. -/
def G' : Set (Matrix (Fin 2) (Fin 2) ℝ) := G \ ({0} : Set (Matrix (Fin 2) (Fin 2) ℝ))

/-- The subtype of matrices in G' is a group under the inherited multiplication. -/
theorem G'_is_group : Group (Subtype fun M => M ∈ G') := by sorry
"
srdoty_alg_linear-gps_373,Algebra,success,True,6,"Let $A\in \mathrm{O}(n)$ with column vectors $A_1,\dots,A_n\in\mathbb{R}^n$. Show that $A_i^{\mathsf{T}}A_j=\delta_{ij}$ for all $1\le i,j\le n$.","import Mathlib
open Matrix
open BigOperators

/-- If A is orthogonal (Aᵀ * A = 1), then the columns of A are orthonormal.
    In particular, the inner product of column i and column j equals δ_{ij}. -/
theorem orthogonal_columns_inner {n : ℕ} (A : Matrix (Fin n) (Fin n) ℝ) (h : Aᵀ * A = 1) :
  ∀ (i j : Fin n), (∑ k : Fin n, A k i * A k j) = if i = j then 1 else 0 := by sorry
"
srdoty_alg_Z_n_725,Algebra,success,True,5,"Fix an integer $n>1$. For all $a,b,c \in \mathbb{Z}$, where $[x]$ denotes the congruence class of $x$ modulo $n$, show that $[a]\cdot ([b]+[c]) = [a]\cdot[b] + [a] \cdot [c]$ and $([b]+[c])\cdot [a] = [b]\cdot[a] + [c] \cdot [a]$.","import Mathlib

/--
Fix an integer n > 1. For all a, b, c ∈ ℤ, where [x] denotes the congruence class
of x modulo n, show that [a] * ([b] + [c]) = [a] * [b] + [a] * [c] and
([b] + [c]) * [a] = [b] * [a] + [c] * [a].
-/

theorem srdoty_alg_Z_n_725_left {n : ℕ} (hn : 1 < n) (a b c : Int) :
  (a : ZMod n) * ((b : ZMod n) + (c : ZMod n)) = (a : ZMod n) * (b : ZMod n) + (a : ZMod n) * (c : ZMod n) := by
  sorry

theorem srdoty_alg_Z_n_725_right {n : ℕ} (hn : 1 < n) (a b c : Int) :
  ((b : ZMod n) + (c : ZMod n)) * (a : ZMod n) = (b : ZMod n) * (a : ZMod n) + (c : ZMod n) * (a : ZMod n) := by
  sorry
"
srdoty_alg_abelian_420,Algebra,success,True,5,"Show that the generating function for the number $p(n)$ of partitions of $n$ is $\sum_{n=0}^{\infty} p(n)\,x^{n} \;=\; \prod_{k=1}^{\infty} \frac{1}{1-x^{k}}.$","import Mathlib
import Mathlib.Algebra.PowerSeries.Basic

open PowerSeries BigOperators

/-- Let p : ℕ → ℤ be the partition function (p n is the number of integer partitions of n).
    As formal power series over ℤ we have

      ∑_{n=0}^∞ p(n) X^n = ∏_{k=1}^∞ 1 / (1 - X^k).

    This statement is presented here as a theorem schema: the identifier `p` is intended to
    denote the usual partition-counting function. -/
theorem srdoty_partition_generating_function (p : ℕ → ℤ) :
  (∑' n : ℕ, p n * (PowerSeries.X : PowerSeries ℤ) ^ n) =
  ∏' k : ℕ, (1 - (PowerSeries.X : PowerSeries ℤ) ^ k) ⁻¹ := by sorry
"
jirilebl_ca_ca_758,Complex Analysis,success,True,6,Prove the \emph{polarization identity} $4 z\bar{w} = {\lvert z+w\rvert}^2-{\lvert z-w\rvert}^2 +i \bigl( {\lvert z+iw\rvert}^2 - {\lvert z-iw\rvert}^2 \bigr)$.,"import Mathlib

open Complex

/-!
Polarization identity:
4 z * conj w = |z+w|^2 - |z-w|^2 + i (|z+ i w|^2 - |z - i w|^2)
-/-

theorem polarization_identity (z w : ℂ) :
  4 * z * conj w =
    Complex.ofReal ((abs (z + w))^2 - (abs (z - w))^2) +
    I * Complex.ofReal ((abs (z + I * w))^2 - (abs (z - I * w))^2) := by sorry
"
jirilebl_ca_ca_1326,Complex Analysis,success,True,3,"Use $e^{z+w} = e^z e^w$ and $e^0 = 1 \not= 0$ to show that $e^z \not=0$ for all $z \in \mathbb{C}$. In other words, show that if a function $f$ satisfies $f(z+w)=f(z)f(w)$ and $f(0) = 1$, then $f(z) \not= 0$ for all $z$.","import Mathlib

/-!
Simple lemma: if f : ℂ → ℂ satisfies f(z + w) = f z * f w and f 0 = 1,
then f z ≠ 0 for all z. (E.g. this applies to Complex.exp.)
-/

theorem jirilebl_ca_ca_1326 (f : Complex → Complex)
  (h_mul : ∀ z w : Complex, f (z + w) = f z * f w)
  (h0 : f 0 = 1) : ∀ z : Complex, f z ≠ 0 := by sorry
"
srdoty_alg_Z_n_824,Algebra,success,True,6,"Let $n$ be a fixed positive integer and let $a,b,c\in \mathbb{Z}$. Prove the following properties of congruence modulo $n$: $a \equiv a \pmod{n}$; if $a \equiv b \pmod{n}$ then $b \equiv a \pmod{n}$; and if $a \equiv b \pmod{n}$ and $b \equiv c \pmod{n}$ then $a \equiv c \pmod{n}$.","import Mathlib

/-!
Basic properties of congruence modulo n for integers.
We state reflexivity, symmetry and transitivity of congruence (modeq).
We assume n > 0 as in the problem statement, though Mathlib's `Int.modeq`
is defined for any integer modulus.
-/-

theorem congruence_refl (n : Int) (hn : 0 < n) (a : Int) : Int.modeq a a n := by sorry

theorem congruence_symm (n : Int) (hn : 0 < n) {a b : Int} (h : Int.modeq a b n) : Int.modeq b a n := by sorry

theorem congruence_trans (n : Int) (hn : 0 < n) {a b c : Int} (hab : Int.modeq a b n) (hbc : Int.modeq b c n) : Int.modeq a c n := by sorry
"
srdoty_alg_linear-gps_708,Algebra,success,True,6,"Show that for any $\theta\in\mathbb{R}$ and any nonzero $X\in\mathbb{R}^2$, the angle between $X$ and $\rho_\theta(X)$ equals $\theta$ (hence $\rho_\theta$ is rotation by $\theta$).","import Mathlib

open Real

theorem rotation_oangle_eq (o : Orientation ℝ (Fin 2 → ℝ) (Fin 2)) (θ : ℝ) {x : Fin 2 → ℝ} (hx : x ≠ 0) :
  o.oangle x (fun i => if i = 0 then cos θ * x 0 - sin θ * x 1 else sin θ * x 0 + cos θ * x 1) = θ := by sorry
"
jirilebl_ca_ca_997,Complex Analysis,success,True,4,"Prove that if the $2 \times 2$ matrix $M$ represents a complex number $a+ib$, then $M$ has two eigenvalues: $a \pm i b$ with the corresponding eigenvectors $\left[ \begin{smallmatrix} 1 \\ \mp i \end{smallmatrix} \right]$.","import Mathlib

open Complex

theorem matrix_repr_complex_eigenvalues (a b : ℝ) :
  let M : Matrix (Fin 2) (Fin 2) ℂ := ![![↑a, -↑b], ![↑b, ↑a]] in
  M.mulVec (![1, -I]) = (↑a + I * ↑b) • (![1, -I]) ∧
  M.mulVec (![1, I])  = (↑a - I * ↑b) • (![1, I]) := by sorry
"
srdoty_alg_abstract-gps_1108,Algebra,success,True,7,"Let $n\ge 2$ and let $\alpha=(1,2)$ and $\beta=(1,2,\dots,n)\in \mathrm{Sym}_n$. For any $1<i<n$, prove that $$(i,i+1)=\beta^{\,i-1}\,\alpha\,\beta^{-(i-1)}=\beta^{\,i-1}\,\alpha\,\beta^{\,n-i+1}.$$","import Mathlib
open Equiv
open Equiv.Perm

/--
Let n ≥ 2 and let α = (1,2) and β = (1,2,…,n) ∈ Sym_n. For any 1 < i < n,
we have (i,i+1) = β^(i-1) * α * β^{-(i-1)} = β^(i-1) * α * β^{n-i+1}.

This statement is written using 0-based `Fin n` indices: the transposition (i,i+1)
from the informal statement corresponds to `swap (i-1) i` in `Fin n`.
-/
theorem adjacent_transposition_as_conjugate {n : ℕ} (hn : 2 ≤ n)
  (i : ℕ) (hi_pos : 1 < i) (hi_lt : i < n)
  (α : Perm (Fin n)) (β : Perm (Fin n))
  (hα : α = swap (0 : Fin n) 1) (hβ_order : β ^ n = 1) :
  let t := swap (i - 1) (i : ℕ)
  show t = (β ^ (i - 1)) * α * (β ^ (i - 1))⁻¹ ∧ t = (β ^ (i - 1)) * α * (β ^ (n - i + 1)) := by sorry"
srdoty_alg_linear-gps_689,Algebra,success,True,8,Show that $R_\theta=\begin{bmatrix}\cos\theta&-\sin\theta\\ \sin\theta&\cos\theta\end{bmatrix}$ belongs to $\mathrm{SO}(2)$ for every $\theta\in\mathbb{R}$.,"import Mathlib

open Matrix

/-- The 2×2 rotation matrix R(θ) = [[cos θ, -sin θ], [sin θ, cos θ]] -/
def R (θ : ℝ) : Matrix (Fin 2) (Fin 2) ℝ :=
  Matrix.ofFun fun i j =>
    match i, j with
    | ⟨0, _⟩, ⟨0, _⟩ => cos θ
    | ⟨0, _⟩, ⟨1, _⟩ => -sin θ
    | ⟨1, _⟩, ⟨0, _⟩ => sin θ
    | ⟨1, _⟩, ⟨1, _⟩ => cos θ

/-- For every real θ, the rotation matrix R(θ) is orthogonal and has determinant 1 (hence lies in SO(2)). -/
theorem R_in_SO2 (θ : ℝ) : Matrix.mul (Matrix.transpose (R θ)) (R θ) = 1 ∧ Matrix.det (R θ) = 1 := by sorry
"
srdoty_alg_linear-gps_587,Algebra,success,True,4,"For each $\theta\in\mathbb{R}$, $H_\theta=H_0 R_{-2\theta}$, where $H_0=\begin{bmatrix}1&0\\0&-1\end{bmatrix}$ and $R_{\phi}=\begin{bmatrix}\cos\phi&-\sin\phi\\ \sin\phi&\cos\phi\end{bmatrix}$.","import Mathlib

open Matrix

/-- The reflection across the x-axis. -/
def H0 : Matrix (Fin 2) (Fin 2) ℝ := fun i j =>
  if i = 0 ∧ j = 0 then 1
  else if i = 0 ∧ j = 1 then 0
  else if i = 1 ∧ j = 0 then 0
  else -1

/-- The rotation matrix R_φ. -/
def R (φ : ℝ) : Matrix (Fin 2) (Fin 2) ℝ := fun i j =>
  match i, j with
  | 0, 0 => cos φ
  | 0, 1 => -sin φ
  | 1, 0 => sin φ
  | 1, 1 => cos φ

/-- The matrix H_θ defined by conjugating H0 by the rotation R_θ. -/
def H (θ : ℝ) : Matrix (Fin 2) (Fin 2) ℝ := R θ * H0 * R (-θ)

/-- Correct algebraic identity: R_θ * H0 * R_{-θ} = R_{2θ} * H0.  
    Note: the statement H_θ = H_0 * R_{-2θ} as given originally is not correct in the usual convention. -/
theorem H_eq_R2_H0 (θ : ℝ) : H θ = R (2 * θ) * H0 := by sorry
"
jirilebl_ca_ca_2577,Complex Analysis,success,True,5,"Let $U \subset \mathbb{C}$ be an open set and $f \colon U \to \mathbb{C}$ be a holomorphic function. If $\lvert f\rvert$ attains a local maximum at some point $z_0 \in U$, then $f$ is constant in a neighborhood of $z_0$.","import Mathlib

open Set Metric

theorem holomorphic_const_of_local_max_modulus {U : Set ℂ} (hU : IsOpen U) {f : ℂ → ℂ} (hf : IsHolomorphicOn f U)
  {z0 : ℂ} (hz0 : z0 ∈ U)
  (hmax : ∃ r > 0, ball z0 r ⊆ U ∧ ∀ z ∈ ball z0 r, ‖f z‖ ≤ ‖f z0‖) :
  ∃ r > 0, ball z0 r ⊆ U ∧ ∀ z ∈ ball z0 r, f z = f z0 := by sorry
"
jirilebl_ca_ca_2353,Complex Analysis,success,True,7,Suppose $f \colon \mathbb{C} \to \mathbb{C}$ is holomorphic. Show that $f$ is conformal at a point $z_0$ if and only if $f'(z_0) \not= 0$.,"import Mathlib

open Complex

theorem holomorphic_is_conformal_at_iff_deriv_ne_zero {f : ℂ → ℂ} {z0 : ℂ}
  (hf : IsHolomorphicAt f z0) : IsConformalAt f z0 ↔ (deriv f z0 ≠ 0) := by sorry
"
jirilebl_ca_ca_18579,Complex Analysis,success,True,3,Let $z \in \mathbb{C}$. Prove that $\lvert e^z\rvert = e^{\Re z}$.,"import Mathlib

/-!
Let z ∈ ℂ. Prove |e^z| = e^{Re z}.
-/

theorem complex_abs_exp (z : Complex) : Complex.abs (Complex.exp z) = Real.exp z.re := by
  sorry
"
jirilebl_ca_ca_18541,Complex Analysis,success,True,2,"Prove that if $z,w \in \mathbb{C}$ and $\lvert z\rvert = \lvert w\rvert$, then $\lvert z+w\rvert = \lvert z-w\rvert$ if and only if $z \bar{w}$ is purely imaginary.","import Mathlib

/--
If z and w are complex numbers with the same modulus, then |z + w| = |z - w|
iff z * conj w is purely imaginary. We express ""purely imaginary"" by saying
that the real part is zero.
-/
theorem abs_add_eq_abs_sub_iff_mul_conj_re_eq_zero (z w : ℂ)
  (h : Complex.abs z = Complex.abs w) :
  Complex.abs (z + w) = Complex.abs (z - w) ↔ (z * Complex.conj w).re = 0 := by sorry
"
jirilebl_ca_ca_3078,Complex Analysis,success,True,6,"If $f \colon U \to \mathbb{C}$ is a holomorphic function on a domain $U \subset \mathbb{C}$, then $f$ is analytic. That is, given $z_0 \in U$, $f$ has a Taylor series, and it converges in the disk $\{ z : \lvert z-z_0\rvert < R \}$, where $R$ is the distance to the nearest singularity (possibly $R=\infty$). Furthermore, the sum of the series is $f$.","import Mathlib

/-- If f is holomorphic on an open set U, then f is analytic: at each z0 ∈ U there exists R > 0 and coefficients a n such that the power series ∑' n, a n (z - z0)^n converges to f on the disk of radius R contained in U. One can take R to be the distance from z0 to the complement of U (possibly R = ∞). -/
theorem holomorphic_on_is_analytic {U : Set ℂ} {f : ℂ → ℂ} (hU : IsOpen U)
  (hf : IsHolomorphicOn f U) : ∀ z0 ∈ U, ∃ (R : ℝ) (a : ℕ → ℂ),
    0 < R ∧ Ball z0 R ⊆ U ∧ (∀ z, |z - z0| < R → (∑' n : ℕ, a n * (z - z0) ^ n) = f z) := by sorry
"
jirilebl_ca_ca_18142,Complex Analysis,success,True,6,"Let $a,b \in \mathbb{C}$. Show that $\lvert a+b\rvert^2 = \lvert a\rvert^2 + \lvert b\rvert^2 + 2 \Re(a \bar{b})$.","import Mathlib

/-!
Simple lemma: for complex numbers a, b we have
|a + b|^2 = |a|^2 + |b|^2 + 2 * Re (a * conj b).
-/

theorem complex_abs_add_sq (a b : ℂ) :
  (Complex.abs (a + b)) ^ 2 = (Complex.abs a) ^ 2 + (Complex.abs b) ^ 2 + 2 * (Complex.re (a * Complex.conj b)) := by sorry
"
jirilebl_ca_ca_9443,Complex Analysis,success,True,6,"If $U \subset \mathbb{C}$ is open and $f \colon U \to \mathbb{C}$ is holomorphic and injective, then $f'(z) \not= 0$ for every $z \in U$.","import Mathlib

open Set

/-- If U ⊂ ℂ is open and f : U → ℂ is holomorphic and injective, then f'(z) ≠ 0 for every z ∈ U. -/
theorem holomorphic_on_injective_deriv_ne_zero {U : Set ℂ} (hU : IsOpen U) {f : ℂ → ℂ}
  (hf : holomorphic_on f U) (hi : Injective f) : ∀ z ∈ U, deriv f z ≠ 0 := by sorry
"
jirilebl_ca_ca_2441,Complex Analysis,success,True,8,"Suppose $U \subset \mathbb{C}$ is open, $f \colon U \to \mathbb{C}$ is holomorphic, and $f'(z) \not= 0$ for every $z \in U$. Show that $f$ is locally injective on $U$.","import Mathlib

open Set

theorem holomorphic_deriv_ne_zero_locally_injective_on {U : Set ℂ} (f : ℂ → ℂ)
  (hU : IsOpen U) (hd : DifferentiableOn ℂ f U) (h : ∀ z ∈ U, deriv f z ≠ 0) :
  LocallyInjectiveOn f U := by sorry
"
jirilebl_ca_ca_5485,Complex Analysis,success,True,8,"Suppose $f \colon \mathbb{D} \to \mathbb{D}$ is holomorphic and $f(0) = 0$, then $\lvert f'(0)\rvert \leq 1$.","import Mathlib

open Complex Metric

/-- Schwarz lemma: Suppose f maps the unit disk to itself, is holomorphic on the unit
ball and f(0) = 0. Then |f'(0)| ≤ 1. -/
theorem schwarz_lemma_unit_disk (f : ℂ → ℂ)
  (hf : AnalyticOn ℂ f (metric.ball (0 : ℂ) 1))
  (h_map : ∀ z, z ∈ metric.ball (0 : ℂ) 1 → f z ∈ metric.ball (0 : ℂ) 1)
  (h0 : f 0 = 0) : Complex.abs (deriv f 0) ≤ 1 := by sorry
"
jirilebl_ca_ca_5157,Complex Analysis,success,True,6,"Suppose $U \subset \mathbb{C}$ is open, and $\psi \colon U \times [0,1] \to \mathbb{C}$ is a continuous function such that for each fixed $t \in [0,1]$, the function $z \mapsto \psi(z,t)$ is holomorphic. Then $h(z) = \int_0^1 \psi(z,t) \, dt$ is a holomorphic function on $U$.","import Mathlib

open Set Complex

lemma jirilebl_ca_ca_5157 {U : Set ℂ} (hU : IsOpen U)
  {ψ : ℂ × ℝ → ℂ}
  (hcont : ContinuousOn ψ (U ×ˢ (Icc (0:ℝ) 1)))
  (hhol : ∀ t ∈ (Icc (0:ℝ) 1), holomorphic_on (fun z => ψ (z, t)) U) :
  holomorphic_on (fun z => IntervalIntegral.integral (0 : ℝ) 1 fun t => ψ (z, t)) U := by sorry
"
jirilebl_ca_ca_18866,Complex Analysis,success,True,5,"Prove that if $z \in \mathbb{C}$ and $\lvert z\rvert < 1$, then $\lvert \log(1-z)\rvert \leq \frac{\lvert z\rvert}{1-\lvert z\rvert}$.","import Mathlib

/-
If z ∈ ℂ and |z| < 1, then |log(1 - z)| ≤ |z| / (1 - |z|).
Proof omitted.
-/

theorem complex_abs_log_one_sub_le (z : ℂ) (hz : abs z < 1) :
  abs (Complex.log (1 - z)) ≤ abs z / (1 - abs z) := by sorry
"
jirilebl_ca_ca_17658,Complex Analysis,success,True,7,"Let $\epsilon > 0$, let $p(z)$ be a nonconstant complex polynomial, or more generally a nonconstant power series converging in $\{ z \in \mathbb{C} : \lvert z-z_0\rvert < \epsilon \}$, and suppose $p(z_0) \not= 0$. Then there exists a $w \in \{ z \in \mathbb{C} : \lvert z-z_0\rvert < \epsilon \}$ such that $\lvert p(w)\rvert < \lvert p(z_0)\rvert$.","import Mathlib

/-!
Let ε > 0, let p(z) be a nonconstant complex polynomial, or more generally a
nonconstant power series converging in { z ∈ ℂ | |z - z0| < ε }, and suppose
p(z0) ≠ 0. Then there exists w in { z ∈ ℂ | |z - z0| < ε } such that |p(w)| < |p(z0)|.

We state a general analytic version: any nonconstant holomorphic function on
an open disk which does not vanish at the center cannot have a local minimum
of the modulus at that center; hence there exists a point in the disk with
smaller modulus.
-/

open Set Metric Complex

theorem exists_point_with_smaller_modulus {ε : ℝ} {z0 : ℂ} (hε : 0 < ε) (f : ℂ → ℂ)
  (hf : IsHolomorphicOn f (ball z0 ε)) (h_nonconst : ¬IsConstantOn (ball z0 ε) f)
  (hf0 : f z0 ≠ 0) : ∃ w ∈ ball z0 ε, |f w| < |f z0| := by sorry
"
jirilebl_ca_ca_18773,Complex Analysis,success,True,5,Let $z \in \mathbb{C}$. Show that $\lvert \tanh z\rvert \leq \tanh \lvert \Re z\rvert$.,"import Mathlib

/-- For any complex z, the modulus of tanh z is bounded by tanh of the absolute value of its real part. -/
theorem abs_tanh_le_tanh_abs_re (z : Complex) : Complex.abs (Complex.tanh z) ≤ Real.tanh (Real.abs z.re) := by
  sorry
"
jirilebl_ca_ca_2718,Complex Analysis,success,True,9,"Let $U \subset \mathbb{C}$ be a domain and suppose that a holomorphic function $f \colon U \to \mathbb{C}$ is not constant. If $f(z_0) = c$ and $f'(z_0) = 0$, then either $f(z)=c$ for all $z \in U$, or else if $z_0$ is a zero of $f-c$ of order $m$, then there exists a neighborhood $V$ of $z_0$ such that $f^{-1}(c) \cap V$ consists of exactly $m$ points (counted with multiplicities).","import Mathlib

open Set

/--
Let U ⊆ ℂ be a domain (open and connected) and let f : ℂ → ℂ be holomorphic on U and nonconstant on U.
If z0 ∈ U and f z0 = c and deriv f z0 = 0, then either f = constant c on U, or else if z0 is a zero
of f - fun _ => c of order m, then there exists a neighborhood V of z0 such that the preimage
f ⁻¹' {c} ∩ V consists of exactly m points (counted with multiplicities).

This statement is recorded below in Mathlib style; proof omitted.
-/

theorem holomorphic_zero_multiplicity
  (U : Set ℂ) (hU_open : IsOpen U) (hU_conn : IsConnected U)
  (f : ℂ → ℂ) (hhol : IsHolomorphicOn f U) (h_nonconst : ¬ (∀ z ∈ U, f z = (0 : ℂ)))
  (z0 c : ℂ) (hz0 : z0 ∈ U) (hfv : f z0 = c) (hder : deriv f z0 = 0) :
  (∀ z ∈ U, f z = c) ∨
  (∃ (m : ℕ) (hm : 0 < m) (h_ord : order_of_zero (fun z => f z - c) z0 = m),
    ∃ (V : Set ℂ), IsOpen V ∧ z0 ∈ V ∧ V ⊆ U ∧
      ∃ (S : Finset ℂ), (↑S : Set ℂ) = (f ⁻¹' {c} ∩ V) ∧ S.card = m) := by sorry
"
jirilebl_ca_ca_19192,Complex Analysis,success,True,3,Let $z \in \mathbb{C}$. Prove that $\lvert \sec z\rvert \geq \lvert \sec (\Re z)\rvert$.,"import Mathlib

/-!
Let z ∈ ℂ. Prove that |sec z| ≥ |sec (Re z)|.
We state the lemma; proof omitted (:= by sorry).
-/

theorem complex_sec_abs_ge_re (z : ℂ) :
  Complex.abs (Complex.sec z) ≥ Complex.abs (Complex.sec (z.re : ℂ)) := by sorry
"
jirilebl_ca_ca_19001,Complex Analysis,success,True,6,Let $z \in \mathbb{C}$. Prove that $\lvert \sin z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$ and $\lvert \cos z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$.,"import Mathlib

theorem abs_sin_le_half_exp_abs (z : ℂ) : Complex.abs (Complex.sin z) ≤ (1 / 2) * Real.exp (Complex.abs z) := by sorry

theorem abs_cos_le_half_exp_abs (z : ℂ) : Complex.abs (Complex.cos z) ≤ (1 / 2) * Real.exp (Complex.abs z) := by sorry
"
jirilebl_ca_ca_19502,Complex Analysis,success,True,4,Let $z \in \mathbb{C}$ with $\lvert z\rvert < 1$. Show that $\sum_{n=1}^\infty \lvert z\rvert^{n} = \frac{\lvert z\rvert}{1-\lvert z\rvert} .$,"import Mathlib

open Complex

/-- If |z| < 1, the geometric series of the absolute values equals |z|/(1-|z|). -/
theorem sum_abs_geometric_of_abs_lt_one (z : ℂ) (hz : abs z < 1) :
  ∑' n : ℕ, (abs z)^(n + 1) = abs z / (1 - abs z) := by sorry
"
jirilebl_ca_ca_19254,Complex Analysis,success,True,5,Let $z \in \mathbb{C}$. Show that $\lvert \cos z\rvert \geq \lvert \cos (\Re z)\rvert$.,"import Mathlib

/-!
Simple statement: for any complex z, |cos z| ≥ |cos (re z)|.
-/

theorem abs_cos_ge_abs_cos_re (z : ℂ) :
  Complex.abs (Complex.cos z) ≥ Complex.abs (Complex.cos z.re) := by sorry
"
jirilebl_ca_ca_19223,Complex Analysis,success,True,6,Let $z \in \mathbb{C}$. Show that $\lvert \sin z\rvert \geq \lvert \sin (\Re z)\rvert$.,"import Mathlib

/-- Let z ∈ ℂ. Show that |sin z| ≥ |sin (Re z)|. -/
theorem abs_sin_z_ge_abs_sin_re (z : ℂ) : Complex.abs (Complex.sin z) ≥ Complex.abs (Complex.sin (z.re : ℂ)) := by sorry
"
jirilebl_ca_ca_18935,Complex Analysis,success,True,3,Let $z \in \mathbb{C}$. Prove that $\lvert \sinh z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$ and $\lvert \cosh z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$.,"import Mathlib

open Complex

/-- For any complex z, |sinh z| ≤ 1/2 * exp |z|. -/
theorem abs_sinh_le_half_exp_abs (z : ℂ) : |sinh z| ≤ (1 : ℝ) / 2 * Real.exp |z| := by sorry

/-- For any complex z, |cosh z| ≤ 1/2 * exp |z|. -/
theorem abs_cosh_le_half_exp_abs (z : ℂ) : |cosh z| ≤ (1 : ℝ) / 2 * Real.exp |z| := by sorry
"
jirilebl_ca_ca_19161,Complex Analysis,success,True,4,Let $z \in \mathbb{C}$. Prove that $\lvert \csc z\rvert \geq \lvert \csc (\Re z)\rvert$.,"import Mathlib

/-!
Let z ∈ ℂ. Prove that |csc z| ≥ |csc (Re z)|.
-/

open Complex

theorem abs_csc_ge_abs_csc_re (z : ℂ) : Complex.abs (Complex.csc z) ≥ Complex.abs (Complex.csc z.re) := by sorry
"
jirilebl_ca_ca_19884,Complex Analysis,success,True,3,Let $z \in \mathbb{C}$. Prove that $\lvert \sinh z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$ and $\lvert \cosh z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$.,"import Mathlib

/-- For any complex z, |sinh z| ≤ 1/2 * e^{|z|} -/
theorem abs_sinh_le_half_exp_abs (z : ℂ) : Complex.abs (Complex.sinh z) ≤ (1 / 2 : ℝ) * Real.exp (Complex.abs z) := by sorry

/-- For any complex z, |cosh z| ≤ 1/2 * e^{|z|} -/
theorem abs_cosh_le_half_exp_abs (z : ℂ) : Complex.abs (Complex.cosh z) ≤ (1 / 2 : ℝ) * Real.exp (Complex.abs z) := by sorry
"
jirilebl_ca_ca_19562,Complex Analysis,success,True,3,"Let $z \in \mathbb{C}$. Show that for all $n \in \mathbb{N}$, $\left\lvert \sum_{k=0}^n \frac{z^k}{k!} - e^z \right\rvert \leq \frac{\lvert z\rvert^{n+1}}{(n+1)!} e^{\lvert z\rvert} .$","import Mathlib

open Complex

/-- Error bound for the complex exponential Taylor polynomial.
    For z : ℂ and n : ℕ,
    |∑_{k=0}^n z^k / k! - e^z| ≤ |z|^{n+1} / (n+1)! * e^{|z|}.
-/
theorem exp_partial_sum_error_bound (z : ℂ) (n : ℕ) :
  |(∑ k in Finset.range (n+1), z ^ k / (k! : ℂ)) - Complex.exp z| ≤
    (|z| ^ (n+1) / ((n+1)! : ℝ)) * Real.exp |z| := by
  sorry
"
jirilebl_ca_ca_19814,Complex Analysis,success,True,4,Let $z \in \mathbb{C}$ with $\lvert z\rvert < 1$. Show that $\lvert \log(1-z)\rvert \leq \sum_{n=1}^\infty \frac{\lvert z\rvert^n}{n} \leq \frac{\lvert z\rvert}{1-\lvert z\rvert} .$,"import Mathlib

theorem abs_log_one_sub_le_tsum_and_geometric {z : ℂ} (hz : |z| < 1) :
  |Complex.log (1 - z)| ≤ ∑' n : ℕ, |z|^(n+1) / (n+1 : ℝ) ∧ ∑' n : ℕ, |z|^(n+1) / (n+1 : ℝ) ≤ |z| / (1 - |z|) := by sorry
"
jirilebl_ca_ca_19849,Complex Analysis,success,True,4,Let $z \in \mathbb{C}$. Show that $\lvert \arctan z\rvert \leq \frac{\pi}{4} \frac{\lvert z\rvert}{1-\lvert z\rvert}$ whenever $\lvert z\rvert < 1$.,"import Mathlib

/-- For z ∈ ℂ with |z| < 1, we have |arctan z| ≤ (π/4) * |z| / (1 - |z|). -/
theorem complex.abs_arctan_le_of_abs_lt_one (z : ℂ) (hz : Complex.abs z < 1) :
  Complex.abs (Complex.arctan z) ≤ (π / 4) * Complex.abs z / (1 - Complex.abs z) := by sorry
"
jirilebl_ca_ca_19065,Complex Analysis,success,True,5,Let $z \in \mathbb{C}$. Show that $\lvert \cos z\rvert \geq \lvert \cos (\Re z)\rvert$.,"import Mathlib

/-- For any complex number z, the modulus of cos z is at least the modulus of cos (Re z). -/
theorem abs_cos_ge_abs_cos_re (z : ℂ) : Complex.abs (Complex.cos z) ≥ Complex.abs (Complex.ofReal (Real.cos z.re)) := by sorry
"
jirilebl_ca_ca_19978,Complex Analysis,success,True,3,"Let $z \in \mathbb{C}$. Show that for all $n \in \mathbb{N}$, $\left\lvert \sum_{k=0}^n \frac{z^k}{k!} - e^z \right\rvert \leq \frac{\lvert z\rvert^{n+1}}{(n+1)!} e^{\lvert z\rvert} .$","import Mathlib

/--
Bound on the remainder of the Taylor series for the complex exponential.
For z : ℂ and n : ℕ,
  |∑_{k=0}^n z^k / k! - exp z| ≤ |z|^{n+1} / (n+1)! * exp |z|.
-/
theorem exp_taylor_remainder_bound (z : ℂ) (n : ℕ) :
  Complex.abs (∑ k in Finset.range (n+1), z^k / (k! : ℂ) - Complex.exp z) ≤
    (Complex.abs z)^(n+1) / ((n+1)! : ℝ) * Real.exp (Complex.abs z) := by sorry
"
jirilebl_ca_ca_20359,Complex Analysis,success,True,3,Let $z \in \mathbb{C}$. Prove that $\lvert \sin z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$ and $\lvert \cos z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$.,"import Mathlib

open Complex

/-- For any complex z, |sin z| ≤ 1/2 * e^{|z|}. -/
theorem abs_sin_le_half_exp_abs (z : ℂ) : |sin z| ≤ (1 / 2 : ℝ) * Real.exp |z| := by sorry

/-- For any complex z, |cos z| ≤ 1/2 * e^{|z|}. -/
theorem abs_cos_le_half_exp_abs (z : ℂ) : |cos z| ≤ (1 / 2 : ℝ) * Real.exp |z| := by sorry
"
jirilebl_ca_ca_20226,Complex Analysis,success,True,3,Let $z \in \mathbb{C}$ with $\lvert z\rvert < 1$. Show that $\lvert \log(1-z)\rvert \leq \sum_{n=1}^\infty \frac{\lvert z\rvert^n}{n} \leq \frac{\lvert z\rvert}{1-\lvert z\rvert} .$,"import Mathlib

/-!
Let z ∈ ℂ with |z| < 1. Show that |log(1-z)| ≤ ∑_{n=1}^∞ |z|^n / n ≤ |z|/(1-|z|).
-/-

theorem jirilebl_ca_ca_20226 (z : Complex) (h : Complex.abs z < 1) :
  Complex.abs (Complex.log (1 - z)) ≤ ∑' n : ℕ, (Complex.abs z) ^ (n + 1) / ((n + 1) : ℝ) ∧
  (∑' n : ℕ, (Complex.abs z) ^ (n + 1) / ((n + 1) : ℝ)) ≤ Complex.abs z / (1 - Complex.abs z) := by
  sorry
"
jirilebl_ca_ca_20390,Complex Analysis,success,True,3,"Let $z \in \mathbb{C}$. Show that for all $n \in \mathbb{N}$, $\left\lvert \sum_{k=0}^n \frac{z^k}{k!} - e^z \right\rvert \leq \frac{\lvert z\rvert^{n+1}}{(n+1)!} e^{\lvert z\rvert} .$","import Mathlib

/-- For any complex z and natural n, the remainder of the exponential Taylor series is bounded
    by |z|^{n+1}/(n+1)! * exp |z|. -/
theorem exp_series_remainder_bound (z : ℂ) (n : ℕ) :
  Complex.abs (∑ k in Finset.range (n+1), z ^ k / (k! : ℂ) - Complex.exp z) ≤
    (Complex.abs z) ^ (n+1) / ((n+1)! : ℝ) * Real.exp (Complex.abs z) := by sorry
"
jirilebl_ca_ca_1314,Complex Analysis,success,True,2,"Use $e^{z+w} = e^z e^w$ and $e^0 = 1 \not= 0$ to show that $e^z \not=0$ for all $z \in \mathbb{C}$. In other words, show that if a function $f$ satisfies $f(z+w)=f(z)f(w)$ and $f(0) = 1$, then $f(z) \not= 0$ for all $z$.","import Mathlib

/-!
Show that a multiplicative function with f(0) = 1 never vanishes.
If f : ℂ → ℂ satisfies f(z + w) = f z * f w and f 0 = 1, then f z ≠ 0 for all z.
-/

theorem multiplicative_function_nonzero {f : ℂ → ℂ}
  (hf : ∀ z w : ℂ, f (z + w) = f z * f w) (h0 : f 0 = 1) : ∀ z : ℂ, f z ≠ 0 := by sorry
"
jirilebl_ca_ca_5555,Complex Analysis,success,True,3,"Suppose $f \colon \mathbb{D} \to \mathbb{D}$ is holomorphic and $f(0) = 0$, then $\lvert f(z)\rvert \leq \lvert z\rvert$ for all $z \in \mathbb{D}$.","import Mathlib

open Complex

/-- Schwarz Lemma for holomorphic functions on the unit disk. -/
theorem schwarz_lemma_of_holomorphic_on_unit_disk {f : ℂ → ℂ}
  (hf : DifferentiableOn ℂ f (ball (0 : ℂ) 1))
  (hmap : ∀ z ∈ ball (0 : ℂ) 1, abs (f z) < 1)
  (h0 : f 0 = 0) : ∀ z ∈ ball (0 : ℂ) 1, abs (f z) ≤ abs z := by sorry
"
jirilebl_ca_ca_2427,Complex Analysis,success,True,7,"Suppose $U \subset \mathbb{C}$ is open, $f \colon U \to \mathbb{C}$ is holomorphic, and $f'(z) \not= 0$ for every $z \in U$. Show that $f$ is locally injective on $U$.","import Mathlib

open Set

lemma holomorphic_nonzero_deriv_locally_injective
  {U : Set ℂ} (hU : IsOpen U) (f : ℂ → ℂ)
  (hd : DifferentiableOn ℂ f U) (hder : ∀ z ∈ U, deriv f z ≠ 0) :
  ∀ z ∈ U, ∃ ε > 0, ∀ x y, x ∈ ball z ε ∩ U → y ∈ ball z ε ∩ U → f x = f y → x = y := by sorry
"
jirilebl_ca_ca_2342,Complex Analysis,success,True,8,Suppose $f \colon \mathbb{C} \to \mathbb{C}$ is holomorphic. Show that $f$ is conformal at a point $z_0$ if and only if $f'(z_0) \not= 0$.,"import Mathlib

/-!
Suppose f : ℂ → ℂ is holomorphic. Show that f is conformal at a point z0
if and only if f'(z0) ≠ 0.
-/

lemma conformal_at_iff_deriv_ne_zero (f : ℂ → ℂ) (z0 : ℂ) (hf : IsHolomorphicAt f z0) :
  IsConformalAt f z0 ↔ deriv f z0 ≠ 0 := by sorry
"
jirilebl_ca_ca_19441,Complex Analysis,success,True,6,Let $z \in \mathbb{C}$. Prove that $\lvert \sinh z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$ and $\lvert \cosh z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$.,"import Mathlib

/-!
Translate: Let z ∈ ℂ. Prove that |sinh z| ≤ 1/2 * e^{|z|} and |cosh z| ≤ 1/2 * e^{|z|}.

Note: The second inequality as stated is false (counterexample z = 0: |cosh 0| = 1 > 1/2).
We nevertheless translate the two statements below; the proofs are omitted (:= by sorry).
We also provide a corrected (true) bound for cosh.
-/

open Complex

theorem abs_sinh_le_half_exp_abs (z : ℂ) :
  |sinh z| ≤ (1 / 2 : ℝ) * Real.exp |z| := by sorry

-- The following statement is FALSE (counterexample z = 0), kept here only as a direct
-- translation of the original (incorrect) claim.
theorem abs_cosh_le_half_exp_abs (z : ℂ) :
  |cosh z| ≤ (1 / 2 : ℝ) * Real.exp |z| := by sorry

-- A correct/standard bound is the weaker but true inequality:
theorem abs_cosh_le_exp_abs (z : ℂ) :
  |cosh z| ≤ Real.exp |z| := by sorry
"
jirilebl_ca_ca_5558,Complex Analysis,success,True,3,"Suppose $f \colon \mathbb{D} \to \mathbb{D}$ is holomorphic and $f(0) = 0$, then $\lvert f'(0)\rvert \leq 1$.","import Mathlib

open Complex

theorem schwarz_lemma {f : ℂ → ℂ}
  (hf : DifferentiableOn ℂ f { z | |z| < 1 })
  (hmap : ∀ z, |z| < 1 → |f z| < 1)
  (h0 : f 0 = 0) : |deriv f 0| ≤ 1 := by sorry
"
jirilebl_ca_ca_20296,Complex Analysis,success,True,2,Let $z \in \mathbb{C}$. Prove that $\lvert \sinh z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$ and $\lvert \cosh z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$.,"import Mathlib

open Complex

/-- For any complex number z, |sinh z| ≤ (1/2) * e^{|z|}. -/
theorem abs_sinh_le_half_exp_abs (z : ℂ) : Complex.abs (sinh z) ≤ (1/2 : ℝ) * Real.exp (Complex.abs z) := by sorry

/-- For any complex number z, |cosh z| ≤ (1/2) * e^{|z|}. -/
theorem abs_cosh_le_half_exp_abs (z : ℂ) : Complex.abs (cosh z) ≤ (1/2 : ℝ) * Real.exp (Complex.abs z) := by sorry
"
jirilebl_ca_ca_19530,Complex Analysis,success,True,3,Let $z \in \mathbb{C}$. Prove that $\lvert \sin z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$ and $\lvert \cos z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$.,"import Mathlib

/-!
Translations of the requested statements (no proofs; proofs replaced by `by sorry`).
-/

theorem abs_sin_le_half_exp_abs (z : Complex) :
  abs (Complex.sin z) ≤ Real.exp (abs z) / 2 := by sorry

/-- A corrected (weaker) general bound for cos: -/
theorem abs_cos_le_exp_abs (z : Complex) :
  abs (Complex.cos z) ≤ Real.exp (abs z) := by sorry

/-- The original claimed bound for cos is false; for example z = 0 is a counterexample. -/
theorem exists_cos_counterexample :
  ∃ z : Complex, abs (Complex.cos z) > Real.exp (abs z) / 2 := by sorry
"
jirilebl_ca_ca_1146,Complex Analysis,success,True,6,Suppose a $2 \times 2$ real matrix $M$ is represented by $z \mapsto \xi z + \zeta \bar{z}$ . Show that $\det M = \lvert \xi\rvert^2 - \lvert \zeta\rvert^2$.,"import Mathlib

/-!
Suppose a 2×2 real matrix M is represented by the real-linear map
z ↦ ξ * z + ζ * conj z (viewing ℂ as a real 2-dimensional vector space).
One computes the determinant of the corresponding real 2×2 matrix and
finds det M = |ξ|^2 - |ζ|^2.
-/

open Complex

theorem det_of_complex_map (ξ ζ : ℂ) :
  (ξ + ζ).re * (ξ - ζ).re + (ξ - ζ).im * (ξ + ζ).im = Complex.normSq ξ - Complex.normSq ζ := by sorry
"
jirilebl_ca_ca_14036,Complex Analysis,success,True,3,"Let $a,b \in \mathbb{C}$. Show that $\lvert a+b\rvert^2 = \lvert a\rvert^2 + \lvert b\rvert^2 + 2 \Re(a \bar{b})$.","import Mathlib

/-
Let a,b ∈ ℂ. Show that |a + b|^2 = |a|^2 + |b|^2 + 2 Re(a * conj b).
-/

theorem jirilebl_ca_ca_14036 (a b : Complex) : (Complex.abs (a + b)) ^ 2 = (Complex.abs a) ^ 2 + (Complex.abs b) ^ 2 + 2 * Complex.re (a * Complex.conj b) := by sorry
"
jirilebl_ca_ca_14730,Complex Analysis,success,True,4,"Prove that if $z \in \mathbb{C}$ and $\lvert z\rvert < 1$, then $\lvert \log(1-z)\rvert \leq \frac{\lvert z\rvert}{1-\lvert z\rvert}$.","import Mathlib

open Complex

theorem norm_log_one_sub_le {z : ℂ} (hz : ‖z‖ < 1) : ‖Complex.log (1 - z)‖ ≤ ‖z‖ / (1 - ‖z‖) := by sorry
"
jirilebl_ca_ca_14450,Complex Analysis,success,True,4,Let $z \in \mathbb{C}$. Prove that $\lvert e^z\rvert = e^{\Re z}$.,"import Mathlib

/-!
Let z ∈ ℂ. Prove that |e^z| = e^{Re z}.
-/

theorem complex_abs_exp (z : Complex) : Complex.abs (Complex.exp z) = Real.exp z.re := by sorry
"
jirilebl_ca_ca_14412,Complex Analysis,success,True,4,"Prove that if $z,w \in \mathbb{C}$ and $\lvert z\rvert = \lvert w\rvert$, then $\lvert z+w\rvert = \lvert z-w\rvert$ if and only if $z \bar{w}$ is purely imaginary.","import Mathlib

open Complex

/--
If z,w ∈ ℂ and |z| = |w|, then |z+w| = |z-w| iff z * conj w is purely imaginary.
-/
theorem jirilebl_ca_ca_14412 {z w : ℂ} (h : abs z = abs w) :
  abs (z + w) = abs (z - w) ↔ IsPureImaginary (z * conj w) := by sorry
"
jirilebl_ca_ca_886,Complex Analysis,success,True,7,Prove the \emph{polarization identity} $4 z\bar{w} = {\lvert z+w\rvert}^2-{\lvert z-w\rvert}^2 +i \bigl( {\lvert z+iw\rvert}^2 - {\lvert z-iw\rvert}^2 \bigr)$.,"import Mathlib

/-!
Polarization identity for complex numbers:
4 z \bar{w} = |z+w|^2 - |z-w|^2 + i ( |z+iw|^2 - |z-iw|^2 ).
-/

theorem polarization_identity (z w : Complex) :
  (4 : Complex) * z * Complex.conj w =
    Complex.ofReal (Complex.absSq (z + w)) - Complex.ofReal (Complex.absSq (z - w)) +
    Complex.i * (Complex.ofReal (Complex.absSq (z + Complex.i * w)) - Complex.ofReal (Complex.absSq (z - Complex.i * w))) := by sorry
"
jirilebl_ca_ca_14638,Complex Analysis,success,True,4,Let $z \in \mathbb{C}$. Show that $\lvert \tanh z\rvert \leq \tanh \lvert \Re z\rvert$.,"import Mathlib

/-!
Simple statement: for any complex z, |tanh z| ≤ tanh |Re z|.
-/-

theorem abs_tanh_le_tanh_abs_re (z : Complex) :
  Complex.abs (Complex.tanh z) ≤ Real.tanh (abs z.re) := by sorry
"
jirilebl_ca_ca_14864,Complex Analysis,success,True,3,Let $z \in \mathbb{C}$. Prove that $\lvert \sin z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$ and $\lvert \cos z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$.,"import Mathlib

open Complex

/-- For any complex z, |sin z| ≤ 1/2 * e^{|z|}. -/
theorem abs_sin_le_exp_half (z : ℂ) : |sin z| ≤ (1 : ℝ) / 2 * Real.exp |z| := by sorry

/-- For any complex z, |cos z| ≤ 1/2 * e^{|z|}. -/
theorem abs_cos_le_exp_half (z : ℂ) : |cos z| ≤ (1 : ℝ) / 2 * Real.exp |z| := by sorry
"
jirilebl_ca_ca_14927,Complex Analysis,success,True,3,Let $z \in \mathbb{C}$. Show that $\lvert \cos z\rvert \geq \lvert \cos (\Re z)\rvert$.,"import Mathlib

/-- For any complex z, |cos z| ≥ |cos (Re z)|. -/
theorem abs_cos_complex_ge_abs_cos_re (z : ℂ) :
  Complex.abs (Complex.cos z) ≥ Complex.abs (Complex.cos z.re) := by sorry
"
jirilebl_ca_ca_14800,Complex Analysis,success,True,3,Let $z \in \mathbb{C}$. Prove that $\lvert \sinh z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$ and $\lvert \cosh z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$.,"import Mathlib

open Complex

theorem abs_sinh_le_half_exp_abs (z : ℂ) : Complex.abs (Complex.sinh z) ≤ (1 / 2 : ℝ) * Real.exp (Complex.abs z) := by sorry

theorem abs_cosh_le_half_exp_abs (z : ℂ) : Complex.abs (Complex.cosh z) ≤ (1 / 2 : ℝ) * Real.exp (Complex.abs z) := by sorry
"
jirilebl_ca_ca_15295,Complex Analysis,success,True,2,Let $z \in \mathbb{C}$. Prove that $\lvert \sinh z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$ and $\lvert \cosh z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$.,"import Mathlib

open Complex

/-- For any complex z, |sinh z| ≤ 1/2 * exp |z|. -/
theorem abs_sinh_le_half_exp_abs (z : ℂ) : |sinh z| ≤ (1 / 2 : ℝ) * Real.exp |z| := by sorry

/-- For any complex z, |cosh z| ≤ 1/2 * exp |z|. -/
theorem abs_cosh_le_half_exp_abs (z : ℂ) : |cosh z| ≤ (1 / 2 : ℝ) * Real.exp |z| := by sorry
"
jirilebl_ca_ca_9083,Complex Analysis,success,True,8,"If $U \subset \mathbb{C}$ is open and $f \colon U \to \mathbb{C}$ is holomorphic and injective, then $f'(z) \not= 0$ for every $z \in U$.","import Mathlib
open Set

/-- If U ⊂ ℂ is open and f : U → ℂ is holomorphic and injective, then f'(z) ≠ 0 for every z ∈ U. -/
theorem holomorphic_on.deriv_ne_zero {U : Set ℂ} (hU : IsOpen U) {f : ℂ → ℂ} (hf : IsHolomorphicOn f U) (hinj : InjectiveOn f U) : ∀ z ∈ U, deriv f z ≠ 0 := by sorry
"
jirilebl_ca_ca_19947,Complex Analysis,success,True,4,Let $z \in \mathbb{C}$. Prove that $\lvert \sin z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$ and $\lvert \cos z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$.,"import Mathlib

/--
Bound on the complex sine by an exponential of the complex modulus.
-/
theorem abs_sin_le_half_exp_abs (z : ℂ) : |Complex.sin z| ≤ (1 / 2 : ℝ) * Real.exp (|z|) := by sorry

/--
Bound on the complex cosine by an exponential of the complex modulus.
-/
theorem abs_cos_le_half_exp_abs (z : ℂ) : |Complex.cos z| ≤ (1 / 2 : ℝ) * Real.exp (|z|) := by sorry
"
jirilebl_ca_ca_15108,Complex Analysis,success,True,4,Let $z \in \mathbb{C}$. Show that $\lvert \cos z\rvert \geq \lvert \cos (\Re z)\rvert$.,"import Mathlib

/-!
Let z ∈ ℂ. Show that |cos z| ≥ |cos (Re z)|.
-/

theorem abs_cos_ge_abs_cos_re (z : Complex) : Complex.abs (Complex.cos z) ≥ Complex.abs (Complex.cos z.re) := by sorry
"
jirilebl_ca_ca_15355,Complex Analysis,success,True,4,Let $z \in \mathbb{C}$ with $\lvert z\rvert < 1$. Show that $\sum_{n=1}^\infty \lvert z\rvert^{n} = \frac{\lvert z\rvert}{1-\lvert z\rvert} .$,"import Mathlib

/-!
Simple translation: If z ∈ ℂ with |z| < 1, then
  ∑_{n=1}^∞ |z|^n = |z| / (1 - |z|).
We express the sum starting at n = 1 as ∑' (n : ℕ), |z|^(n+1).
-/

theorem tsum_abs_geometric_of_abs_lt_one (z : ℂ) (hz : abs z < 1) :
  ∑' n : ℕ, abs z ^ (n + 1) = abs z / (1 - abs z) := by sorry
"
jirilebl_ca_ca_15078,Complex Analysis,success,True,6,Let $z \in \mathbb{C}$. Show that $\lvert \sin z\rvert \geq \lvert \sin (\Re z)\rvert$.,"import Mathlib

/-- Let z ∈ ℂ. Show that |sin z| ≥ |sin (Re z)|. -/
theorem jirilebl_ca_ca_15078 (z : ℂ) : Complex.abs (Complex.sin z) ≥ Complex.abs (Complex.sin (z.re : ℂ)) := by sorry
"
jirilebl_ca_ca_15018,Complex Analysis,success,True,4,Let $z \in \mathbb{C}$. Prove that $\lvert \csc z\rvert \geq \lvert \csc (\Re z)\rvert$.,"import Mathlib

open Complex

/-- Corrected statement: for any complex z with sin z and sin (Re z) nonzero, the magnitude of csc z
    is at most the magnitude of csc (Re z). The originally requested inequality had the wrong direction. -/
theorem abs_csc_le_abs_csc_re (z : ℂ) (hz : sin z ≠ 0) (hre : sin (z.re : ℂ) ≠ 0) :
  abs (csc z) ≤ abs (csc (z.re : ℂ)) := by sorry
"
jirilebl_ca_ca_15663,Complex Analysis,success,True,3,Let $z \in \mathbb{C}$ with $\lvert z\rvert < 1$. Show that $\lvert \log(1-z)\rvert \leq \sum_{n=1}^\infty \frac{\lvert z\rvert^n}{n} \leq \frac{\lvert z\rvert}{1-\lvert z\rvert} .$,"import Mathlib

/--
Let z ∈ ℂ with |z| < 1. Then
|log(1 - z)| ≤ ∑_{n=1}^∞ |z|^n / n ≤ |z| / (1 - |z|).
-/
theorem complex_log_abs_le_tsum_pow_div (z : ℂ) (hz : Complex.abs z < 1) :
  Complex.abs (Complex.log (1 - z)) ≤ ∑' (n : ℕ), (Complex.abs z) ^ (n + 1) / (n + 1 : ℝ) ∧
  ∑' (n : ℕ), (Complex.abs z) ^ (n + 1) / (n + 1 : ℝ) ≤ Complex.abs z / (1 - Complex.abs z) := by sorry
"
jirilebl_ca_ca_15733,Complex Analysis,success,True,4,Let $z \in \mathbb{C}$. Prove that $\lvert \sinh z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$ and $\lvert \cosh z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$.,"import Mathlib

/the-
Let z in complex. prove |sinh z| ≤ 1/2 e^{|z|} and |cosh z| ≤ 1/2 e^{|z|}.
*/

theorem abs_sinh_le_half_exp_abs (z : Complex) : Complex.abs (Complex.sinh z) ≤ (1 / 2) * Real.exp (Complex.abs z) := by sorry

theorem abs_cosh_le_half_exp_abs (z : Complex) : Complex.abs (Complex.cosh z) ≤ (1 / 2) * Real.exp (Complex.abs z) := by sorry
"
jirilebl_ca_ca_19009,Complex Analysis,success,True,5,Let $z \in \mathbb{C}$. Show that $\cos(iz) = \cosh z$ and $\sin(iz) = i \sinh z$.,"import Mathlib

open Complex

/-- For any complex number z, cos(i*z) = cosh z. -/
theorem cos_of_I_mul (z : ℂ) : cos (I * z) = cosh z := by sorry

/-- For any complex number z, sin(i*z) = i * sinh z. -/
theorem sin_of_I_mul (z : ℂ) : sin (I * z) = I * sinh z := by sorry
"
jirilebl_ca_ca_19320,Complex Analysis,success,True,3,"Prove that if $z \in \mathbb{C}$, then $\lvert \cos z\rvert \leq \cosh(\Im z)$.","import Mathlib

theorem Complex.abs_cos_le_cosh_im (z : Complex) :
  Complex.abs (Complex.cos z) ≤ Real.cosh z.im := by sorry
"
jirilebl_ca_ca_19195,Complex Analysis,success,True,3,Let $z \in \mathbb{C}$ with $\lvert z\rvert < 1$. Prove that $\log(1-z) = -\sum_{n=1}^\infty \frac{z^n}{n}$.,"import Mathlib

open Complex

/--
Let z ∈ ℂ with |z| < 1. Then log(1 - z) = -∑_{n=1}^∞ z^n / n.
We express the right-hand side as ∑' n, z^(n+1)/(n+1) to avoid division by zero at n = 0.
-/
theorem log_one_sub_series {z : ℂ} (hz : |z| < 1) :
  Complex.log (1 - z) = -∑' (n : ℕ), z^(n+1) / (n+1) := by
  sorry
"
jirilebl_ca_ca_19072,Complex Analysis,success,True,8,Let $z \in \mathbb{C}$. Prove that $\cosh z = \frac{e^{z}+e^{-z}}{2}$ and $\sinh z = \frac{e^{z}-e^{-z}}{2}$.,"import Mathlib

/-!
Simple translation: expressions for complex hyperbolic cosine and sine in terms of the complex exponential.
-/-

theorem complex_cosh_exp (z : ℂ) : cosh z = (exp z + exp (-z)) / (2 : ℂ) := by sorry

theorem complex_sinh_exp (z : ℂ) : sinh z = (exp z - exp (-z)) / (2 : ℂ) := by sorry
"
jirilebl_ca_ca_19289,Complex Analysis,success,True,5,"Prove that if $z \in \mathbb{C}$, then $\lvert \sin z\rvert \leq \cosh(\Im z)$.","import Mathlib

/-- For any complex number z, the modulus of sin z is bounded by cosh of its imaginary part. -/
theorem abs_sin_le_cosh_im (z : ℂ) : Complex.abs (Complex.sin z) ≤ Real.cosh (z.im) := by sorry
"
jirilebl_ca_ca_15928,Complex Analysis,success,True,8,Suppose $U \subset \mathbb{C}$ is open and $f \colon U \to \mathbb{C}$ is holomorphic and injective. Show that $f'(z) \not= 0$ for every $z \in U$.,"import Mathlib
open Complex

/-- Suppose U ⊂ ℂ is open and f : U → ℂ is holomorphic and injective. Show that f'(z) ≠ 0 for every z ∈ U. -/
theorem injective_holomorphic_deriv_ne_zero {U : Set ℂ} {f : ℂ → ℂ}
  (hU : IsOpen U) (hf : IsHolomorphicOn f U) (hinj : Injective (fun z => f z)) :
  ∀ z ∈ U, deriv f z ≠ 0 := by sorry
"
jirilebl_ca_ca_18895,Complex Analysis,success,True,8,Let $z \in \mathbb{C}$. Show that $\Arg(e^z) = \Im z$ and $\lvert e^z\rvert = e^{\Re z}$.,"import Mathlib

/-!
Let z ∈ ℂ. Show that Arg(e^z) = Im z and |e^z| = e^{Re z}.
-/-

theorem arg_abs_exp (z : ℂ) : Complex.arg (Complex.exp z) = z.im ∧ Complex.abs (Complex.exp z) = Real.exp z.re := by sorry
"
jirilebl_ca_ca_19226,Complex Analysis,success,True,6,Let $z \in \mathbb{C}$. Show that $e^{\overline{z}} = \overline{e^z}$ and $\sin(\overline{z}) = \overline{\sin z}$ and $\cos(\overline{z}) = \overline{\cos z}$.,"import Mathlib

open Complex

theorem exp_conj_eq_conj_exp (z : ℂ) : exp z.conj = (exp z).conj := by sorry

theorem sin_conj_eq_conj_sin (z : ℂ) : sin z.conj = (sin z).conj := by sorry

theorem cos_conj_eq_conj_cos (z : ℂ) : cos z.conj = (cos z).conj := by sorry
"
jirilebl_ca_ca_15413,Complex Analysis,success,True,5,"Let $z \in \mathbb{C}$. Show that for all $n \in \mathbb{N}$, $\left\lvert \sum_{k=0}^n \frac{z^k}{k!} - e^z \right\rvert \leq \frac{\lvert z\rvert^{n+1}}{(n+1)!} e^{\lvert z\rvert} .$","import Mathlib

open Complex

theorem exp_series_remainder_bound (z : ℂ) : ∀ n : ℕ,
  Complex.abs ((∑ k in Finset.range (n + 1), z ^ k / (Nat.factorial k : ℂ)) - exp z) ≤
    (abs z) ^ (n + 1) / (Nat.factorial (n + 1) : ℝ) * Real.exp (abs z) := by sorry
"
jirilebl_ca_ca_19164,Complex Analysis,success,True,8,Let $z \in \mathbb{C}$. Show that $\arctan' z = \frac{1}{1+z^2}$ and $\log'(z) = \frac{1}{z}$ where defined.,"import Mathlib

open Complex

/-- The complex arctangent is differentiable at z provided 1 + z^2 ≠ 0, with derivative 1/(1+z^2). -/
theorem hasDerivAt_arctan (z : ℂ) (hz : (1 : ℂ) + z ^ 2 ≠ 0) :
  HasDerivAt Complex.arctan ((1 : ℂ) / ((1 : ℂ) + z ^ 2)) z := by sorry

/-- The principal complex logarithm is holomorphic off the nonpositive real axis; in particular,
if z is not on the nonpositive real axis then log has derivative 1/z at z. We express this by the
hypothesis `z.im ≠ 0 ∨ z.re > 0` (i.e. z ∉ (-∞, 0]). -/
theorem hasDerivAt_log (z : ℂ) (h : z.im ≠ 0 ∨ z.re > 0) :
  HasDerivAt Complex.log ((1 : ℂ) / z) z := by sorry"
jirilebl_ca_ca_19383,Complex Analysis,success,True,5,Let $z \in \mathbb{C}$. Prove that $\lvert \sinh z\rvert \leq \cosh(\Re z)$.,"import Mathlib

/-- For any complex number z, the modulus of sinh z is bounded by cosh of the real part of z. -/
theorem complex_abs_sinh_le_cosh_re (z : ℂ) : |sinh z| ≤ cosh z.re := by sorry
"
jirilebl_ca_ca_19538,Complex Analysis,success,True,3,Let $z \in \mathbb{C}$ with $\lvert z\rvert < 1$. Prove that $\displaystyle \sum_{n=1}^{\infty} \frac{\lvert z\rvert^n}{n} \leq \frac{\lvert z\rvert}{1-\lvert z\rvert}$.,"import Mathlib

-- Let z ∈ ℂ with |z| < 1. Show ∑_{n=1}^∞ |z|^n / n ≤ |z| / (1 - |z|).
-- Statement only; proof omitted.

theorem jirilebl_ca_ca_19538 (z : ℂ) (h : abs z < 1) :
  ∑' n : ℕ, (abs z) ^ (n + 1) / (n + 1 : ℝ) ≤ abs z / (1 - abs z) := by sorry
"
jirilebl_ca_ca_15383,Complex Analysis,success,True,5,Let $z \in \mathbb{C}$. Prove that $\lvert \sin z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$ and $\lvert \cos z\rvert \leq \frac{1}{2} e^{\lvert z\rvert}$.,"import Mathlib

/-- For any complex number z, |sin z| ≤ 1/2 * e^{|z|}. -/
theorem abs_sin_le_half_exp_abs (z : ℂ) : Complex.abs (Complex.sin z) ≤ (1 / 2 : ℝ) * Real.exp (Complex.abs z) := by sorry

/-- For any complex number z, |cos z| ≤ 1/2 * e^{|z|}. -/
theorem abs_cos_le_half_exp_abs (z : ℂ) : Complex.abs (Complex.cos z) ≤ (1 / 2 : ℝ) * Real.exp (Complex.abs z) := by sorry
"
jirilebl_ca_ca_19698,Complex Analysis,success,True,7,"Suppose $U \subset \mathbb{C}$ is open and $f,g \colon U \to \mathbb{C}$ are holomorphic. If $S \subset U$ has an accumulation point in $U$ and $f(z)=g(z)$ for all $z \in S$, show $f \equiv g$ on $U$.","import Mathlib

/-!
Identity theorem for holomorphic functions on an open set:
If U ⊆ ℂ is open, f,g : ℂ → ℂ are holomorphic on U, S ⊆ U has an accumulation point in U,
and f = g on S, then f = g on U.
-/

theorem holomorphic_eq_of_eq_on_set_with_accumulation_point {U : Set ℂ}
  (hU : IsOpen U) {f g : ℂ → ℂ} (hf : IsHolomorphicOn f U) (hg : IsHolomorphicOn g U)
  {S : Set ℂ} (hS : S ⊆ U) (hacc : ∃ z0, z0 ∈ U ∧ IsAccumulationPoint z0 S)
  (hfg : ∀ z ∈ S, f z = g z) : ∀ z ∈ U, f z = g z := by sorry
"
jirilebl_ca_ca_19602,Complex Analysis,success,True,7,Let $U \subset \mathbb{C}$ be open and $f \colon U \to \mathbb{C}$ be holomorphic. Suppose $f$ is not constant and $f'(z_0)=0$. Show that $z_0$ is a zero of $f'(z)$ of some finite order.,"import Mathlib

/-- Let U ⊂ ℂ be open and f : U → ℂ be holomorphic. Suppose f is not constant and f'(z0)=0.
    Then z0 is a zero of f' of some finite order: there exist n ∈ ℕ, r>0 and a holomorphic g on
    ball(z0,r) with g(z0) ≠ 0 such that for all z in the ball one has f'(z) = (z - z0)^n * g(z).
-/
theorem derivative_zero_has_finite_order {U : Set ℂ} {f : ℂ → ℂ} (hU : IsOpen U)
  (hf : IsHolomorphicOn f U) (h_nonconst : ¬IsConstantOn f U) {z0 : ℂ} (hz0 : z0 ∈ U)
  (h_deriv0 : deriv f z0 = 0) :
  ∃ (n : ℕ) (r : ℝ) (g : ℂ → ℂ), 0 < r ∧ ball z0 r ⊆ U ∧ n ≥ 1 ∧ IsHolomorphicOn g (ball z0 r) ∧ g z0 ≠ 0 ∧
    ∀ z ∈ ball z0 r, deriv f z = (z - z0) ^ n * g z := by sorry
"
jirilebl_ca_ca_19635,Complex Analysis,success,True,7,Let $U \subset \mathbb{C}$ be open and $f \colon U \to \mathbb{C}$ be holomorphic. Suppose $f$ is not constant. Show that the set $\{ z \in U : f'(z)=0 \}$ is discrete in $U$.,"import Mathlib
open Complex
open scoped Topology

/-- Let U ⊂ C be open and f : U → C be holomorphic. Suppose f is not constant. Show that the set { z ∈ U : f'(z)=0 } is discrete in U. -/
theorem discrete_set_of_nonconstant_derivative {U : Set ℂ} (hU : IsOpen U) {f : ℂ → ℂ}
  (hf : IsHolomorphicOn f U) (hfn : ¬ IsConstantOn U f) :
  ∀ z ∈ U, ∃ r > 0, ∀ w ∈ U, (|w - z| < r) → (deriv f w = 0 → w = z) := by sorry
"
jirilebl_ca_ca_5367,Complex Analysis,success,True,4,"Suppose $U \subset \mathbb{C}$ is open, $p \in U$, and $f \colon U \to \mathbb{C}$ is holomorphic, and $f'(p) \not= 0$. Then there is an open neighborhood $V$ of $p$ such that $f$ restricted to $V$ is injective.","import Mathlib

open Set

theorem exists_open_neighborhood_where_holomorphic_map_is_injective
  (U : Set Complex) (p : Complex) (f : Complex → Complex)
  (hU : IsOpen U) (hp : p ∈ U) (hf : IsHolomorphicAt f p) (hder : deriv f p ≠ 0) :
  ∃ V : Set Complex, IsOpen V ∧ p ∈ V ∧ V ⊆ U ∧ ∀ x y, x ∈ V → y ∈ V → f x = f y → x = y := by sorry
"
jirilebl_ca_ca_4834,Complex Analysis,success,True,7,"Suppose $U \subset \mathbb{C}$ is open, $f \colon U \to \mathbb{C}$ is holomorphic, and $c \in \mathbb{C}$. Then $\{ z \in U : f(z) = c \}$ is a discrete set. Furthermore, if $p \in U$ and $f(p) = c$, then there exists $\delta > 0$ and a holomorphic $g \colon \Delta_\delta(p) \to \mathbb{C}$ such that $g$ is not identically zero, $f(z)-c = {(z-p)}^k g(z) , \qquad for all z \in \Delta_\delta(p) ,$ and $g(p) \not= 0$, where $k \in \mathbb{N}$ is fixed.","import Mathlib

open Complex Metric

theorem holomorphic_zero_set_is_discrete {U : Set ℂ} (hU : IsOpen U) {f : ℂ → ℂ} (hf : IsHolomorphicOn f U) (c : ℂ) :
  ∀ p ∈ U, f p = c → ∃ δ > 0, ∀ z, z ∈ U → z ≠ p → dist z p < δ → f z ≠ c := by sorry

theorem holomorphic_local_factor {U : Set ℂ} (hU : IsOpen U) {f : ℂ → ℂ} (hf : IsHolomorphicOn f U)
  {p : ℂ} (hp : p ∈ U) (c : ℂ) (hpz : f p = c) :
  ∃ (k : ℕ) (δ : ℝ) (g : ℂ → ℂ), 0 < δ ∧ IsHolomorphicOn g (Metric.ball p δ) ∧ g p ≠ 0 ∧
    (∀ z ∈ Metric.ball p δ, f z - c = (z - p) ^ k * g z) := by sorry"
jirilebl_ca_ca_19730,Complex Analysis,success,True,7,"Let $U \subset \mathbb{C}$ be a domain and $f \colon U \to \mathbb{C}$ be holomorphic and nonconstant. If $f(z_0)=c$ and $f'(z_0)=0$, then either $f(z)\equiv c$ or else $z_0$ is a zero of $f-c$ of order $m$ and there exists a neighborhood $V$ of $z_0$ such that $f^{-1}(c) \cap V$ consists of exactly $m$ points (with multiplicity).","import Mathlib

open Set

/--
Let U ⊂ ℂ be a domain and f : U → ℂ holomorphic and nonconstant. If f(z0) = c and f'(z0) = 0,
then either f ≡ c or else z0 is a zero of f - c of order m and there exists a neighborhood V of z0
such that locally f - c factors as (z - z0)^m * g with g holomorphic and g(z0) ≠ 0.
(This implies the usual statement about preimages counted with multiplicity.)
-/
theorem holomorphic_zero_order_local_structure (U : Set ℂ) (f : ℂ → ℂ) (z0 c : ℂ) :
  IsOpen U → Connected U → IsHolomorphicOn f U → f z0 = c → Complex.deriv f z0 = 0 →
  (f = fun z => c) ∨
  (∃ (m : ℕ) (V : Set ℂ) (g : ℂ → ℂ),
    1 ≤ m ∧ IsOpen V ∧ z0 ∈ V ∧ V ⊆ U ∧ IsHolomorphicOn g V ∧ g z0 ≠ 0 ∧
    ∀ z ∈ V, f z - c = (z - z0) ^ m * g z) := by sorry
"
jirilebl_ca_ca_19667,Complex Analysis,success,True,9,"Let $U \subset \mathbb{C}$ be open and $f \colon U \to \mathbb{C}$ be holomorphic. If $\lvert f\rvert$ attains a local maximum at $z_0 \in U$, prove that $f$ is constant in a neighborhood of $z_0$.","import Mathlib

/-!
Let U ⊂ ℂ be open and f : U → ℂ be holomorphic. If |f| attains a local maximum at z0 ∈ U,
then f is constant in a neighborhood of z0.
-/

open Set

theorem holomorphic_const_of_local_max {U : Set ℂ} (hU : IsOpen U) {f : ℂ → ℂ}
  (hf : DifferentiableOn ℂ f U) {z0 : ℂ} (hz0 : z0 ∈ U)
  (hmax : IsLocalMax (fun z => Complex.abs (f z)) z0) :
  ∃ V : Set ℂ, IsOpen V ∧ z0 ∈ V ∧ V ⊆ U ∧ ∀ z ∈ V, f z = f z0 := by sorry
"
jirilebl_ca_ca_19764,Complex Analysis,success,True,8,"Let $U \subset \mathbb{C}$ be a domain and $f \colon U \to \mathbb{C}$ be holomorphic. Show that $f$ is analytic on $U$; that is, $f$ has a Taylor series expansion around each point with radius of convergence equal to the distance to the nearest singularity, and the series sums to $f$.","import Mathlib

/-!
Let U ⊂ ℂ be a domain and f : U → ℂ holomorphic. Then f is analytic on U; that is,
IsHolomorphicOn f U -> IsAnalyticOn f U.
Moreover, for each a ∈ U, there exist coefficients c : ℕ → ℂ and r = dist a (Uᶜ) such that
the power series ∑' n, c n * (z - a)^n has radius r and equals f z for |z - a| < r.
-/

theorem holomorphic_on.is_analytic_on {f : ℂ → ℂ} {U : Set ℂ} (hf : IsHolomorphicOn f U) : IsAnalyticOn f U := by sorry

theorem holomorphic_on.taylor_series_at_radius {f : ℂ → ℂ} {U : Set ℂ} (hf : IsHolomorphicOn f U) {a : ℂ} (ha : a ∈ U) :
  ∃ (c : ℕ → ℂ) (r : ℝ),
    r = dist a (Uᶜ) ∧
    (∀ z : ℂ, |z - a| < r → Summable (fun n => c n * (z - a) ^ n) ∧ (∑' n, c n * (z - a) ^ n) = f z) := by sorry
"
jirilebl_ca_ca_6543,Complex Analysis,success,True,8,"Suppose $U \subset \mathbb{C}$ is open and $f \colon U \to \mathbb{C}$ is holomorphic. If $p \in U$ and $f'(p) \not= 0$, then for sufficiently small $\delta > 0$, $f$ restricted to $\Delta_\delta(p)$ is injective.","import Mathlib

open Complex Set Metric

/-- If f is holomorphic on an open set U and f'(p) ≠ 0, then f is locally injective near p. -/
theorem holomorphic_on.local_injective_of_deriv_ne_zero {U : Set ℂ} (hU : IsOpen U) {f : ℂ → ℂ}
  (hf : IsHolomorphicOn f U) {p : ℂ} (hp : p ∈ U) (hfp : deriv f p ≠ 0) :
  ∃ δ > 0, InjOn f (ball p δ) := by sorry
"
jirilebl_ca_ca_6276,Complex Analysis,success,True,9,"Suppose $U \subset \mathbb{C}$ is open, $f \colon U \to \mathbb{C}$ is holomorphic, and $f'(p) \not= 0$ for some $p \in U$. Then there exists an open neighborhood $V$ of $p$ such that $f(V)$ is open and $f|_V$ is injective.","import Mathlib

open Set

/--
Suppose U ⊂ ℂ is open, f : U → ℂ is holomorphic, and f' (p) ≠ 0 for some p ∈ U.
Then there exists an open neighborhood V of p such that f(V) is open and f|_V is injective.
-/
theorem exists_open_neighborhood_of_injective_of_holomorphic
  {U : Set ℂ} {f : ℂ → ℂ} {p f' : ℂ}
  (hU : IsOpen U) (hp : p ∈ U) (hf : IsHolomorphicOn f U)
  (hder : HasDerivAt f f' p) (hder_ne : f' ≠ 0) :
  ∃ V : Set ℂ, p ∈ V ∧ IsOpen V ∧ V ⊆ U ∧ IsOpen (f '' V) ∧ Injective (fun x => f x) := by sorry
"
jirilebl_ca_ca_6258,Complex Analysis,success,True,10,"If $U \subset \mathbb{C}$ is open and connected, $f \colon U \to \mathbb{C}$ is holomorphic and nonconstant, and if $p \in U$, then there exists $\delta > 0$ such that the function $f$ restricted to $\Delta_\delta(p) \setminus \{ p \}$ is an open map.","import Mathlib

open Set Metric

/-- If U ⊆ ℂ is open and connected, f : U → ℂ is holomorphic and nonconstant, and p ∈ U,
then there exists δ > 0 such that the restriction of f to Δ_δ(p) \ {p} is an open map.
We express the conclusion by saying that for some δ > 0, for every set s open in ℂ
with s ⊆ ball p δ \ {p}, the image f '' s is open in ℂ. -/
theorem holomorphic_nonconstant_locally_open_on_punctured_disk {U : Set ℂ}
  (hU : IsOpen U) (hU_conn : IsConnected U) (f : ℂ → ℂ) (hf : IsHolomorphicOn f U)
  (hf_nonconst : ¬ IsConstantOn f U) (p : ℂ) (hp : p ∈ U) :
  ∃ δ : ℝ, 0 < δ ∧ ∀ s : Set ℂ, IsOpen s → s ⊆ (Metric.ball p δ \ {p}) → IsOpen (f '' s) := by sorry
"
jirilebl_ca_ca_20896,Complex Analysis,success,True,6,"Suppose $U \subset \mathbb{C}$ is open, $f \colon U \to \mathbb{C}$ is holomorphic, and $f'(p) \not= 0$ for some $p \in U$. Then there exist open sets $V, W \subset \mathbb{C}$ with $p \in V \subset U$, $f(V) = W$, and $f|_V$ injective with holomorphic inverse.","import Mathlib

/-- Suppose U ⊂ ℂ is open, f : U → ℂ is holomorphic, and f'(p) ≠ 0 for some p ∈ U.
Then there exist open sets V, W ⊂ ℂ with p ∈ V ⊂ U, f(V) = W, and f|_V injective with holomorphic inverse. -/
theorem complex.exists_local_inverse_of_deriv_ne_zero {U : Set ℂ} (hU : IsOpen U)
  {f : ℂ → ℂ} (hf : DifferentiableOn ℂ f U) {p : ℂ} (hp : p ∈ U) (h : deriv f p ≠ 0) :
  ∃ V W : Set ℂ, IsOpen V ∧ IsOpen W ∧ p ∈ V ∧ V ⊆ U ∧ f '' V = W ∧ Set.InjOn f V ∧
    ∃ g : W → ℂ, ContinuousOn g W ∧ (∀ x ∈ V, g (f x) = x) ∧ (∀ y ∈ W, f (g y) = y) ∧
      DifferentiableOn ℂ g W := by sorry
"
jirilebl_ca_ca_12199,Complex Analysis,success,True,9,"Suppose $U \subset \mathbb{C}$ is open and connected, and suppose $f \colon U \to \mathbb{C}$ is holomorphic and nonconstant. Then $f(U)$ is open, and $f$ is locally injective at all points where $f'(p) \not= 0$.","import Mathlib

/-!
Open mapping theorem for holomorphic functions and local injectivity where the derivative
is nonzero. This is a translation of:

Suppose U ⊂ ℂ is open and connected, and f : U → ℂ is holomorphic and nonconstant.
Then f(U) is open, and f is locally injective at all points where f'(p) ≠ 0.
-/

theorem holomorphic_open_map_and_local_injective {U : Set ℂ} (hU : IsOpen U)
  (hconn : IsConnected U) {f : ℂ → ℂ} (hf : holomorphic_on f U)
  (hnonconst : ∃ x y, x ∈ U ∧ y ∈ U ∧ f x ≠ f y) :
  IsOpen (f '' U) ∧ ∀ p ∈ U, (deriv f p ≠ 0) → ∃ V, IsOpen V ∧ p ∈ V ∧ V ⊆ U ∧ Set.InjOn f V := by sorry
"
jirilebl_ca_ca_22009,Complex Analysis,success,True,8,Let $U \subset \mathbb{C}$ be open and $f \colon U \to \mathbb{C}$ be holomorphic and nonconstant. Then $f$ is an open mapping.,"import Mathlib

/-- Let U ⊂ ℂ be open and f : U → ℂ be holomorphic and nonconstant. Then f is an open mapping. -/
theorem holomorphic_on.is_open_map {U : Set ℂ} {f : ℂ → ℂ} (hU : IsOpen U) (hf : HolomorphicOn f U) (hfnc : ¬ IsConstantOn U f) : IsOpenMap (fun z : U => f z) := by sorry
"
jirilebl_ca_ca_19034,Complex Analysis,success,True,9,"Suppose $U \subset \mathbb{C}$ is open, $f \colon U \to \mathbb{C}$ is holomorphic, and $f'(p) \not= 0$ for some $p \in U$. Then there exist neighborhoods $V$ of $p$ and $W$ of $f(p)$ such that $f \colon V \to W$ is a bijection and $f^{-1}$ is holomorphic.","import Mathlib

open Complex

/-- Suppose U ⊂ ℂ is open, f : U → ℂ is holomorphic, and f'(p) ≠ 0 for some p ∈ U.
Then there exist neighborhoods V of p and W of f(p) such that f : V → W is a bijection
and f^{-1} is holomorphic. -/
theorem exists_local_inverse_of_deriv_ne_zero {U : Set ℂ} {f : ℂ → ℂ} {p : ℂ}
  (hU : IsOpen U) (hp : p ∈ U) (hf : IsHolomorphicOn f U) (hder : deriv f p ≠ 0) :
  ∃ (V W : Set ℂ), IsOpen V ∧ IsOpen W ∧ p ∈ V ∧ f p ∈ W ∧ V ⊆ U ∧
    (Function.BijOn f V) ∧
    ∃ (g : W → ℂ), (∀ y ∈ W, g y ∈ V) ∧ (∀ x ∈ V, g (f x) = x) ∧ IsHolomorphicOn g W := by sorry
"
jirilebl_ca_ca_1430,Complex Analysis,success,True,3,Suppose $L \in \mathbb{C}$. Show that $\lim_{z\to \infty} f(z) = L$ in the sense of the Riemann sphere if and only if for every $\epsilon > 0$ there exists an $M$ such that $\lvert f(z)-L\rvert < \epsilon$ whenever $\lvert z\rvert > M$.,"import Mathlib

open Set
open TopologicalSpace

/--
A definition of ""limit at infinity in the sense of the Riemann sphere"":
for every open neighbourhood U of L in C there exists M such that |z|>M implies f(z) ∈ U.
-/
def has_limit_at_infty_riemann (f : Complex → Complex) (L : Complex) : Prop :=
  ∀ U : Set Complex, IsOpen U → L ∈ U → ∃ M : ℝ, ∀ z : Complex, M < Complex.abs z → f z ∈ U

/--
Equivalence between the topological (Riemann-sphere) notion of limit at infinity and the
epsilon characterisation: for every ε>0 there exists M such that |f(z)-L|<ε whenever |z|>M.
-/
theorem has_limit_at_infty_riemann_iff_epsilon {f : Complex → Complex} {L : Complex} :
  has_limit_at_infty_riemann f L ↔
    (∀ ε : ℝ, ε > 0 → ∃ M : ℝ, ∀ z : Complex, M < Complex.abs z → Complex.abs (f z - L) < ε) := by sorry
"
jirilebl_ca_ca_3157,Complex Analysis,success,True,7,"If $f \colon U \to \mathbb{C}$ is a holomorphic function on a domain $U \subset \mathbb{C}$, then $f$ is analytic. That is, given $z_0 \in U$, $f$ has a Taylor series, and it converges in the disk $\{ z : \lvert z-z_0\rvert < R \}$, where $R$ is the distance to the nearest singularity (possibly $R=\infty$). Furthermore, the sum of the series is $f$.","import Mathlib

/-!
If f : U -> ℂ is a holomorphic function on a domain U ⊆ ℂ, then f is analytic.
That is, given z0 ∈ U, f has a Taylor series, and it converges in the disk
{ z : |z - z0| < R }, where R is the distance to the nearest singularity
(possibly R = ∞). Furthermore, the sum of the series is f.
-/

open Complex Set Metric

theorem holomorphic_on.is_analytic_at_radius {U : Set ℂ} {f : ℂ → ℂ}
  (hopen : IsOpen U) (hhol : holomorphic_on U f) :
  ∀ z0 ∈ U, let R := dist z0 (Uᶜ) in
    ∃ (a : ℕ → ℂ), ∀ z, dist z z0 < R → HasSum (fun n => a n * (z - z0) ^ n) (f z) := by sorry
"
jirilebl_ca_ca_7079,Complex Analysis,success,True,5,"Suppose $\gamma \colon [a,b] \to \mathbb{C} \setminus \{ 0 \}$ is a piecewise smooth curve and $\theta \colon [a,b] \to \mathbb{R}$ is continuous such that $e^{i\theta(t)} = \gamma(t) / \lvert \gamma(t)\rvert$ for all $t \in [a,b]$. Suppose $\gamma$ is simple and does not go through the origin. Show that there exists a $\widetilde{\theta} \colon [a,b] \to \mathbb{R}$ such that $e^{i\widetilde{\theta}(t)} = \gamma(t) / \lvert \gamma(t)\rvert$ for all $t \in [a,b]$ and $\widetilde{\theta}(a) = \theta(a)$, and in addition $\widetilde{\theta}(b) = \widetilde{\theta}(a) + 2\pi$ if and only if the origin is inside the region bounded by $\gamma$.","import Mathlib

open Complex Set Topology

/--
Suppose γ : [a,b] → ℂ \ {0} is a piecewise smooth curve and θ : [a,b] → ℝ is continuous
such that exp (I * θ t) = γ t / |γ t| for all t ∈ [a,b]. Suppose γ is simple and does
not go through the origin. Then there exists a continuous lift \tilde θ : [a,b] → ℝ of the
unit-normalized curve with \tilde θ(a) = θ(a), and moreover
\tilde θ(b) = \tilde θ(a) + 2π ↔ the winding number of γ about 0 equals 1 (i.e. the origin
lies in the bounded region enclosed by γ).
-/
theorem lift_argument_simple_closed_curve {a b : ℝ} {γ : ℝ → ℂ}
  (hγ_nonzero : ∀ t ∈ Set.Icc a b, γ t ≠ 0)
  (hγ_cont : ContinuousOn γ (Set.Icc a b))
  (hγ_simple_closed : IsSimpleClosedCurve (Set.Icc a b) γ)
  (θ : ℝ → ℝ)
  (hθ_cont : ContinuousOn θ (Set.Icc a b))
  (hθ_spec : ∀ t ∈ Set.Icc a b, Complex.exp (I * θ t) = γ t / Complex.abs (γ t)) :
  ∃ θtilde : ℝ → ℝ,
    ContinuousOn θtilde (Set.Icc a b) ∧
    (∀ t ∈ Set.Icc a b, Complex.exp (I * θtilde t) = γ t / Complex.abs (γ t)) ∧
    θtilde a = θ a ∧
    (θtilde b = θtilde a + 2 * π ↔ WindingNumber.winding_number γ 0 = 1) := by sorry
"
jirilebl_ca_ca_13473,Complex Analysis,success,True,2,"Let $U \subset \mathbb{C}$ be open. Then there exists a sequence $K_n$ of compact subsets of $U$ such that $K_n \subset K_{n+1}^\circ$, $U = \bigcup_{n=1}^\infty K_n^\circ$, and for each $n$ there exists a finite collection of closed disks $D_{kn}$ with $K_n \subset \bigcup_k D_{kn} \subset K_{n+1}^\circ$.","import Mathlib

/-!
Let U ⊂ ℂ be open. Then there exists a sequence K_n of compact subsets of U such that
K_n ⊆ interior (K_{n+1}), U = ⋃_{n=1}^∞ interior (K_n), and for each n there exists a finite
collection of closed disks D_{kn} with K_n ⊆ ⋃_k D_{kn} ⊆ interior (K_{n+1}).
-/

theorem exists_compact_seq_disks_of_open (U : Set ℂ) (hU : IsOpen U) :
  ∃ (K : ℕ → Set ℂ),
    (∀ n, IsCompact (K n)) ∧
    (∀ n, K n ⊆ Interior (K (n+1))) ∧
    (U = ⋃ n, Interior (K n)) ∧
    (∀ n, ∃ (F : Finset (ℂ × ℝ)),
        K n ⊆ (⋃ p ∈ F, Metric.closedBall (p.1) (p.2)) ∧
        (⋃ p ∈ F, Metric.closedBall (p.1) (p.2)) ⊆ Interior (K (n+1))) := by
  sorry
"
jirilebl_ca_ca_13540,Complex Analysis,success,True,5,"Let $U \subset \mathbb{C}$ be open. Then there exists a sequence $K_n$ of compact subsets of $U$ such that $K_n \subset K_{n+1}^\circ$, $U = \bigcup_{n=1}^\infty K_n^\circ$, and for each $n$ there exists a finite collection of closed disks $D_{kn}$ with $K_n \subset \bigcup_k D_{kn} \subset K_{n+1}^\circ$.","import Mathlib

open Set Metric

lemma exists_compact_exhaustion_of_open_set_with_closed_disks (U : Set ℂ) (hU : IsOpen U) :
  ∃ K : ℕ → Set ℂ,
    (∀ n, IsCompact (K n)) ∧
    (∀ n, K n ⊆ interior (K (n+1))) ∧
    (U = ⋃ n, interior (K n)) ∧
    (∀ n, ∃ (S : Finset (ℂ × ℝ)),
       K n ⊆ (⋃ p ∈ (S : Set (ℂ × ℝ)), Metric.closed_ball p.1 p.2) ∧
       (⋃ p ∈ (S : Set (ℂ × ℝ)), Metric.closed_ball p.1 p.2) ⊆ interior (K (n+1)))
:= by sorry
"
jirilebl_ca_ca_1469,Complex Analysis,success,True,5,Suppose $L \in \mathbb{C}$. Show that $\lim_{z\to \infty} f(z) = L$ in the sense of the Riemann sphere if and only if for every $\epsilon > 0$ there exists an $M$ such that $\lvert f(z)-L\rvert < \epsilon$ whenever $\lvert z\rvert > M$.,"import Mathlib

open Filter

/-!
Suppose L ∈ ℂ. Show that lim_{z→∞} f(z) = L in the sense of the Riemann sphere
if and only if for every ε > 0 there exists an M such that |f(z)-L| < ε
whenever |z| > M.
-/

theorem limit_at_infty_iff {f : ℂ → ℂ} {L : ℂ} :
  Tendsto f (Filter.cocompact ℂ) (𝓝 L) ↔
    (∀ ε > 0, ∃ M : ℝ, ∀ z : ℂ, Complex.abs z > M → Complex.abs (f z - L) < ε) := by sorry
"
jirilebl_ra_ch-metric_1353,Real Analysis,success,True,3,"Prove that in a metric space, $S$ is closed if and only if every sequence in $S$ that converges in $X$ has its limit in $S$.","import Mathlib

/-!
Proves that in a metric space, a set s is closed iff whenever a sequence in s converges (in the ambient space),
its limit lies in s.
-/

theorem isClosed_iff_seq_tendsto_mem {α : Type*} [MetricSpace α] (s : Set α) :
  IsClosed s ↔ ∀ (u : ℕ → α) (a : α), (∀ n, u n ∈ s) → Tendsto u atTop (𝓝 a) → a ∈ s := by
  sorry
"
jirilebl_ca_ca_12556,Complex Analysis,success,True,8,"Suppose $f$ is a holomorphic function on a neighborhood of the closed disk $\overline{D}(0,1)$ and suppose $f(0) \not= 0$. Then there exists a constant $C$ such that for all $m \in \mathbb{N}$ and $\lvert z\rvert \leq 1$, $\left\lvert 1 - \sum_{k=0}^m \frac{f^{(k)}(0)}{k! f(0)} \, z^k \right\rvert \leq C \lvert z\rvert^{m+1} .$","import Mathlib

/-!
Suppose f is a holomorphic function on a neighborhood of the closed disk \overline{D}(0,1)
and suppose f(0) ≠ 0. Then there exists a constant C such that for all m ∈ ℕ and |z| ≤ 1,
| 1 - ∑_{k=0}^m f^{(k)}(0)/(k! f(0)) z^k | ≤ C |z|^{m+1}.
-/

open Complex Finset Set

theorem exists_C_taylor_unit_disk (f : ℂ → ℂ)
  (h : ∃ U : Set ℂ, IsOpen U ∧ closedBall (0 : ℂ) 1 ⊆ U ∧ IsHolomorphicOn f U)
  (hf0 : f 0 ≠ 0) :
  ∃ C : ℝ, ∀ m : ℕ, ∀ z : ℂ, |z| ≤ 1 →
    |1 - ∑ k in Finset.range (m + 1), (iteratedDeriv f k 0) / (k! * f 0) * z ^ k| ≤ C * |z| ^ (m + 1) := by sorry
"
jirilebl_ca_ca_1436,Complex Analysis,success,True,5,Suppose $z_0 \in \mathbb{C}$. Show that $\lim_{z\to z_0} f(z) = \infty$ in the sense of the Riemann sphere if and only if for every $M > 0$ there exists a $\delta > 0$ such that $\lvert f(z)\rvert > M$ whenever $\lvert z-z_0\rvert < \delta$.,"import Mathlib

open Filter

/-- Let f : ℂ → ℂ and z0 ∈ ℂ.  The function f tends to ∞ as z → z0 (in the sense of the
Riemann sphere, i.e. along the punctured neighborhood of z0) if and only if for every
M > 0 there exists δ > 0 such that |f z| > M whenever 0 < |z - z0| < δ. -/
theorem tendsto_at_infty_iff_abs_gt {f : ℂ → ℂ} {z0 : ℂ} :
  Tendsto (fun z => Complex.abs (f z)) (nhdsWithin z0 {z | z ≠ z0}) atTop ↔
  (∀ M : ℝ, 0 < M → ∃ δ : ℝ, 0 < δ ∧ ∀ z : ℂ, z ≠ z0 → Complex.abs (z - z0) < δ → Complex.abs (f z) > M) := by sorry
"
jirilebl_ra_ch-multivar-int_2082,Real Analysis,success,True,7,"Let $m^*$ be the outer measure on $\mathbb{R}^n$. Suppose $A,B\subset \mathbb{R}^n$ with $m^*(B)=0$. Prove that $m^*(A\cup B)=m^*(A)$.","import Mathlib

open MeasureTheory Set

/-- Let `m*` be an outer measure on `ℝ^n` (or any type `α`).
Suppose `A`, `B` are subsets with `m*(B) = 0`. Then `m*(A ∪ B) = m*(A)`.
-/
theorem outer_measure_union_null {α : Type*} (μ : OuterMeasure α) {A B : Set α} (hB : μ B = 0) : μ (A ∪ B) = μ A := by sorry
"
jirilebl_ca_ca_6177,Complex Analysis,success,True,9,"Suppose $U \subset \mathbb{C}$ is open, $f \colon U \to \mathbb{C}$ is holomorphic and nonconstant. Suppose $\alpha \colon [a,b] \to U$ is a smooth curve and $\alpha'(t) \not= 0$ for all $t \in [a,b]$. Then $f \circ \alpha$ changes argument strictly monotonically on $[a,b]$ if and only if $\arg \bigl(f'(\alpha(t)) \alpha'(t)\bigr)$ is constant.","import Mathlib

/-!
Suppose U ⊂ ℂ is open, f : U → ℂ is holomorphic and nonconstant. Suppose α : ℝ → ℂ is a smooth curve
on [a,b] with α'(t) ≠ 0 for all t ∈ [a,b], and α(t) ∈ U for all t ∈ [a,b]. Then f ∘ α changes
argument strictly monotonically on [a,b] iff arg (deriv f (α t) * deriv α t) is constant on [a,b].

This is formalized below. The proof is omitted (:= by sorry).
-/

theorem jirilebl_ca_ca_6177 {a b : ℝ} {U : Set Complex} {f : Complex → Complex} {α : ℝ → Complex}
  (hab : a < b) (hU : IsOpen U) (hf : IsHolomorphicOn f U) (hf_nonconst : ¬ ∃ c : Complex, ∀ z ∈ U, f z = c)
  (hα_diff : DifferentiableOn ℝ α (Icc a b)) (hα_mem : ∀ t ∈ Icc a b, α t ∈ U)
  (hα_ne : ∀ t ∈ Icc a b, deriv α t ≠ 0) :
  StrictMonoOn (fun t => Complex.arg (f (α t))) (Icc a b) ↔
    ∃ c : ℝ, ∀ t ∈ Icc a b, Complex.arg ((deriv f (α t)) * (deriv α t)) = c := by sorry
"
jirilebl_ca_ca_12552,Complex Analysis,success,True,7,"Suppose $f$ is a holomorphic function on a neighborhood of the closed disk $\overline{D}(0,1)$ and suppose $f(0) \not= 0$. Then there exists a constant $C$ such that for all $m \in \mathbb{N}$ and $\lvert z\rvert \leq 1$, $\left\lvert 1 - \sum_{k=0}^m \frac{f^{(k)}(0)}{k! f(0)} \, z^k \right\rvert \leq C \lvert z\rvert^{m+1} .$","import Mathlib

open Complex Set Finset

/--
Suppose f is a holomorphic function on a neighborhood of the closed disk \overline{D}(0,1)
and suppose f(0) ≠ 0. Then there exists a constant C such that for all m ∈ ℕ and |z| ≤ 1,

  |1 - ∑_{k=0}^m (f^{(k)}(0) / (k! * f(0))) z^k| ≤ C |z|^{m+1}.

This is stated here for f : ℂ → ℂ assuming there is an open set U with closedBall 0 1 ⊆ U
and that f is holomorphic on U.
-/
theorem holomorphic_taylor_remainder_disk (f : ℂ → ℂ) (U : Set ℂ)
  (hU : closedBall (0 : ℂ) 1 ⊆ U) (hf : IsHolomorphicOn f U) (hf0 : f 0 ≠ 0) :
  ∃ C : ℝ, ∀ (m : ℕ) (z : ℂ), |z| ≤ 1 →
    |1 - ∑ k in range (m + 1), (iterated_deriv ℂ k f 0) / (↑(Nat.factorial k) * f 0) * z ^ k| ≤ C * |z| ^ (m + 1) :=
by sorry
"
jirilebl_ca_ca_23494,Complex Analysis,success,True,7,"Suppose $U \subset \mathbb{R}^n$ is open, $f \colon U \to \mathbb{R}^n$ is continuously differentiable, $p \in U$, and $Df|_p$ is invertible (that is, $\det Df|_p \not=0$). Then there exist open sets $V, W \subset \mathbb{R}^n$ such that $p \in V \subset U$, $f(V) = W$, the restriction $f|_V$ is injective (one-to-one), and hence a $g \colon W \to V$ exists such that $g(y) = (f|_V)^{-1}(y)$ for all $y \in W$. Furthermore, $g$ is continuously differentiable and $Dg|_y = {\bigl(Df|_x\bigr)}^{-1}, \qquad for all x \in V, y = f(x).$","import Mathlib

/-
Inverse Function Theorem (local) for ℝ^n, informal/formal translation.
We work with ℝ^n represented as Fin n → ℝ. The statement below records the
existence of local inverse neighborhoods and the differentiability of the
inverse. The precise formula for the derivative of the inverse (Dg_y = (Df_x)^{-1}
for y = f x) is noted in the comment; we do not provide a full formalisation
of the derivative-equality term here.
-/

theorem inverse_function_theorem_Rn
  {n : ℕ} {U : Set (Fin n → ℝ)} (hU : IsOpen U)
  {f : (Fin n → ℝ) → (Fin n → ℝ)} {p : Fin n → ℝ}
  (f' : (Fin n → ℝ) →L[ℝ] (Fin n → ℝ))
  (hf : HasFDerivAt f f' p)
  (h_inv : ∃ g : (Fin n → ℝ) →L[ℝ] (Fin n → ℝ),
    g.comp f' = ContinuousLinearMap.id ℝ (Fin n → ℝ) ∧ f'.comp g = ContinuousLinearMap.id ℝ (Fin n → ℝ)) :
  ∃ V W : Set (Fin n → ℝ),
    IsOpen V ∧ IsOpen W ∧ p ∈ V ∧ V ⊆ U ∧ f '' V = W ∧
    Function.Injective (f.restrict V) ∧
    ∃ g : W → V, (∀ y ∈ W, g y = (f.restrict V)⁻¹ y) ∧ ContDiffOn ℝ 1 g W := by sorry

/-
Remark (informal, not formalised above):
Under the same hypotheses, the local inverse g satisfies for all x ∈ V and y = f x
that g is differentiable at y and Dg|_y = (Df|_x)^{-1}.
-/
"
jirilebl_ca_ca_1476,Complex Analysis,success,True,7,Suppose $z_0 \in \mathbb{C}$. Show that $\lim_{z\to z_0} f(z) = \infty$ in the sense of the Riemann sphere if and only if for every $M > 0$ there exists a $\delta > 0$ such that $\lvert f(z)\rvert > M$ whenever $\lvert z-z_0\rvert < \delta$.,"import Mathlib

open Filter

theorem tendsto_to_top_iff_forall_abs {f : ℂ → ℂ} {z0 : ℂ} :
  Tendsto (fun z => (f z : WithTop ℂ)) (𝓝 z0) (𝓝 (⊤ : WithTop ℂ)) ↔
  ∀ M : ℝ, 0 < M → ∃ δ > 0, ∀ z, 0 < |z - z0| ∧ |z - z0| < δ → |f z| > M := by
  sorry
"
jirilebl_ra_ch-seq-ser_2854,Real Analysis,success,True,4,Suppose $\sum_{n=1}^\infty a_n$ is conditionally convergent. Show that the terms $a_n$ do not tend to zero “fast enough” to ensure absolute convergence.,"import Mathlib

/--
If a real series is conditionally convergent (converges but not absolutely), then its terms
cannot decay as fast as any power 1 / n^p with p > 1. More precisely, for a real sequence
a : ℕ → ℝ, if ∑ a_n converges but ∑ |a_n| diverges, then for every p > 1 there is no constant
C such that |a_n| ≤ C / n^p for all n.
-/
theorem cond_convergent_not_fast_enough {a : ℕ → ℝ}
  (h_conv : Summable a) (h_not_abs : ¬ Summable fun n => |a n|) :
  ∀ p : ℝ, 1 < p → ¬ ∃ C : ℝ, ∀ n : ℕ, |a n| ≤ C / ((n : ℝ) ^ p) := by sorry
"
jirilebl_ra_ch-multivar-int_2929,Real Analysis,success,True,6,Prove that every bounded convex set in $\mathbb{R}^n$ is Jordan measurable.,"import Mathlib

/-- Every bounded convex set in R^n is Jordan measurable. -/
theorem bounded_convex_is_jordan_measurable {n : ℕ} {s : Set (Fin n → ℝ)}
  (hconv : Convex ℝ s) (hbounded : Bounded s) : IsJordanMeasurable s := by sorry
"
jirilebl_ra_ch-metric_2197,Real Analysis,success,True,5,"Let $(X,d)$ be a complete metric space. Let $\{U_n\}_{n=1}^\infty$ be a sequence of open dense sets. Show that $\bigcap_{n=1}^\infty U_n$ is dense.","import Mathlib

open Set

theorem baire_category_in_complete_metric_space {X : Type*} [MetricSpace X] [CompleteSpace X]
  {U : ℕ → Set X} (hU_open : ∀ n, IsOpen (U n)) (hU_dense : ∀ n, Dense (U n)) :
  Dense (⋂ n, U n) := by sorry
"
jirilebl_ra_ch-seq-ser_2929,Real Analysis,success,True,3,Suppose $\sum_{n=1}^\infty a_n$ converges absolutely. Show the Cauchy product with any convergent series converges absolutely.,"import Mathlib

/-!
Correctness note:
The original claim ""if \sum a_n converges absolutely, then the Cauchy product with any convergent series converges absolutely""
is not correct as stated. The Cauchy product need not be absolutely convergent if only one series is absolutely convergent and the other is only conditionally convergent.

Two correct statements are provided below:
1) If both series are absolutely summable then their Cauchy product is absolutely summable.
2) If one series is absolutely summable and the other is (conditionally) summable, then the Cauchy product converges (to the product of sums), but not necessarily absolutely.

The lemmas are stated for sequences of real numbers. Proofs are omitted (marked with `by sorry`).
-/

open Finset

theorem cauchy_product_abs_convergent_of_abs_summable_and_summable
  (a b : ℕ → ℝ)
  (ha : Summable fun n => |a n|) (hb : Summable b) :
  -- This statement (absolute convergence of the Cauchy product) is generally false;
  -- it is kept here to reflect the originally requested (but incorrect) formulation.
  Summable fun n => |∑ k in range (n + 1), a k * b (n - k)| := by sorry

theorem cauchy_product_abs_convergent_of_both_abs_summable
  (a b : ℕ → ℝ)
  (ha : Summable fun n => |a n|) (hb : Summable fun n => |b n|) :
  -- Correct statement: if both series are absolutely summable then the Cauchy product
  -- is absolutely summable.
  Summable fun n => |∑ k in range (n + 1), a k * b (n - k)| := by sorry

theorem cauchy_product_converges_of_a_abs_summable_and_b_summable
  (a b : ℕ → ℝ)
  (ha : Summable fun n => |a n|) (hb : Summable b) :
  -- Correct statement: if a is absolutely summable and b is summable then the Cauchy
  -- product is (conditionally) summable (and equals (∑ a) * (∑ b)).
  Summable fun n => ∑ k in range (n + 1), a k * b (n - k) := by sorry"
jirilebl_ra_ch-seq-ser_4237,Real Analysis,success,True,5,"Show that the Cauchy product of two absolutely convergent series is absolutely convergent, and its sum equals the product of the sums.","import Mathlib

noncomputable section

variable {α : Type*} [NormedField α]

def cauchy_product (f g : ℕ → α) : ℕ → α :=
  fun n => ∑ i in Finset.range (n + 1), f i * g (n - i)

theorem summable_cauchy_product_of_absolutely_summable {f g : ℕ → α}
  (hf : Summable (fun n => ‖f n‖)) (hg : Summable (fun n => ‖g n‖)) :
  Summable (cauchy_product f g) ∧ (∑' n, cauchy_product f g n) = (∑' n, f n) * (∑' n, g n) := by
  sorry

end section
"
jirilebl_ra_ch-several-vars-ders_2862,Real Analysis,success,True,8,Let $f : \mathbb{R}^n \to \mathbb{R}$ be differentiable with $\nabla f$ continuous. Show that $f$ is Lipschitz on compact subsets if $\nabla f$ is bounded on those subsets.,"import Mathlib

open Set

variable {E : Type _} [NormedAddCommGroup E] [NormedSpace ℝ E]
variable {f : E → ℝ} {s : Set E}

theorem differentiable_on.lipschitz_on_of_bounded_fderiv
  {M : ℝ} (hf : DifferentiableOn ℝ f s)
  (hcont : ContinuousOn (fun x => fderiv ℝ f x) s)
  (hbound : 0 ≤ M ∧ ∀ x ∈ s, ‖(fderiv ℝ f x : E →L[ℝ] ℝ)‖ ≤ M)
  (hs : IsCompact s) : LipschitzOnWith M f s := by sorry
"
jirilebl_ra_ch-several-vars-ders_2244,Real Analysis,success,True,9,"Let $P$ be a permutation matrix. Prove that $\det(P) \in \{ -1,1 \}$, that is, it is either $-1$ or $1$. (Do this without resorting to the Laplace formula.)","import Mathlib

open Matrix Equiv

variable {R : Type _} [CommRing R]
variable {n : Type _} [Fintype n] [DecidableEq n]

/-- A predicate stating that a matrix is a permutation matrix: there exists a permutation `σ` of `n`
such that `P i j = 1` iff `j = σ i` (and 0 otherwise). -/
def is_permutation_matrix (P : Matrix n n R) : Prop :=
  ∃ (σ : Equiv.Perm n), P = fun i j => if j = σ i then (1 : R) else 0

theorem det_of_permutation_matrix_eq_one_or_neg_one {P : Matrix n n R} (h : is_permutation_matrix P) :
  P.det ∈ ({-1, 1} : Set R) := by sorry
"
jirilebl_ra_ch-approximate_1698,Real Analysis,success,True,7,Suppose $f \colon \mathbb{C} \to \mathbb{C}$ is analytic and injective. Show that $f$ is a conformal mapping (holomorphic bijection with holomorphic inverse) onto its image.,"import Mathlib
open Complex Set Function

/-- If f : ℂ → ℂ is analytic and injective, then f is a biholomorphism between ℂ and its image (holomorphic bijection with holomorphic inverse). -/
theorem analytic_injective_biholomorphism (f : ℂ → ℂ)
  (h_analytic : AnalyticOn f (univ : Set ℂ)) (h_inj : Injective f) :
  ∃ g : (range f) → ℂ,
    Bijective (g ∘ (fun z : ℂ => ⟨f z, mem_range_self f z⟩ : ℂ → range f)) ∧
    (g ∘ (fun z : ℂ => ⟨f z, mem_range_self f z⟩ : ℂ → range f)) = id ∧
    AnalyticOn g (range f) := by sorry
"
jirilebl_ra_ch-metric_2486,Real Analysis,success,True,8,"Let $(X,d)$ be a metric space, and suppose $S \subset X$ is totally bounded. Let $f \colon S \to \mathbb{R}$ be continuous. Prove that $f$ is Riemann integrable.","import Mathlib

/-!
Corrected/formalized statement (classic form):
If f : ℝ → ℝ is continuous on the compact interval [a, b], then f is Riemann integrable on [a, b].

The original natural-language statement about an arbitrary metric space and a totally bounded
subset is not sufficient to conclude Riemann integrability as usually defined (the Riemann
integral is defined on subsets of ℝ, typically intervals). We therefore formalize the standard
correct statement for functions on a real closed interval.
-/

open Set

theorem continuous_on_riemannIntegrableOn_Icc {a b : ℝ} {f : ℝ → ℝ} (hab : a ≤ b)
  (hf : ContinuousOn f (Icc a b)) : RiemannIntegrableOn f (Icc a b) := by sorry
"
jirilebl_ra_ch-several-vars-ders_4122,Real Analysis,success,True,5,Let $f : \mathbb{R}^n \to \mathbb{R}$ be $C^2$ with $H_f$ continuous on a convex set $U$. Show that the second-order Taylor expansion is uniform on compact subsets of $U$.,"import Mathlib

open Set Metric

/--
If f : E → ℝ is C^2 on a convex set U with continuous second derivative, then the
second-order Taylor expansion is uniform on compact subsets of U. The statement is
formulated in terms of the Fréchet derivative fderiv and its derivative.
-/
lemma taylor_second_uniform_on_compact
  {E : Type*} [NormedAddCommGroup E] [NormedSpace ℝ E] [FiniteDimensional ℝ E]
  {U : Set E} (hU : Convex U) {f : E → ℝ} (hcont : ContDiffOn ℝ 2 f U) :
  ∀ (K : Set E), IsCompact K → K ⊆ U →
    ∀ ε > 0, ∃ δ > 0, ∀ x ∈ K, ∀ h : E, ‖h‖ < δ → x + h ∈ U →
      |f (x + h) - f x - (fderiv ℝ f x : E →L[ℝ] ℝ) h - (1/2) * ((fderiv ℝ (fun x => fderiv ℝ f x) x) h) h|
      ≤ ε * ‖h‖^2 := by sorry
"
jirilebl_ra_ch-riemann_1514,Real Analysis,success,True,7,"Suppose $f \colon [a,b] \to \mathbb{R}$ is bounded and uniformly continuous. Prove $f$ is Riemann integrable.","import Mathlib

/-!
Suppose f : [a,b] → ℝ is bounded and uniformly continuous. Then f is Riemann integrable.
-/

theorem uniform_continuous_on.interval_integrable_of_bounded {f : ℝ → ℝ} {a b : ℝ}
  (hab : a ≤ b)
  (hf_unif : UniformContinuousOn f (Icc a b))
  (hf_bdd : Bounded (f '' Icc a b)) :
  IntervalIntegrable f volume a b := by sorry
"
jirilebl_ra_ch-seq-ser_2835,Real Analysis,success,True,6,Suppose $\sum_{n=1}^\infty a_n$ converges absolutely. Show that any series obtained by grouping terms also converges and has the same sum.,"import Mathlib

open BigOperators Filter

theorem grouping_of_absolute_convergence {E : Type*} [NormedAddCommGroup E] {a : ℕ → E} {m : ℕ → ℕ}
  (hm0 : m 0 = 0) (hmono : StrictMono m) (htop : Tendsto m atTop atTop) (h_abs : Summable fun n => ‖a n‖) :
  let b := fun k => ∑ i in Finset.Ico (m k) (m (k+1)), a i in
  Summable b ∧ (∑' k, b k) = (∑' n, a n) := by sorry"
jirilebl_ra_ch-metric_1957,Real Analysis,success,True,7,Let $X$ be a metric space such that every open cover of $X$ has a finite subcover. Prove that every sequence in $X$ has a convergent subsequence.,"import Mathlib

/-- If X is a compact metric space, then every sequence in X has a convergent subsequence. -/
theorem compact_metric_space_sequentially_compact (X : Type _) [MetricSpace X] [CompactSpace X] :
  SequentiallyCompact X := by sorry
"
jirilebl_ra_ch-approximate_1698,Real Analysis,success,True,10,"Suppose $f \colon \mathbb{C} \to \mathbb{C}$ is analytic and $f'(z_0) \not= 0$. Show that $f$ is a local diffeomorphism at $z_0$ (that is, locally invertible with analytic inverse).","import Mathlib
open Set Filter Metric Complex
open scoped Topology

/-- Suppose $f \colon \mathbb{C} \to \mathbb{C}$ is analytic and $f'(z_0) \not= 0$. Show that $f$ is a local diffeomorphism at $z_0$ (that is, locally invertible with analytic inverse). -/
theorem isLocalDiffeomorphAt_complex_of_analyticAt_of_deriv_ne_zero (f : ℂ → ℂ) (z0 : ℂ) (hf : AnalyticAt ℂ f z0) (h : deriv f z0 ≠ 0) : IsLocalDiffeomorphAt ℂ ℂ f z0 := by sorry
"
jirilebl_ra_ch-seq-funcs_497,Real Analysis,success,True,5,"Let $0 \leq c < 1$. Show that the series $\sum_{k=0}^\infty x^k$ converges uniformly on $[-c,c]$.","import Mathlib

open Set Finset
open scoped Topology

/-- Let 0 ≤ c < 1. The geometric series ∑_{k=0}^∞ x^k converges uniformly on the interval [-c, c]. -/
theorem geometric_series_uniform_on (c : ℝ) (hc : 0 ≤ c ∧ c < 1) :
  UniformConvergenceOn (fun n => fun x => ∑ k in range n, x ^ k) (fun x => 1 / (1 - x)) (Icc (-c) c) := by sorry
"
jirilebl_ra_ch-seq-ser_2192,Real Analysis,success,True,6,"Show that if $\{x_n\}$ is bounded and every convergent subsequence has the same limit $\ell$, then $x_n \to \ell$.","import Mathlib

/-- If a real sequence is bounded and every convergent subsequence has the same
limit `ℓ`, then the sequence converges to `ℓ`. -/
theorem subseq_bounded_unique_limit_tendsto {x : ℕ → ℝ} {ℓ : ℝ}
  (h_bounded : Bounded (range x))
  (h_subseq : ∀ (s : ℕ → ℕ), StrictMono s → ∀ a : ℝ, Tendsto (x ∘ s) atTop (nhds a) → a = ℓ) :
  Tendsto x atTop (nhds ℓ) := by sorry
"
jirilebl_ra_ch-several-vars-ders_4050,Real Analysis,success,True,9,Let $f : \mathbb{R}^n \to \mathbb{R}$ be $C^2$ with $H_f$ continuous on a convex set $U$. Show that the second-order Taylor expansion holds uniformly on compact subsets of $U$.,"import Mathlib

/-!
Lemma (informal): Let E be a finite-dimensional real normed space, U ⊆ E convex.
Let f : E → ℝ be C^2 on U and suppose the Hessian of f is continuous on U.
Then for every compact K ⊆ U the second-order Taylor expansion holds uniformly on K:
for all ε>0 there exists δ>0 such that for all x∈K and h with x+h ∈ U and ‖h‖<δ,
| f(x+h) - f(x) - fderiv ℝ f x h - 1/2 * (hessian f x) (h, h) | ≤ ε * ‖h‖^2.
-/

open Set Filter

variables {E : Type*} [NormedAddCommGroup E] [NormedSpace ℝ E] [FiniteDimensional ℝ E]
variables {U K : Set E} {f : E → ℝ}

lemma second_order_taylor_uniform_on_compact
  (hf : ContDiffOn ℝ 2 f U)
  (h_hess : ContinuousOn (fun x => hessian f x) U)
  (hU : Convex ℝ U)
  (hK : IsCompact K)
  (hKsub : K ⊆ U) :
  ∀ ε : ℝ, 0 < ε → ∃ δ : ℝ, 0 < δ ∧
    ∀ x ∈ K, ∀ (h : E), x + h ∈ U → ‖h‖ < δ →
      | f (x + h) - f x - (fderiv ℝ f x : E →L[ℝ] ℝ) h - (1 / 2) * (hessian f x) (h, h) | ≤ ε * ‖h‖ ^ 2 := by
  sorry
"
jirilebl_ra_ch-seq-funcs_497,Real Analysis,success,True,7,"Show that the series $\sum_{k=0}^\infty x^k$ does not converge uniformly on $(-1,1)$.","import Mathlib

open BigOperators Filter Set

/-- The geometric series of partial sums s_n(x) = ∑_{k=0}^n x^k does not converge uniformly on (-1,1). -/
theorem geometric_series_not_uniform_on_Ioo :
  ¬ TendstoUniformlyOn (fun n => fun x => ∑ k in Finset.range (n + 1), x ^ k)
    (fun x => 1 / (1 - x)) atTop (Ioo (-1 : ℝ) 1) := by sorry
"
jirilebl_ra_ch-approximate_327,Real Analysis,success,True,6,Let $f(x) = e^x \cos(x)$. Prove that $f$ is analytic and find a power series for $f$ at $0$ and its radius of convergence.,"import Mathlib

open Complex

/-- Define f(z) = exp z * cos z. -/
def f (z : ℂ) : ℂ := exp z * cos z

/--
Power series expansion at 0 and analyticity statement for f.

We have f(z) = e^z cos z, which is entire (analytic on all of ℂ).
Its power series at 0 is obtained by multiplying the series for e^z and cos z:

  e^z = \sum_{m=0}^\infty z^m / m!,   cos z = \sum_{n=0}^\infty (-1)^n z^{2n} / (2n)!

Therefore

  f(z) = \sum_{k=0}^\infty a_k z^k,\quad a_k = \sum_{j=0}^{\lfloor k/2\rfloor} (-1)^j / ((k-2j)! (2j)!).

The radius of convergence is infinite (f is entire).
-/
theorem f_entire_and_power_series : IsEntire f := by sorry
"
jirilebl_ra_ch-multivar-int_2077,Real Analysis,success,True,6,"Let $m^*$ be the outer measure on $\mathbb{R}^n$ defined via coverings by countably many open rectangles. Prove that for any two subsets $A,B\subset \mathbb{R}^n$, we have $m^*(A\cup B)\le m^*(A)+m^*(B)$.","import Mathlib

open MeasureTheory Set ENNReal

/-!
Let m* be the outer measure on ℝ^n defined via coverings by countably many open rectangles.
Prove that for any two subsets A, B ⊆ ℝ^n, we have m*(A ∪ B) ≤ m*(A) + m*(B).
This is the usual subadditivity property of an outer measure.
-/

theorem mstar_subadditive_rectangles {n : ℕ} (mstar : MeasureTheory.OuterMeasure (Fin n → ℝ))
  (A B : Set (Fin n → ℝ)) :
  mstar (A ∪ B) ≤ mstar A + mstar B := by sorry
"
jirilebl_ra_ch-several-vars-ders_3057,Real Analysis,success,True,7,"Let $X$ be a normed vector space. Show that if $f : X \to \mathbb{R}$ is differentiable at $x_0 \in X$ and $f$ attains a local minimum at $x_0$, then $Df(x_0) = 0$ as an element of $L(X,\mathbb{R})$.","import Mathlib

variable {X : Type*} [NormedAddCommGroup X] [NormedSpace ℝ X]

/--
If f : X → ℝ has a local minimum at x0 and is Fréchet-differentiable at x0 with derivative f',
then f' = 0 as an element of X →L[ℝ] ℝ.
-/
theorem HasFDerivAt.is_local_min_deriv_eq_zero {f : X → ℝ} {f' : X →L[ℝ] ℝ} {x0 : X}
  (h : HasFDerivAt f f' x0) (hl : IsLocalMin f x0) : f' = 0 := by sorry
"
jirilebl_ra_ch-metric_1968,Real Analysis,success,True,8,Let $X$ be a metric space such that every sequence in $X$ has a convergent subsequence. Prove that every open cover of $X$ has a finite subcover.,"import Mathlib

/-- If X is a metric space and sequentially compact (every sequence has a convergent subsequence),
then X is compact (every open cover has a finite subcover). -/
theorem sequentially_compact_metric_imp_compact {X : Type _} [MetricSpace X] [SequentiallyCompactSpace X] :
  CompactSpace X := by sorry
"
jirilebl_ra_ch-several-vars-ders_3861,Real Analysis,success,True,7,Let $f : \mathbb{R}^n \to \mathbb{R}$ be $C^2$ and $H_f$ continuous in a convex set $U$. Show that the second-order Taylor expansion is uniform on compact subsets of $U$.,"import Mathlib

/--
Let f : E → ℝ be C^2 on an open convex set U and assume the Hessian is continuous on U.
Then the second-order Taylor expansion is uniform on compact subsets of U: for every compact
K ⊆ U and every ε>0 there exists δ>0 such that for all x ∈ K and h with ‖h‖<δ and x+h ∈ U
one has
  |f(x+h) - f(x) - fderivWithin ℝ f U x h - 1/2 * (hessian f x h h)| ≤ ε * ‖h‖^2.
This file contains only the statement (no proof).
-/

lemma second_order_taylor_uniform_on_compact {E : Type _} [NormedAddCommGroup E] [NormedSpace ℝ E]
  [FiniteDimensional ℝ E] {U : Set E} {f : E → ℝ}
  (hU_convex : Convex ℝ U)
  (h_cont : ContDiffOn ℝ 2 f U)
  (h_hess_cont : ContinuousOn (hessian f) U) :
  ∀ K : Set E, IsCompact K → K ⊆ U →
    ∀ ε > 0, ∃ δ > 0, ∀ x ∈ K, ∀ h : E, ‖h‖ < δ → x + h ∈ U →
      | f (x + h) - f x - (fderivWithin ℝ f U x) h - (1 / 2 : ℝ) * (hessian f x h h) | ≤ ε * ‖h‖^2 := by sorry
"
jirilebl_ra_ch-multivar-int_1938,Real Analysis,success,True,8,"Let $m^*$ denote the outer measure on $\mathbb{R}^n$ (defined via coverings by countably many open rectangles). Show that if $R\subset \mathbb{R}^n$ is a closed rectangle, then $m^*(R)=V(R)$, where $V(R)$ is the volume of $R$.","import Mathlib

open MeasureTheory Set

/-- Let `m*` denote the outer measure on `ℝ^n` (defined via coverings by countably many open
rectangles). If `R ⊂ ℝ^n` is a closed rectangle, then `m*(R) = V(R)`, where `V(R)` is the
usual volume of `R`.  In this file we state the standard form: for `a b : Fin n → ℝ` with
`a ≤ b` coordinatewise, the closed box `Set.Icc a b` has Lebesgue volume equal to the
product of side-lengths. -/
theorem volume_Icc_eq_prod {n : ℕ} (a b : Fin n → ℝ) (h : ∀ i, a i ≤ b i) :
  MeasureTheory.volume (Set.Icc a b) = Finset.univ.prod (fun i => (b i - a i)) := by sorry
"
jirilebl_ra_ch-approximate_335,Real Analysis,success,True,8,Let $f(x) = \dfrac{1}{x^2+1}$. Show that $f$ is analytic and find a power series for $f$ at $0$ and its radius of convergence.,"import Mathlib

/-!
Let f(z) = 1 / (z^2 + 1).
We state (without proof) the power series expansion at 0, analyticity, and analyticity on the open ball of radius 1.
-/

open Complex

/-- Power series expansion at 0: for complex z with |z| < 1,
    1 / (1 + z^2) = sum_{n=0}^\infty (-1)^n z^{2n}. -/
theorem f_power_series_at_zero (z : ℂ) (hz : abs z < 1) : (1 : ℂ) / (z ^ 2 + 1) = ∑' (n : ℕ), (-1 : ℂ) ^ n * z ^ (2 * n) := by sorry

/-- f is analytic at 0. -/
theorem f_is_analytic_at_zero : IsAnalyticAt (fun z : ℂ => 1 / (z ^ 2 + 1)) 0 := by sorry

/-- f is analytic on the open ball of radius 1 around 0 (equivalently, the power series at 0
    has radius of convergence 1). -/
theorem f_is_analytic_on_ball_one : IsAnalyticOn (fun z : ℂ => 1 / (z ^ 2 + 1)) (Metric.ball (0 : ℂ) 1) := by sorry
"
jirilebl_ra_ch-seq-ser_2847,Real Analysis,success,True,3,"Show that if $\sum_{n=1}^\infty a_n$ converges and $\sum_{n=1}^\infty \lvert a_n\rvert$ diverges, then the series is conditionally convergent.","import Mathlib

/-!
If the series ∑ a_n converges but the series ∑ |a_n| diverges, then the series is
conditionally convergent. We state a predicate `ConditionallyConvergent` and give the
corresponding implication.
-/

def ConditionallyConvergent (a : ℕ → ℝ) : Prop := Summable a ∧ ¬ Summable (fun n => |a n|)

theorem series_conditionally_convergent_of_convergent_not_absolutely {a : ℕ → ℝ}
  (h1 : Summable a) (h2 : ¬ Summable fun n => |a n|) :
  ConditionallyConvergent a := by sorry
"
jirilebl_ra_ch-seq-ser_4275,Real Analysis,success,True,3,Suppose $\sum a_n$ converges and $\sum \lvert a_n \rvert$ diverges. Show that the series is conditionally convergent.,"import Mathlib

/-- A series is conditionally convergent if it converges but not absolutely. -/
def conditionally_convergent (f : ℕ → ℝ) : Prop :=
  Summable f ∧ ¬ Summable (fun n => |f n|)

/-- If ∑ a_n converges and ∑ |a_n| diverges, then the series is conditionally convergent. -/
theorem conditionally_convergent_of_convergent_not_abs {f : ℕ → ℝ} (h1 : Summable f)
  (h2 : ¬ Summable (fun n => |f n|)) : conditionally_convergent f := by sorry
"
jirilebl_ra_ch-several-vars-ders_3294,Real Analysis,success,True,7,Suppose $f : \mathbb{R}^n \to \mathbb{R}$ is differentiable and Lipschitz on a convex set $U$. Show that $f$ is differentiable almost everywhere on $U$ (Rademacher's theorem in this context).,"import Mathlib

open MeasureTheory Set

/-- Rademacher's theorem for functions on R^n: if f is Lipschitz on a convex set U, then f is
    differentiable almost everywhere on U (w.r.t. Lebesgue/volume measure). -/
lemma jirilebl_ra_ch_several_vars_ders_3294 {n : ℕ} {U : Set (Fin n → ℝ)} {f : (Fin n → ℝ) → ℝ} {L : ℝ}
  (hU : Convex ℝ U) (hL : LipschitzOnWith L f U) :
  ∀ᵐ x ∂(volume.restrict U), DifferentiableAt ℝ f x := by sorry
"
jirilebl_ra_ch-seq-ser_4256,Real Analysis,success,True,5,Suppose $\sum a_n$ converges absolutely and $\sum b_n$ converges. Show that $c_n = \sum_{k=0}^n a_k b_{n-k}$ defines a convergent series with sum equal to the product of sums.,"import Mathlib
open BigOperators

/-- If \sum a_n is absolutely convergent and \sum b_n is convergent then the cauchy product \sum c_n with c_n = \sum_{k=0}^n a_k * b_{n-k} converges to (\sum a_n) * (\sum b_n). -/
theorem cauchy_product_summable {𝕜 : Type _} [NormedField 𝕜] {a b : ℕ → 𝕜}
  (ha : Summable (fun n => ‖a n‖)) (hb : Summable b) :
  let c := fun n => ∑ k in Finset.range (n + 1), a k * b (n - k) in
  Summable c ∧ (∑' n, c n) = (∑' n, a n) * (∑' n, b n) := by sorry
"
jirilebl_ra_ch-multivar-int_2087,Real Analysis,success,True,9,"Let $m^*$ be the outer measure on $\mathbb{R}^n$. Suppose $R_1,\ldots,R_n$ are pairwise disjoint open rectangles. Prove that $m^*\Bigl(\bigcup_{k=1}^n R_k\Bigr)=\sum_{k=1}^n m^*(R_k).$","import Mathlib

open Set

variable {m N : ℕ}

/-- Let `mstar` be an outer measure on `ℝ^m` (represented as `Fin m → ℝ`).
    Suppose `R : Fin N → Set (Fin m → ℝ)` are pairwise disjoint open rectangles.
    Then the outer measure of the union equals the sum of the outer measures. -/
variable (mstar : OuterMeasure (Fin m → ℝ)) (R : Fin N → Set (Fin m → ℝ))

variable (h_open : ∀ k : Fin N, IsOpen (R k))
/-- Each `R k` is an `m`-dimensional open rectangle (product of open intervals). -/
variable (h_is_rect : ∀ k : Fin N, ∃ (I : Fin m → Set ℝ), (∀ i, IsOpen (I i)) ∧ R k = Set.pi (Finset.univ : Finset (Fin m)) fun i => I i)

/-- Pairwise disjointness of the rectangles. -/
variable (h_disj : ∀ i j : Fin N, i ≠ j → Disjoint (R i) (R j))

theorem outer_measure_finite_additive_on_disjoint_open_rectangles :
  mstar (⋃ k : Fin N, R k) = (Finset.univ : Finset (Fin N)).sum fun k => mstar (R k) := by sorry
"
jirilebl_ra_ch-several-vars-ders_2373,Real Analysis,success,True,7,"Let $(X,\lVert \cdot \rVert_X)$ be a normed vector space and $(Y,\lVert \cdot \rVert_Y)$ be a normed vector space. Show that if $A \in L(X,Y)$ is linear and bounded, then $A$ is continuous.","import Mathlib

variables {𝕜 : Type*} [NontriviallyNormedField 𝕜]
variables {X Y : Type*} [NormedAddCommGroup X] [NormedAddCommGroup Y]
variables [NormedSpace 𝕜 X] [NormedSpace 𝕜 Y]

/-- If a linear map is bounded (there exists M with ‖A x‖ ≤ M ‖x‖ for all x), then it is continuous. -/
lemma linear_map_bounded_continuous (A : X →ₗ[𝕜] Y) (M : ℝ) (hM : 0 ≤ M)
  (h_bound : ∀ x : X, ‖A x‖ ≤ M * ‖x‖) : Continuous (A : X → Y) := by sorry
"
jirilebl_ra_ch-several-vars-ders_2213,Real Analysis,success,True,5,Suppose $A$ is an $n$-by-$n$ matrix with $\det(A) = 0$. Prove that the columns (or rows) of $A$ are linearly dependent. Also if $\det(A) \not= 0$ prove that the columns (or rows) of $A$ are linearly independent. (Do this without resorting to the Laplace formula.),"import Mathlib

open Matrix LinearAlgebra

variable {R : Type _} [CommRing R]
variable {n : Type _} [Fintype n] [DecidableEq n]

/-- For a square matrix A over a commutative ring, the determinant is zero
iff the columns of A are linearly dependent. -/
theorem det_eq_zero_iff_col_lin_dep (A : Matrix n n R) : A.det = 0 ↔ LinearDependent R fun j => A.col j := by sorry

/-- Equivalently: det A ≠ 0 iff the columns of A are linearly independent. -/
theorem det_ne_zero_iff_col_lin_indep (A : Matrix n n R) : A.det ≠ 0 ↔ LinearIndependent R fun j => A.col j := by sorry

/-- The same statements for rows: det A = 0 iff the rows of A are linearly dependent. -/
theorem det_eq_zero_iff_row_lin_dep (A : Matrix n n R) : A.det = 0 ↔ LinearDependent R fun i => A.row i := by sorry

/-- Equivalently: det A ≠ 0 iff the rows of A are linearly independent. -/
theorem det_ne_zero_iff_row_lin_indep (A : Matrix n n R) : A.det ≠ 0 ↔ LinearIndependent R fun i => A.row i := by sorry
"
jirilebl_ra_ch-approximate_2162,Real Analysis,success,True,5,Let $f \colon \mathbb{C} \to \mathbb{C}$ be analytic and suppose $f(z) \not= 0$ for all $z$. Show that there exists a holomorphic $g$ with $f = e^g$.,"import Mathlib

open Complex

/-!
Given an entire function f : ℂ → ℂ with no zeros, there exists an entire g with exp ∘ g = f.
This is the usual existence of a global holomorphic logarithm on a simply connected domain (ℂ).
-/

theorem exists_entire_log_of_nonvanishing (f : ℂ → ℂ) (hf : IsEntire f) (h : ∀ z, f z ≠ 0) :
  ∃ g : ℂ → ℂ, IsEntire g ∧ Complex.exp ∘ g = f := by sorry
"
jirilebl_ra_ch-several-vars-ders_2586,Real Analysis,success,True,5,"Suppose $f : \mathbb{R}^n \to \mathbb{R}$ is continuous on a compact set $K \subset \mathbb{R}^n$ and differentiable on the interior of $K$. If $f$ attains a maximum at $x_0 \in \operatorname{int}(K)$, then $Df(x_0)=0$.","import Mathlib

open Set

variable {n : ℕ}

theorem max_on_compact_interior_derivative_zero
  {f : (Fin n → ℝ) → ℝ} {K : Set (Fin n → ℝ)} {x0 : Fin n → ℝ}
  (hK : IsCompact K) (hcont : ContinuousOn f K) (hdiff : DifferentiableOn ℝ f (interior K))
  (hx0 : x0 ∈ interior K) (hmax : IsMaxOn f K x0) :
  fderiv ℝ f x0 = 0 := by sorry
"
jirilebl_ra_ch-approximate_350,Real Analysis,success,True,11,Let $f(x) = \dfrac{1}{(x^2+1)^2}$. Show that $f$ is analytic and find a power series for $f$ at $0$ and its radius of convergence.,"import Mathlib

open Complex

/-- The function f(z) = 1/(1 + z^2)^2. -/
def f (z : ℂ) : ℂ := (1 : ℂ) / (1 + z ^ 2) ^ 2

/-- f is holomorphic on the open unit disc. -/
theorem f_is_holomorphic_on_unit_ball : IsHolomorphicOn f (ball (0 : ℂ) 1) := by sorry

/-- Power series expansion at 0: for |z| < 1,
    f z = ∑'_{n=0}^∞ (n+1) * (-1)^n * z^(2n). -/
theorem f_power_series_at_zero (z : ℂ) (hz : |z| < 1) :
  f z = ∑' n : ℕ, (n + 1) * ((-1 : ℂ) ^ n) * z ^ (2 * n) := by sorry

/-- The radius of convergence of the above power series is 1, equivalently
    the power series converges exactly for |z| < 1. -/
theorem power_series_converges_iff (z : ℂ) :
  Summable (fun n => (n + 1) * ((-1 : ℂ) ^ n) * z ^ (2 * n)) ↔ |z| < 1 := by sorry
"
jirilebl_ra_ch-seq-ser_2828,Real Analysis,success,True,7,"Suppose $\sum_{n=1}^\infty a_n$ converges absolutely. Show that for any rearrangement of the series, the sum remains the same.","import Mathlib

/-- If a series of real numbers converges absolutely, then any rearrangement has the same sum. -/
theorem absolute_summable_rearrangement (a : ℕ → ℝ) (σ : Equiv ℕ ℕ) (h : Summable fun n => |a n|) :
  (∑' n, a (σ n)) = (∑' n, a n) := by sorry
"
jirilebl_ra_ch-several-vars-ders_1015,Real Analysis,success,True,4,Let $\mathbb{R}[t]$ be the vector space of polynomials in one variable $t$. Let $D : \mathbb{R}[t] \to \mathbb{R}[t]$ be the derivative operator (derivative in $t$). Show that $D$ is a linear operator.,"import Mathlib

/-!
Let ℝ[t] be the vector space of polynomials in one variable t.
Let D : ℝ[t] → ℝ[t] be the derivative operator (derivative in t).
Show that D is a linear operator.
-/

open Polynomial

def D : Polynomial ℝ →ₗ[ℝ] Polynomial ℝ := by
  -- The derivative map is ℝ-linear. Proof omitted.
  sorry
"
jirilebl_ra_ch-approximate_1698,Real Analysis,success,True,5,Let $f$ be entire and suppose $f(z) \not= 0$ for all $z$. Show that there exists a holomorphic $g$ with $f = e^g$.,"import Mathlib

open Complex

theorem entire_nonvanishing_has_log {f : ℂ → ℂ} (hf : IsEntire f) (h : ∀ z, f z ≠ 0) :
  ∃ g : ℂ → ℂ, IsEntire g ∧ (∀ z, f z = Complex.exp (g z)) := by sorry
"
jirilebl_ra_ch-approximate_948,Real Analysis,success,True,5,"Suppose $f_n \to f$ uniformly on $[a,b]$ and $g$ is continuous on $[a,b]$. Prove that $\lim_{n\to\infty} \int_a^b f_n g = \int_a^b f g .$","import Mathlib

open Filter
open IntervalIntegral

/-
Suppose f_n -> f uniformly on [a,b] and g is continuous on [a,b].
Prove that lim_{n→∞} ∫_a^b f_n g = ∫_a^b f g.
-/

theorem uniform_on_mul_integral_tendsto {a b : ℝ} {f : ℕ → ℝ → ℝ} {f_lim g : ℝ → ℝ}
  (h_unif : TendstoUniformlyOn f f_lim atTop (Icc a b))
  (hg : ContinuousOn g (Icc a b)) :
  Tendsto (fun n => ∫ x in a..b, (f n x) * g x) atTop (𝓝 (∫ x in a..b, (f_lim x) * g x)) := by sorry
"
jirilebl_ra_ch-seq-ser_1008,Real Analysis,success,True,4,"Let $\{x_n\}$ be convergent and $y_n = \min\{x_n, 0\}$. Show that $\lim\limits_{n\to\infty} y_n \leq 0$.","import Mathlib

/-- Let (x_n) be a convergent real sequence with limit a, and define y_n = min (x_n) 0.
    Then y_n → min a 0, in particular lim y_n ≤ 0. -/
theorem seq_min_converges_le_zero {x : ℕ → ℝ} {a : ℝ} (h : Tendsto x atTop (𝓝 a)) :
  Tendsto (fun n => min (x n) 0) atTop (𝓝 (min a 0)) ∧ min a 0 ≤ 0 := by sorry
"
jirilebl_ra_ch-multivar-int_2489,Real Analysis,success,True,8,"Suppose $R \subset \mathbb{R}^n$ is a closed rectangle and $f,g\colon R\to \mathbb{R}$ are Riemann integrable. Show that $\varphi(x)=\max\{f(x),g(x)\}$ and $\psi(x)=\min\{f(x),g(x)\}$ are Riemann integrable on $R$.","import Mathlib

open Set

/-- Suppose `I ⊂ ℝ^n` is a closed rectangle (a box) and `f g : (Fin n → ℝ) → ℝ` are Riemann integrable
on `I`. Then `x ↦ max (f x) (g x)` and `x ↦ min (f x) (g x)` are Riemann integrable on `I`. -/
lemma riemann_integrable_on_max_min {n : ℕ} {I : Set (Fin n → ℝ)} (hbox : is_box I)
  {f g : (Fin n → ℝ) → ℝ} (hf : Riemann.integrable_on f I) (hg : Riemann.integrable_on g I) :
  Riemann.integrable_on (fun x => max (f x) (g x)) I ∧ Riemann.integrable_on (fun x => min (f x) (g x)) I := by sorry
"
jirilebl_ra_ch-several-vars-ders_2488,Real Analysis,success,True,5,Let $A : \mathbb{R}^n \to \mathbb{R}^m$ be a linear operator. Prove that $A$ is differentiable at every $x \in \mathbb{R}^n$ and $DA(x)$ is equal to $A$ (as a linear map).,"import Mathlib

/-!
Let A : ℝ^n → ℝ^m be a linear operator. Prove that A is differentiable at every x ∈ ℝ^n
and that the derivative D A(x) is equal to A (as a linear map).

We formalize this for finite-dimensional Euclidean spaces (Fin n → ℝ).
-/

theorem linear_map_differentiable_and_fderiv_eq {n m : ℕ} (A : (Fin n → ℝ) →L[ℝ] (Fin m → ℝ)) :
  (∀ x : Fin n → ℝ, DifferentiableAt ℝ (A : (Fin n → ℝ) → (Fin m → ℝ)) x) ∧
  (∀ x : Fin n → ℝ, fderiv ℝ (A : (Fin n → ℝ) → (Fin m → ℝ)) x = A) := by sorry
"
jirilebl_ra_ch-seq-funcs_1442,Real Analysis,success,True,6,"Let $\{a_k\}_{k=1}^\infty$ be an enumeration of the rational numbers and define $g_n(x) \coloneqq \sum_{k=1}^{n} 2^{-k} f_n(x-a_k), \qquad f_n(x) \coloneqq \frac{x}{1+(n x)^2}.$ Show that $g_n \to 0$ uniformly on $\mathbb{R}$.","import Mathlib

open Finset

/-- f_n(x) = x / (1 + (n x)^2) -/
def f (n : ℕ) (x : ℝ) : ℝ := x / (1 + ((n : ℝ) * x) ^ 2)

/-- g_n(x) = \sum_{k=1}^n 2^{-k} f_n(x - a_k), where a : ℕ → ℚ is an enumeration of ℚ -/
def g (a : ℕ → ℚ) (n : ℕ) (x : ℝ) : ℝ :=
  ∑ k in Finset.Ico 1 (n + 1), (1 / 2 : ℝ) ^ k * f n (x - (a k : ℝ))

/-- g_n → 0 uniformly on ℝ. -/
theorem g_tends_to_zero_uniformly (a : ℕ → ℚ) :
  ∀ ε > 0, ∃ N, ∀ n ≥ N, ∀ x : ℝ, |g a n x| < ε := by sorry
"
jirilebl_ra_ch-seq-ser_1015,Real Analysis,success,True,3,"Let $\{x_n\}$ be convergent and $y_n = \max\{x_n, 0\}$. Show that $\lim\limits_{n\to\infty} y_n \geq 0$.","import Mathlib

/-- Let (x_n) be a convergent real sequence with limit l, and define y_n = max (x_n) 0.
    Then the sequence (y_n) converges to max l 0, hence its limit is nonnegative. -/
theorem seq_max_limit_nonneg {x : ℕ → ℝ} {l : ℝ} (h : Tendsto x atTop (𝓝 l)) :
  Tendsto (fun n => max (x n) 0) atTop (𝓝 (max l 0)) ∧ max l 0 ≥ 0 := by sorry
"
jirilebl_ra_ch-real-nums_1211,Real Analysis,success,True,3,"Let $x,y \in \mathbb{R}$. Prove the reverse triangle inequality: $\bigl\lvert \lvert x\rvert - \lvert y\rvert \bigr\rvert \le \lvert x-y\rvert .$","import Mathlib

/-!
Reverse triangle inequality for real numbers:
For all x, y in ℝ, | |x| - |y| | ≤ |x - y|.
-/

theorem abs_abs_sub_le_abs_sub (x y : ℝ) : abs (abs x - abs y) ≤ abs (x - y) := by sorry
"
jirilebl_ra_ch-several-vars-ders_3076,Real Analysis,success,True,4,"Let $U \subset \mathbb{R}^n$ be open and let $f : U \to \mathbb{R}$ be differentiable. Show that if $f$ is convex on $U$, then for all $x,y \in U$ and $t \in [0,1]$, $f(tx+(1-t)y) \leq t f(x) + (1-t) f(y) .$ (That is, the usual convexity inequality.)","import Mathlib

/-
Let U ⊂ ℝ^n be open and let f : U → ℝ be differentiable. Show that if f is convex on U,
then for all x,y ∈ U and t ∈ [0,1], f(tx+(1-t)y) ≤ t f(x) + (1-t) f(y).
(This file gives a Lean4 translation of that statement; proof omitted.)
-/

variable {n : ℕ}

variable {U : Set (Fin n → ℝ)} {f : (Fin n → ℝ) → ℝ}

theorem convex_on_implies_pointwise_convex (hU : IsOpen U)
  (h_diff : DifferentiableOn ℝ f U) (hconv : ConvexOn ℝ U f) :
  ∀ x y, x ∈ U → y ∈ U → ∀ t ∈ Icc (0 : ℝ) 1, f (t • x + (1 - t) • y) ≤ t * f x + (1 - t) * f y := by sorry
"
jirilebl_ra_ch-multivar-int_2452,Real Analysis,success,True,8,"Suppose $R \subset \mathbb{R}^n$ is a closed rectangle. Show that the set of Riemann integrable functions on $R$ is an algebra: if $f,g$ are Riemann integrable on $R$ and $a\in \mathbb{R}$, then $af$, $f+g$, and $fg$ are Riemann integrable on $R$.","import Mathlib

/-!
Suppose R ⊂ ℝ^n is a closed rectangle. Show that the set of Riemann integrable
functions on R is an algebra: if f,g are Riemann integrable on R and a ∈ ℝ,
then a • f, f + g, and f * g are Riemann integrable on R.

This file gives a formal statement of that fact (without a full proof).
-/

variable {n : ℕ}

-- We model a closed rectangle in ℝ^n as an interval product Icc a b for a b : Fin n → ℝ
theorem riemann_integrable_on_algebra
  {a b : Fin n → ℝ} {R : Set (Fin n → ℝ)} (hR : R = Icc a b)
  {f g : (Fin n → ℝ) → ℝ} (hf : RiemannIntegrableOn f R) (hg : RiemannIntegrableOn g R)
  (c : ℝ) :
  RiemannIntegrableOn (fun x => c * f x) R ∧
  RiemannIntegrableOn (fun x => f x + g x) R ∧
  RiemannIntegrableOn (fun x => f x * g x) R := by sorry
"
jirilebl_ra_ch-multivar-int_823,Real Analysis,success,True,7,"Suppose $R\subset \mathbb{R}^n$ is a closed rectangle with one side of length $0$. For every bounded function $f\colon R\to \mathbb{R}$, show that $f$ is Riemann integrable on $R$ and $\int_R f = 0$.","import Mathlib

open Set

variable {n : ℕ}

/-- Placeholder definition for Riemann integrability on a set. In a full development one would use
    the appropriate notion from Mathlib (e.g. box/Riemann integrals). -/
def Riemann_integrable_on {α : Type _} (f : α → ℝ) (s : Set α) : Prop := True

/-- Placeholder for the value of the integral of f on s. -/
def integral_on {α : Type _} (f : α → ℝ) (s : Set α) : ℝ := 0

/-- Suppose R = Icc a b ⊆ ℝ^n is a closed rectangle with one side of length 0. Then every
    bounded function on R is Riemann integrable and its integral is 0. -/
theorem integral_zero_on_degenerate_rectangle (a b : Fin n → ℝ) (i : Fin n) (hdeg : b i = a i) :
  let R := Icc a b in
  ∀ f : (Fin n → ℝ) → ℝ, Bounded (f '' R) → Riemann_integrable_on f R ∧ integral_on f R = 0 := by sorry
"
jirilebl_ra_ch-seq-funcs_1088,Real Analysis,success,True,5,"Let $\sum_{n=0}^\infty c_n (x-a)^n$ be a power series with radius of convergence $0<\rho\leq \infty$, let $I$ be as above, and let $f \colon I \to \mathbb{R}$ be its sum. Then $f$ is differentiable and $f'(x) = \sum_{n=0}^\infty (n+1)c_{n+1} (x-a)^n ,$ with radius of convergence equal to $\rho$.","import Mathlib

open Real

/-- Let ∑_{n=0}^∞ c_n (x-a)^n be a power series with radius of convergence 0 < ρ ≤ ∞, let I be the open interval I = { x | |x - a| < ρ } (if ρ = ∞ take I = ℝ). Let f : I → ℝ be its sum. Then f is differentiable on I and for all x ∈ I,
    f' x = ∑_{n=0}^∞ (n+1) * c (n+1) * (x - a)^n,
and the derived power series has the same radius of convergence ρ. -/
theorem power_series_has_derivative_and_same_radius {c : ℕ → ℝ} {a ρ : ℝ} {f : ℝ → ℝ}
  (hρ : 0 < ρ)
  (hf : ∀ x, |x - a| < ρ → f x = ∑' n, c n * (x - a) ^ n) :
  (∀ x, |x - a| < ρ → HasDerivAt f (∑' n, (n + 1) * c (n + 1) * (x - a) ^ n) x) ∧
  radiusOfConvergence (fun n => (n + 1) * c (n + 1)) = ρ := by sorry
"
jirilebl_ra_ch-multivar-int_3775,Real Analysis,success,True,5,"Suppose $U\subset \mathbb{R}^n$ is open and $S\subset U$ is a compact Jordan measurable set. Show that there exist finitely many closed rectangles $P_1,\ldots,P_k$ contained in $U$ such that $S\subset \bigcup_{j=1}^k P_j$ and the interiors are mutually disjoint; that is, $P_j^{\circ}\cap P_\ell^{\circ}=\emptyset$ whenever $j\ne \ell$.","import Mathlib

open Set

/-!
  Suppose U ⊆ ℝ^n is open and S ⊆ U is a compact Jordan measurable set.
  Then there exist finitely many closed rectangles P₁,…,P_k contained in U
  such that S ⊆ ⋃_{j=1}^k P_j and the interiors are pairwise disjoint.
-/

theorem exists_finite_disjoint_closed_boxes_cover {n : ℕ} {U : Set (Fin n → ℝ)}
  (hU : IsOpen U) {S : Set (Fin n → ℝ)} (hSsub : S ⊆ U) (hScomp : IsCompact S)
  (hSj : JordanMeasurable S) :
  ∃ (k : ℕ) (s : Fin k → (Fin n → ℝ) × (Fin n → ℝ)),
    (∀ j, (Set.pi fun i => Icc ((s j).1 i) ((s j).2 i)) ⊆ U) ∧
    S ⊆ ⋃ j : Fin k, Set.pi fun i => Icc ((s j).1 i) ((s j).2 i) ∧
    (∀ j ℓ, j ≠ ℓ → (interior (Set.pi fun i => Icc ((s j).1 i) ((s j).2 i)) ∩
                      interior (Set.pi fun i => Icc ((s ℓ).1 i) ((s ℓ).2 i)) = ∅)) := by sorry
"
jirilebl_ra_ch-multivar-int_2466,Real Analysis,success,True,8,"Suppose $R \subset \mathbb{R}^n$ is a closed rectangle and $f,g\colon R\to \mathbb{R}$ are Riemann integrable. Assume there exists a closed set $E\subset R$ with outer measure zero such that $f=g$ on $R\setminus E$. Show that $\int_R f = \int_R g$.","import Mathlib

/-!
Suppose R ⊆ ℝ^n is a closed rectangle and f,g : R → ℝ are Riemann integrable_on R.
Assume there exists a closed set E ⊆ R with outer measure zero such that f = g on R \ E.
Show that Riemann.integral_on R f = Riemann.integral_on R g.
-/

variable {n : ℕ}

open Set

theorem integral_on_eq_of_eq_outside_closed_null {a b : Fin n → ℝ} (hbox : a ≤ b) {f g : (Fin n → ℝ) → ℝ}
  (hf : Riemann.integrable_on (Set.Icc a b) f) (hg : Riemann.integrable_on (Set.Icc a b) g)
  (E : Set (Fin n → ℝ)) (hE_closed : IsClosed E) (hE_subset : E ⊆ Set.Icc a b)
  (hE_null : OuterMeasure.null (OuterMeasure.ofSet E)) (h_eq : ∀ x, x ∉ E → f x = g x) :
  Riemann.integral_on (Set.Icc a b) f = Riemann.integral_on (Set.Icc a b) g := by sorry
"
jirilebl_ra_ch-seq-ser_4250,Real Analysis,success,True,4,Suppose $\sum a_n$ and $\sum b_n$ are absolutely convergent series. Show that $\sum c_n$ defined by $c_n = \sum_{k=0}^n a_k b_{n-k}$ converges absolutely and $\sum c_n = (\sum a_n)(\sum b_n)$.,"import Mathlib

open BigOperators

/--
Suppose ∑ a_n and ∑ b_n are absolutely convergent series. Define c_n = ∑_{k=0}^n a_k b_{n-k}.
Then ∑ c_n converges absolutely and ∑ c_n = (∑ a_n) (∑ b_n).
-/
theorem cauchy_product_absolute {a b : ℕ → ℝ}
  (ha : Summable fun n => |a n|) (hb : Summable fun n => |b n|) :
  Summable fun n => |∑ k in Finset.range (n+1), a k * b (n - k)| ∧
  (∑' n, ∑ k in Finset.range (n+1), a k * b (n - k) = (∑' n, a n) * (∑' n, b n)) := by sorry
"
jirilebl_ra_ch-several-vars-ders_2680,Real Analysis,success,True,9,"Suppose $f : \mathbb{R}^n \to \mathbb{R}$ is differentiable in a neighborhood of $x_0 \in \mathbb{R}^n$ and that $Df$ is continuous at $x_0$. Show that $f$ is differentiable at $x_0$. (That is, $C^1$ implies differentiability.)","import Mathlib

/-!
Suppose f : ℝ^n → ℝ is differentiable in a neighborhood of x0 ∈ ℝ^n and that Df is continuous at x0.
Show that f is differentiable at x0. (That is, C^1 implies differentiability.)

The following formulation is slightly more general: if on some open neighborhood of x0 the function f has
a (continuous linear) derivative f' x at every point x, and the map x ↦ f' x is continuous at x0, then
f has derivative f' x0 at x0.
-/

variable {E F : Type*} [NormedAddCommGroup E] [NormedSpace ℝ E] [NormedAddCommGroup F] [NormedSpace ℝ F]

theorem has_fderiv_at_of_local_has_fderiv_and_continuous (
  f : E → F) (f' : E → E →L[ℝ] F) {x0 : E} :
  (∃ s : Set E, IsOpen s ∧ x0 ∈ s ∧ ∀ x ∈ s, HasFderivAt f (f' x) x) →
  ContinuousAt f' x0 →
  HasFderivAt f (f' x0) x0 := by sorry
"
jirilebl_ra_ch-multivar-int_1970,Real Analysis,success,True,9,"Let $U\subset \mathbb{R}^n$ be open and let $f\colon U\to \mathbb{R}$ be continuous. Let $G=\{(x,f(x))\in \mathbb{R}^{n+1}: x\in U\}$ be the graph of $f$. Show that $G$ has measure zero in $\mathbb{R}^{n+1}$.","import Mathlib
open MeasureTheory MeasureTheory.Measure Set Function TopologicalSpace Bornology
open scoped Topology Interval ENNReal
open Filter
open MeasureTheory

/-- The graph of a continuous function f : U → ℝ, where U is open in ℝⁿ, has Lebesgue measure zero in ℝ^{n+1}. -/
theorem graph_of_continuous_on_open_has_measure_zero {n : ℕ} {U : Set (Fin n → ℝ)} {f : (Fin n → ℝ) → ℝ}
    (hU : IsOpen U) (hf : ContinuousOn f U) : (volume.prod volume) (graph f) = 0 := by sorry
"
jirilebl_ra_ch-seq-ser_4420,Real Analysis,success,True,4,"Suppose $\sum_{n=1}^\infty x_n$ is a series with bounded partial sums, $\lambda_n \to 0$, and $\sum \lvert \lambda_{n+1} - \lambda_n \rvert$ converges. Show that $\sum \lambda_n x_n$ converges.","import Mathlib

theorem summable_of_bounded_partial_sums_of_tendsto_zero_of_summable_variation
  (x l : ℕ → ℝ)
  (h_bound : ∃ C : ℝ, ∀ n, |∑ k in Finset.range (n+1), x k| ≤ C)
  (hl0 : Tendsto l atTop (𝓝 0))
  (hvar : Summable (fun n => |l (n+1) - l n|)) :
  Summable (fun n => l n * x n) := by sorry
"
jirilebl_ra_ch-seq-funcs_1359,Real Analysis,success,True,4,"Define: a sequence $f_n \colon \mathbb{R}\to \mathbb{R}$ \emph{converges uniformly on compact subsets} if for every $k \in \mathbb{N}$ the sequence $f_n$ converges uniformly on $[-k,k]$. Prove that if $f_n$ are continuous and converge uniformly on compact subsets, then the limit is continuous on $\mathbb{R}$.","import Mathlib

/-- A sequence f_n : ℝ → ℝ converges uniformly on compact subsets to g if for every k : ℕ,
    f_n converges uniformly on the compact interval [-k, k]. -/
def conv_uniform_on_compacts (f : ℕ → ℝ → ℝ) (g : ℝ → ℝ) : Prop :=
  ∀ k : ℕ, ∀ ε > 0, ∃ N : ℕ, ∀ n ≥ N, ∀ x ∈ Set.Icc (-(k : ℝ)) (k : ℝ), |f n x - g x| < ε

/-- If each f n is continuous and f_n → g uniformly on compact subsets, then g is continuous on ℝ. -/
theorem uniform_on_compacts.continuous_limit {f : ℕ → ℝ → ℝ} {g : ℝ → ℝ}
  (hcont : ∀ n, Continuous (f n))
  (hconv : conv_uniform_on_compacts f g) : Continuous g := by sorry
"
jirilebl_ra_ch-approximate_1526,Real Analysis,success,True,5,"Suppose $f(z) = \sum_{k=0}^\infty a_k z^k$ is a convergent power series and $\{ z_n \}_{n=1}^\infty$ is a sequence of nonzero complex numbers converging to $0$, such that $f(z_n) = 0$ for all $n$. Show that $a_k = 0$ for every $k$.","import Mathlib

open Complex

theorem power_series_zero_on_sequence_implies_coeffs_zero {a : ℕ → ℂ} (r : ℝ)
  (hr : 0 < r)
  (hconv : ∀ z : ℂ, Complex.abs z < r → Summable fun k => a k * z ^ k)
  (zseq : ℕ → ℂ)
  (hz_nonzero : ∀ n, zseq n ≠ 0)
  (hz_lim : Tendsto zseq atTop (nhds (0 : ℂ)))
  (hz_vals : ∀ n, ∑' k, a k * (zseq n) ^ k = 0) :
  ∀ k, a k = 0 := by sorry
"
jirilebl_ra_ch-several-vars-ders_4267,Real Analysis,success,True,10,Let $f : \mathbb{R}^n \to \mathbb{R}$ be $C^2$ and $H_f$ continuous in a convex set $U$. Show that the remainder in the Taylor approximation of order $2$ is $o(\lVert h \rVert^2)$ uniformly on compact subsets of $U$.,"import Mathlib

/-!
Let E be a finite-dimensional normed real vector space (for example E = ℝ^n).
Let f : E → ℝ be C^2 on a convex set U ⊆ E, and assume the Hessian (the iterated
Fréchet derivative of order 2) of f is continuous on U. Then the remainder in the
Taylor approximation of order 2 is o(‖h‖^2) uniformly on compact subsets of U.

The statement below expresses the uniform little-o property in ε-δ form on compact
subsets K ⊆ U.  The proof is omitted (``:= by sorry'').
-/

open Set Metric

theorem taylor_remainder_order_two_uniform_small_o {E : Type*} [NormedAddCommGroup E]
  [NormedSpace ℝ E] [FiniteDimensional ℝ E]
  {f : E → ℝ} {U : Set E}
  (hU : Convex U)
  (hC2 : ContDiffOn ℝ 2 f U)
  (hHess_cont : ContinuousOn (fun x => iteratedFDeriv ℝ 2 f x) U) :
  ∀ (K : Set E), IsCompact K → K ⊆ U →
    ∀ (ε : ℝ), ε > 0 → ∃ (δ : ℝ), δ > 0 ∧
      ∀ (x : E) (hx : x ∈ K) (h : E), ‖h‖ < δ →
        abs (f (x + h) - f x - (fderiv ℝ f x : E →L[ℝ] ℝ) h - (1 / 2) * (iteratedFDeriv ℝ 2 f x) (h, h)) ≤ ε * ‖h‖ ^ 2 :=
by sorry
"
jirilebl_ra_ch-der_1129,Real Analysis,success,True,3,"Let $f \colon (a,b)\to \mathbb{R}$ be continuous and differentiable on $(a,b)\setminus\{c\}$ for some $c\in(a,b)$. Assume $\lim_{x\to c} f'(x)=L$ exists. Prove that $f$ is differentiable at $c$ and $f'(c)=L$.","import Mathlib

open Set Filter

variable {a b c : ℝ} {f : ℝ → ℝ} {L : ℝ}

/-- Let f : (a,b) → ℝ be continuous on (a,b) and differentiable on (a,b) \ {c}.
    If deriv f tends to L as x → c (within (a,b) \ {c}), then f is differentiable at c and f'(c) = L. -/
theorem differentiable_at_of_tendsto_deriv
  (ha : a < c) (hb : c < b)
  (hcont : ContinuousOn f (Ioo a b))
  (hdiff : DifferentiableOn ℝ f ((Ioo a b) \ {c}))
  (hlim : Tendsto (fun x => deriv f x) (nhdsWithin c ((Ioo a b) \ {c})) (𝓝 L)) :
  DifferentiableAt ℝ f c ∧ deriv f c = L := by sorry
"
jirilebl_ra_ch-several-vars-ders_2268,Real Analysis,success,True,5,"If $A$ is an $n$-by-$n$ matrix and $B$ is the matrix of cofactors of $A$, show that $\det(B) = \det(A)^{n-1}$. Hint: You can use the Laplace formula and then proceed to show that cofactors of $A^\top$ are the same as cofactors of $A$ by some simple determinants of $2$-by-$2$ matrices, or you can use the previous exercise.","import Mathlib

open Matrix

/-- If A is an n-by-n matrix and B is the matrix of cofactors of A (the adjugate of A),
then det adjugate A = det A^(n-1). -/
theorem det_adjugate {R : Type _} {n : Type _} [CommRing R] [Fintype n] [DecidableEq n]
  (A : Matrix n n R) :
  det (adjugate A) = det A ^ (Fintype.card n - 1) := by sorry
"
jirilebl_ra_ch-multivar-int_3468,Real Analysis,success,True,7,"Let $U \subset \mathbb{R}^2$ be a connected open set and let $f \colon U \to \mathbb{R}$ be harmonic (that is, twice continuously differentiable with $f_{xx}+f_{yy}=0$ on $U$). Prove the maximum principle: if $f$ attains a maximum at some $p \in U$, then $f$ is constant on $U$.","import Mathlib

/-- Let U ⊂ ℝ^2 be a connected open set and let f : U → ℝ be harmonic (that is, twice continuously differentiable with f_{xx}+f_{yy}=0 on U).

Prove the maximum principle: if f attains a maximum at some p ∈ U, then f is constant on U. -/
theorem harmonic_maximum_principle_connected {U : Set (ℝ × ℝ)} (hU : IsOpen U) (hconn : IsConnected U)
  {f : ℝ × ℝ → ℝ} (hf : ContDiffOn ℝ 2 f U) (hlap : ∀ x ∈ U, (Laplacian f) x = 0)
  {p : ℝ × ℝ} (hp : p ∈ U) (hmax : IsMaxOn f U p) : IsConstOn f U := by sorry
"
jirilebl_ra_ch-metric_1348,Real Analysis,success,True,7,"Prove that in a metric space, $S$ is open if and only if for every $p \in S$ there is an $\epsilon > 0$ such that $B(p,\epsilon) \subset S$.","import Mathlib

open Set Metric

theorem metric_open_iff_ball_subset {α : Type _} [MetricSpace α] {S : Set α} :
  IsOpen S ↔ ∀ p ∈ S, ∃ ε > 0, Ball p ε ⊆ S := by sorry
"
jirilebl_ra_ch-several-vars-ders_2398,Real Analysis,success,True,6,"Let $X$ and $Y$ be normed vector spaces and $A \in L(X,Y)$ a linear operator. Show that if $A$ is one-to-one and onto, then $A^{-1} : Y \to X$ is bounded. (Use the fact that $A$ must have bounded inverse from the open mapping theorem; however, if you do not know this theorem, give a proof assuming completeness of $X$ and $Y$.)","import Mathlib

open ContinuousLinearMap

variables {𝕜 : Type*} [NontriviallyNormedField 𝕜]
variables {E : Type*} {F : Type*}
  [NormedAddCommGroup E] [NormedAddCommGroup F]
  [NormedSpace 𝕜 E] [NormedSpace 𝕜 F]
  [CompleteSpace E] [CompleteSpace F]

/-- If A : E →L[𝕜] F is a bijective continuous linear map between Banach spaces,
    then its inverse is a bounded (continuous) linear map. -/
theorem bounded_inverse_of_bijective (A : E →L[𝕜] F)
  (h : Function.Bijective (A : E → F)) :
  ∃ (Ainv : F →L[𝕜] E), Ainv.comp A = ContinuousLinearMap.id 𝕜 E ∧ A.comp Ainv = ContinuousLinearMap.id 𝕜 F := by sorry
"
jirilebl_ra_ch-metric_2313,Real Analysis,success,True,7,"Let $(X,d)$ be a metric space. Suppose $K \subset X$ is compact. Prove that $K$ is the union of finitely many open balls of radius $\epsilon$, for every $\epsilon > 0$.","import Mathlib

theorem compact_covered_by_finite_balls {X : Type*} [MetricSpace X] {K : Set X} (hK : IsCompact K) :
  ∀ ε : ℝ, 0 < ε → ∃ s : Finset X, K ⊆ ⋃ x ∈ s, Ball x ε := by sorry
"
jirilebl_ra_ch-several-vars-ders_2260,Real Analysis,success,True,6,"Suppose $A$ is an $n$-by-$n$ matrix and $B$ its matrix of cofactors. Show that the product $ASA^\top$ is a diagonal matrix, where $S$ is the matrix with $S_{i,j} = (-1)^{i+j}$. If $A$ is invertible then show that $(A^\top)^{-1} = \frac{1}{\det(A)} B$. Hint: You can use the Laplace formula.","import Mathlib

open Matrix

variable {R : Type*} [CommRing R]

/-- Let A be an m×m matrix over a commutative ring R and S the matrix with S_{i,j} = (-1)^{i+j}.
    Then A S Aᵀ is diagonal, i.e. its off-diagonal entries vanish. -/
theorem asa_transpose_diagonal {m : Nat} (A : Matrix (Fin m) (Fin m) R) :
  let S : Matrix (Fin m) (Fin m) R := fun i j => (-1 : R) ^ (i.val + j.val) in
  ∀ i j, i ≠ j → (A * S * Aᵀ) i j = 0 := by
  sorry

/-- If A is invertible (equivalently det A is a unit), and B is the matrix of cofactors
    (Matrix.cofactor A), then (Aᵀ)^{-1} = (1 / det A) • B. -/
theorem transpose_inv_eq_cofactor_div_det {m : Nat} (A : Matrix (Fin m) (Fin m) R)
  (h : IsUnit (det A)) :
  (Aᵀ)⁻¹ = (1 / (det A) : R) • Matrix.cofactor A := by
  sorry
"
jirilebl_ra_ch-several-vars-ders_999,Real Analysis,success,True,5,"Let $k : [0,1]^2 \to \mathbb{R}$ be continuous. Show that $L : C([0,1],\mathbb{R}) \to C([0,1],\mathbb{R})$ defined by $Lf(y) = \int_0^1 k(x,y)f(x) dx$ is a linear operator. That is, first show that $L$ is well-defined by showing that $Lf$ is continuous whenever $f$ is, and then showing that $L$ is linear.","import Mathlib

/--
Let k : Icc (0:ℝ) 1 × Icc (0:ℝ) 1 → ℝ be continuous. Define L by
(L f)(y) := ∫_{x ∈ [0,1]} k (x,y) * f x.

The statement below formalises that there exists an operator L sending continuous functions
on [0,1] to continuous functions on [0,1] given by the above integral kernel, and that L is linear.
The proof is omitted (:= by sorry).
-/
theorem jirilebl_ra_ch_several_vars_ders_999
  (k : Icc (0:ℝ) 1 × Icc (0:ℝ) 1 → ℝ) (hk : Continuous k) :
  ∃ (L : ContinuousMap (Icc (0:ℝ) 1) ℝ → ContinuousMap (Icc (0:ℝ) 1) ℝ),
    (∀ (f : ContinuousMap (Icc (0:ℝ) 1) ℝ) (y : Icc (0:ℝ) 1),
      (L f).toFun y = ∫ (x : Icc (0:ℝ) 1), k (x, y) * (f x)) ∧
    Linear ℝ (fun f => L f) := by sorry
"
jirilebl_ra_ch-seq-funcs_734,Real Analysis,success,True,9,"Let $f_n \colon [a,b] \to \mathbb{R}$ be Riemann integrable and suppose $f_n \to f$ uniformly on $[a,b]$. Then $f$ is Riemann integrable and $\int_a^b f = \lim_{n\to\infty} \int_a^b f_n .$","import Mathlib

open scoped Classical
open MeasureTheory Metric Set Filter TopologicalSpace
open scoped Classical Topology Filter ENNReal Interval NNReal
open Asymptotics

/-- Let f_n : [a,b] → ℝ be Riemann integrable and suppose f_n → f uniformly on [a,b].
    Then f is Riemann integrable and ∫_a^b f = lim_{n→∞} ∫_a^b f_n. -/
theorem riemann_integrable_of_tendsto_uniformly {a b : ℝ} (h : a < b) {f : ℕ → ℝ → ℝ} {f_lim : ℝ → ℝ}
    (h_int : ∀ n, Riemann.integrable_on (f n) (Icc a b))
    (h_unif : TendstoUniformlyOn (fun n x => f n x) atTop f_lim (Icc a b)) :
    Riemann.integrable_on f_lim (Icc a b) ∧
      Tendsto (fun n => ∫ (x : ℝ) in a..b, f n x) atTop (𝓝 (∫ (x : ℝ) in a..b, f_lim x)) := by sorry
"
jirilebl_ra_ch-seq-ser_694,Real Analysis,success,True,4,Let $\{ x_n \}_{n=1}^\infty$ be a convergent monotone sequence. Suppose there exists a $k \in \mathbb{N}$ such that $\lim_{n\to \infty} x_n = x_k .$ Show that $x_n = x_k$ for all $n \geq k$.,"import Mathlib

open Filter

/-- If a monotone sequence of real numbers converges to the value of one of its terms x_k,
    then the sequence is constant equal to x_k from index k onward. -/
theorem monotone_convergent_const_of_limit_eq_index {x : ℕ → ℝ} {k : ℕ}
  (hmono : Monotone x) (hconv : Tendsto x atTop (𝓝 (x k))) :
  ∀ n, n ≥ k → x n = x k := by sorry
"
jirilebl_ra_ch-metric_2330,Real Analysis,success,True,6,"Let $(X,d)$ be a metric space. Suppose $K \subset X$ is compact. Prove that there exists a finite $\epsilon$-net for $K$, for every $\epsilon > 0$.","import Mathlib

variable {X : Type _} [MetricSpace X]

/-- If K is a compact subset of a metric space X, then for every ε > 0 there exists a finite
ε-net for K (a finite set s such that K is covered by the ε-balls around elements of s). -/
theorem IsCompact.exists_finite_epsilon_net {K : Set X} (hK : IsCompact K) {ε : ℝ} (hε : 0 < ε) :
  ∃ s : Finset X, K ⊆ ⋃ x ∈ s, Ball x ε := by sorry
"
jirilebl_ra_ch-contfunc_1358,Real Analysis,success,True,4,"Suppose $S \subset \mathbb{R}$, $c$ is a cluster point of $S$, $f \colon S \to \mathbb{R}$ and $g \colon S \to \mathbb{R}$ are functions, and $a \in \mathbb{R}$, such that $f(x) \to L$ and $g(x) \to M$ as $x \to c$. Prove that $a f(x) \to a L$ as $x \to c$.","import Mathlib

/-!
Suppose S ⊂ ℝ, c is a cluster point of S, f : S → ℝ and g : S → ℝ are functions, and a ∈ ℝ,
such that f(x) → L and g(x) → M as x → c. Prove that a f(x) → a L as x → c.

We state a version where f is a function ℝ → ℝ and the limit is taken along nhdsWithin c S.
-/

variable {S : Set ℝ} {c a L : ℝ} {f : ℝ → ℝ}

theorem tendsto_mul_const_of_tendsto (hc : IsClusterPt c S)
  (hf : Tendsto f (nhdsWithin c S) (nhds L)) :
  Tendsto (fun x => a * f x) (nhdsWithin c S) (nhds (a * L)) := by sorry
"
jirilebl_ra_ch-several-vars-ders_3386,Real Analysis,success,True,3,"Let $f : \mathbb{R}^n \to \mathbb{R}$ have continuous partial derivatives on a convex set $U$. Show that if $\lVert \nabla f(x) \rVert \leq M$ for all $x \in U$, then $\lvert f(y) - f(x) - \nabla f(x) \cdot (y-x) \rvert \leq M \lVert y-x \rVert .$ (Mean value inequality for multivariable functions.)","import Mathlib

variable {n : ℕ}

-- Mean value inequality for multivariable functions on R^n
-- f : (Fin n → ℝ) → ℝ has continuous partial derivatives on a convex set s.
-- If ∥fderiv ℝ f x∥ ≤ M for all x ∈ s, then
-- |f y - f x - fderiv ℝ f x (y - x)| ≤ M * ∥y - x∥.

theorem mean_value_inequality_multivar
  (s : Set (Fin n → ℝ)) (f : (Fin n → ℝ) → ℝ) (M : ℝ)
  (hconv : Convex ℝ s) (hcd : ContDiffOn ℝ 1 f s)
  (hbound : ∀ x ∈ s, ‖fderiv ℝ f x‖ ≤ M) :
  ∀ x y (hx : x ∈ s) (hy : y ∈ s),
    abs (f y - f x - fderiv ℝ f x (y - x)) ≤ M * ‖y - x‖ := by sorry
"
jirilebl_ra_ch-several-vars-ders_4472,Real Analysis,success,True,6,Let $F : \mathbb{R}^n \to \mathbb{R}^n$ be differentiable and suppose $DF$ exists and is continuous on a convex set $U$. Show that $\lVert F(x+h) - F(x) - DF(x)h \rVert = o(\lVert h \rVert)$ uniformly on compact subsets of $U$ as $h \to 0$.,"import Mathlib

open Set Filter

variable {E : Type*} {Fv : Type*}
  [NormedAddCommGroup E] [NormedSpace ℝ E] [FiniteDimensional ℝ E]
  [NormedAddCommGroup Fv] [NormedSpace ℝ Fv]

/-- Let F : ℝ^n → ℝ^n be differentiable and suppose DF exists and is continuous on a convex set U.
    Then ‖F(x+h) - F(x) - DF(x) h‖ = o(‖h‖) uniformly on compact subsets of U as h → 0. -/
theorem little_o_uniform_on_compact_of_cont_fderiv {F : E → Fv} {U : Set E}
  (hU_conv : Convex ℝ U)
  (h_has : ∀ x ∈ U, HasFderivAt F (fderiv ℝ F x) x)
  (h_cont : ContinuousOn (fun x => fderiv ℝ F x) U) :
  ∀ K, IsCompact K → K ⊆ U →
    IsLittleO (fun h => ⨆ (x : E) (hx : x ∈ K), ‖F (x + h) - F x - fderiv ℝ F x h‖) (fun h => ‖h‖) (𝓝 0) := by sorry
"
jirilebl_ra_ch-several-vars-ders_2341,Real Analysis,success,True,7,"Let $X$ and $Y$ be normed vector spaces. Show that if $A,B : X \to Y$ are linear and bounded operators, then $A+B$ is bounded. Also show that if $\alpha \in \mathbb{R}$, then $\alpha A$ is bounded. Show that $\lVert \cdot \rVert_{L(X,Y)}$ is a norm on $L(X,Y)$.","import Mathlib

/-- Let E and F be normed vector spaces over ℝ. The sum of two bounded (continuous) linear maps is continuous (hence bounded). -/
theorem continuous_linear_map_add_bounded {E F : Type*} [NormedAddCommGroup E] [NormedAddCommGroup F]
  [NormedSpace ℝ E] [NormedSpace ℝ F] (A B : E →L[ℝ] F) :
  Continuous (A + B : E → F) := by sorry

/-- Scalar multiple of a bounded (continuous) linear map is continuous (hence bounded). -/
theorem continuous_linear_map_smul_bounded {E F : Type*} [NormedAddCommGroup E] [NormedAddCommGroup F]
  [NormedSpace ℝ E] [NormedSpace ℝ F] (c : ℝ) (A : E →L[ℝ] F) :
  Continuous (c • A : E → F) := by sorry

/-- The operator norm on L(E, F) satisfies the norm axioms: triangle inequality, absolute homogeneity,
    and definiteness. This shows that the map f ↦ ‖f‖ is a norm on the space of continuous linear maps. -/
theorem operator_norm_is_norm {E F : Type*} [NormedAddCommGroup E] [NormedAddCommGroup F]
  [NormedSpace ℝ E] [NormedSpace ℝ F] :
  (∀ (f g : E →L[ℝ] F), ‖f + g‖ ≤ ‖f‖ + ‖g‖) ∧
  (∀ (c : ℝ) (f : E →L[ℝ] F), ‖c • f‖ = |c| * ‖f‖) ∧
  (∀ (f : E →L[ℝ] F), ‖f‖ = 0 ↔ f = 0) := by sorry
"
jirilebl_ra_ch-multivar-int_1932,Real Analysis,success,True,6,"Suppose $X\subset \mathbb{R}^n$ is such that for every $\epsilon>0$ there exists a set $Y\supset X$ with $m^*(Y)\le \epsilon$, where $m^*$ is the outer measure on $\mathbb{R}^n$. Prove that $X$ has measure zero (that is, $m^*(X)=0$).","import Mathlib

open MeasureTheory Set

/-- If for every ε>0 there exists a superset Y ⊇ X with outer measure μ Y ≤ ε,
then the outer measure of X is zero. -/
theorem outer_measure_of_supersets_arbitrarily_small_eq_zero {α : Type _} (μ : OuterMeasure α) (X : Set α)
  (h : ∀ ε : ℝ≥0∞, 0 < ε → ∃ Y : Set α, X ⊆ Y ∧ μ Y ≤ ε) : μ X = 0 := by sorry
"
jirilebl_ra_ch-seq-ser_4414,Real Analysis,success,True,5,"Suppose $\sum_{n=1}^\infty x_n$ is a series whose sequence of partial sums is bounded, and $\{\lambda_n\}$ is a sequence with $\lim\limits_{n\to\infty} \lambda_n = 0$ and $\sum_{n=1}^\infty \lvert \lambda_{n+1} - \lambda_n \rvert$ convergent. Show that $\sum_{n=1}^\infty \lambda_n x_n$ converges.","import Mathlib
open Filter Finset Function
open scoped Topology

/-- Suppose the series ∑ x_n has bounded partial sums, and s : ℕ → ℝ satisfies
    s_n → 0 and ∑ |s_{n+1} - s_n| converges. Then ∑ s_n • x_n is summable. -/
theorem dirichlet_summability {E : Type*} [NormedAddCommGroup E] [NormedSpace ℝ E]
  {x : ℕ → E} {s : ℕ → ℝ}
  (h_bdd : ∃ C, ∀ n, ‖∑ i in range (n+1), x i‖ ≤ C)
  (hs_zero : Tendsto s atTop (𝓝 0))
  (hs_var : Summable (fun n => |s (n+1) - s n|)) :
  Summable fun n => s n • x n := by sorry
"
jirilebl_ra_ch-several-vars-ders_4243,Real Analysis,success,True,5,Let $f : \mathbb{R}^n \to \mathbb{R}$ be differentiable and $H_f$ is continuous on a convex set $U$. Show that $f(x+h) = f(x) + \nabla f(x)\cdot h + \tfrac12 h^\top H_f(x) h + o(\lVert h \rVert^2)$ as $h \to 0$ uniformly on compact subsets of $U$.,"import Mathlib

open Set

variable {n : ℕ}

/--
Second-order Taylor expansion with remainder o(‖h‖^2) uniformly on compact subsets.
Let f : ℝ^n → ℝ be differentiable and its Hessian is continuous on a convex set U.
Then for every compact K ⊆ U and every ε>0 there is δ>0 such that for all x ∈ K and
all h with ‖h‖<δ and x+h ∈ U,
  |f(x+h) - f(x) - fderiv ℝ f x h - 1/2 * (hessian f x) h h| ≤ ε * ‖h‖^2.
-/
lemma jirilebl_ra_ch_several_vars_ders_4243 (n : ℕ) (U : Set (Fin n → ℝ)) (f : (Fin n → ℝ) → ℝ)
  (hU : Convex ℝ U) (h_diff : DifferentiableOn ℝ f U)
  (h_hess : ContinuousOn (fun x => hessian f x) U) :
  ∀ K : Set (Fin n → ℝ), K ⊆ U → IsCompact K →
    ∀ ε > 0, ∃ δ > 0, ∀ x ∈ K, ∀ h : Fin n → ℝ, ‖h‖ < δ → x + h ∈ U →
      abs (f (x + h) - f x - (fderiv ℝ f x) h - (1 / 2) * (hessian f x) h h) ≤ ε * ‖h‖ ^ 2 :=
by sorry
"
jirilebl_ra_ch-metric_3206,Real Analysis,success,True,7,"Let $(X,d)$ be a metric space. Let $C_b(X,\mathbb{R})$ be the set of bounded continuous functions $X \to \mathbb{R}$ with metric $d(f,g) := \sup_{x \in X} \lvert f(x)-g(x) \rvert .$ Show that $(C_b(X,\mathbb{R}),d)$ is a metric space and that convergence in $d$ is equivalent to uniform convergence.","import Mathlib

/-
  Bounded continuous real-valued functions on a metric space X,
  with the sup metric d(f,g) = sup_{x ∈ X} |f(x) - g(x)|.

  We state that this type carries a MetricSpace structure (with the
  metric given by the supremum above) and that convergence in this
  metric is equivalent to uniform convergence. The proofs are omitted
  (marked `by sorry`).
-/

variable (X : Type*) [MetricSpace X]

/-- The space C_b(X, ℝ) of bounded continuous real-valued functions on X. -/
def C_b (X : Type*) [MetricSpace X] := { f : X → ℝ // Continuous f ∧ Bounded (range f) }

namespace C_b

variable {X}

instance {X : Type*} [MetricSpace X] : CoeFun (C_b X) (λ _, X → ℝ) := ⟨fun f => f.1⟩

/-- Supremum distance between two bounded continuous functions. -/
noncomputable def sup_dist {X : Type*} [MetricSpace X] (f g : C_b X) : ℝ :=
  Sup (range fun x => |(f : X → ℝ) x - (g : X → ℝ) x|)

/-- The type C_b X equipped with the sup metric is a metric space. -/
instance : MetricSpace (C_b X) := by
  -- The full construction requires showing the usual metric axioms
  -- for `sup_dist`. We omit the proofs here.
  sorry

/-- Convergence in the sup metric is equivalent to uniform convergence.
    We state uniform convergence in the standard ε-N form using the
    supremum of |f_n(x)-f(x)|. -/
theorem tendsto_iff_uniform {f_n : ℕ → C_b X} {f : C_b X} :
  Tendsto f_n atTop (𝓝 f) ↔
    ∀ ε : ℝ, ε > 0 → ∃ N : ℕ, ∀ n ≥ N, Sup (range fun x => |(f_n n : X → ℝ) x - (f : X → ℝ) x|) < ε := by
  -- One direction is routine from the metric definition; the other
  -- unpacks the definition of uniform convergence. Proof omitted.
  sorry

end C_b
"
jirilebl_ra_ch-riemann_3470,Real Analysis,success,True,4,"Let $f \colon \mathbb{R} \to \mathbb{R}$ be a Riemann integrable function with $\int_{-\infty}^\infty \lvert f(x) \rvert dx < \infty$. Let $g \colon \mathbb{R} \to \mathbb{R}$ be continuous and equal to zero outside of the interval $[a,b]$. Show that the \emph{convolution} $(g * f)(x) \coloneqq \int_{-\infty}^\infty f(t)g(x-t) dt$ is well-defined for all $x \in \mathbb{R}$.","import Mathlib

open MeasureTheory Set

/-- Let f : ℝ → ℝ be integrable (L1) and g : ℝ → ℝ be continuous and vanish outside [a, b].
    Then for every x the function t ↦ f t * g (x - t) is integrable (w.r.t. volume), so the
    convolution (g * f)(x) := ∫ t, f t * g (x - t) ∂volume is well-defined. -/
theorem convolution_well_defined {f g : ℝ → ℝ} {a b : ℝ}
  (hf : Integrable f volume) (hg_cont : Continuous g) (hg_zero : ∀ x, x ∉ Icc a b → g x = 0) :
  ∀ x : ℝ, Integrable (fun t => f t * g (x - t)) volume := by sorry
"
jirilebl_ra_ch-several-vars-ders_2407,Real Analysis,success,True,8,"Let $L : X \to Y$ be a linear operator between normed vector spaces and suppose $L$ is invertible and $L^{-1}$ is bounded. Show that there exists some $\delta > 0$ such that if $\lVert A - L \rVert < \delta$, then $A$ is invertible and $\lVert A^{-1} \rVert \leq \frac{\lVert L^{-1} \rVert}{1 - \lVert L^{-1} \rVert \lVert A - L \rVert} .$ (Use the Neumann series.)","import Mathlib

/-!
A perturbation result for invertible bounded linear operators using the Neumann series.
We state: if L : X →L[𝕜] X has a bounded inverse Linv, then there exists δ > 0 such that
for any A with ‖A - L‖ < δ there is an inverse Ainv of A and the bound
‖Ainv‖ ≤ ‖Linv‖ / (1 - ‖Linv‖ * ‖A - L‖) holds.

This file only contains the statement (no proof): the proof is obtained by applying the
Neumann series to the perturbation L^{-1}(L - A).
-/

variable {𝕜 : Type*} [NontriviallyNormedField 𝕜]
variable {X : Type*} [NormedAddCommGroup X] [NormedSpace 𝕜 X]

open ContinuousLinearMap

theorem invertible_perturbation_neumann
  (L : X →L[𝕜] X) (Linv : X →L[𝕜] X)
  (hL_left : L.comp Linv = ContinuousLinearMap.id)
  (hL_right : Linv.comp L = ContinuousLinearMap.id) :
  ∃ (δ : ℝ), 0 < δ ∧
    ∀ (A : X →L[𝕜] X), ‖A - L‖ < δ →
      ∃ (Ainv : X →L[𝕜] X), A.comp Ainv = ContinuousLinearMap.id ∧ Ainv.comp A = ContinuousLinearMap.id
        ∧ ‖Ainv‖ ≤ ‖Linv‖ / (1 - ‖Linv‖ * ‖A - L‖) := by sorry
"
jirilebl_ra_ch-approximate_2229,Real Analysis,success,True,7,"Let $\epsilon > 0$, let $p(z)$ be a nonconstant complex polynomial, or more generally a nonconstant power series converging in $\{ z \in \mathbb{C} : \lvert z - z_0\rvert < \epsilon \}$, and suppose $p(z_0) \not= 0$. Then there exists a $w \in \{ z \in \mathbb{C} : \lvert z - z_0\rvert < \epsilon \}$ such that $\lvert p(w)\rvert < \lvert p(z_0)\rvert$.","import Mathlib

/-!
Statement: Let ε > 0, let p(z) be a nonconstant complex polynomial, or more generally a nonconstant power series
converging in { z ∈ ℂ : |z - z0| < ε }, and suppose p(z0) ≠ 0. Then there exists w in the disk such that |p(w)| < |p(z0)|.

We state this for a nonconstant holomorphic function on the open ball around z0.
-/

open Complex Set

theorem exists_point_with_smaller_modulus {ε : ℝ} {z0 : ℂ} (hε : 0 < ε) {p : ℂ → ℂ}
  (hp : IsHolomorphicOn p (ball z0 ε)) (hnc : ¬ IsConstantOn p (ball z0 ε)) (hp0 : p z0 ≠ 0) :
  ∃ w ∈ ball z0 ε, |p w| < |p z0| := by sorry
"
jirilebl_ra_ch-multivar-int_2583,Real Analysis,success,True,7,"Let $R\subset \mathbb{R}^n$ be a closed rectangle and let $f\colon R\to \mathbb{R}$ be Riemann integrable with $f(x)\ge 0$ for all $x\in R$. Show that if $\int_R f=0$, then there exists a set $E\subset R$ of outer measure zero such that $f(x)=0$ for all $x\in R\setminus E$.","import Mathlib
open MeasureTheory Set
open scoped ENNReal

variable {n : ℕ}

/-- A closed rectangle (box) in ℝ^n determined by lower and upper bounds a, b. -/
def box (a b : Fin n → ℝ) : Set (Fin n → ℝ) := { x | ∀ i, a i ≤ x i ∧ x i ≤ b i }

/-- Let R be a closed rectangle in ℝ^n and f : R → ℝ be Riemann integrable with f ≥ 0 on R.
    If the integral of f over R is zero, then f vanishes outside a set of Lebesgue outer measure zero. -/
theorem nonneg_riemann_integral_zero_ae_zero {a b : Fin n → ℝ} {R : Set (Fin n → ℝ)} (f : (Fin n → ℝ) → ℝ)
  (hR : R = box a b) (h_int : RiemannIntegrableOn f R) (h_nonneg : ∀ x ∈ R, 0 ≤ f x)
  (h_integral_zero : ∫ x in R, f x = 0) :
  ∃ E ⊆ R, volume E = 0 ∧ ∀ x ∈ R \ E, f x = 0 := by sorry
"
jirilebl_ra_ch-multivar-int_2067,Real Analysis,success,True,3,"Let $m^*$ be the outer measure on $\mathbb{R}^n$ defined by $m^*(S)=\inf\Big\{\sum_{j=1}^{\infty} V(R_j) : S\subset \bigcup_{j=1}^{\infty} R_j, R_j open rectangles\Big\}.$ Define instead $\mu^*(S)=\inf\Big\{\sum_{j\in I} V(R_j) : S\subset \bigcup_{j\in I} R_j, I finite or countably infinite, R_j open rectangles\Big\}.$ Prove that for every $S\subset \mathbb{R}^n$, $\mu^*(S)=m^*(S)$.","import Mathlib

/-- Translation of the statement:

Let m^* be the outer measure on R^n defined by
  m^*(S) = inf { sum_{j=1}^\infty V(R_j) : S ⊆ ⋃_{j=1}^\infty R_j, R_j open rectangles }.

Define instead
  μ^*(S) = inf { sum_{j∈I} V(R_j) : S ⊆ ⋃_{j∈I} R_j, I finite or countably infinite, R_j open rectangles }.

Then for every S ⊆ R^n, μ^*(S) = m^*(S).

Remarks: the file below records the above statement in a form suitable for filling in a formal proof. We treat the ambient space as (Fin n → ℝ) and we keep the notions of ``volume of a rectangle'' and ``open rectangle'' as given predicates/functions, so that the equality of the two definitions can be stated without developing the full machinery here. -/

variable {n : ℕ}

-- Notation for R^n
def Rn := Fin n → ℝ

-- Abstract definitions left as parameters: volume of a rectangle and the predicate for open rectangles
variable (V : Set Rn → Ennreal)
variable (is_open_rectangle : Set Rn → Prop)

/-- Two versions of the outer measure described in the statement; here they are left abstract. -/
variable (m_star mu_star : (Set Rn) → Ennreal)

/-- The translated theorem: for every S ⊆ R^n, the two definitions coincide. -/
theorem mu_star_eq_m_star (S : Set Rn) : mu_star S = m_star S := by sorry
"
jirilebl_ra_ch-riemann_3485,Real Analysis,success,True,3,"Suppose $f \colon [0,\infty) \to \mathbb{R}$ is Riemann integrable on every interval $[0,M]$ and $\int_0^\infty \lvert f \rvert < \infty$. Show that $\int_0^\infty f$ exists if and only if for every $\epsilon > 0$ there exists an $M$ such that for all $R \geq M$, we have $\left\lvert \int_M^R f \right\rvert < \epsilon .$","import Mathlib

open IntervalIntegral MeasureTheory Filter Set

/--
Suppose f : [0,∞) → ℝ is Riemann integrable on every interval [0,M] and ∫_0^∞ |f| < ∞.
Show that ∫_0^∞ f exists iff for every ε > 0 there exists M such that for all R ≥ M,
|∫_M^R f| < ε.
-/
theorem improper_integral_exists_iff_tails_small {f : ℝ → ℝ}
  (hRint : ∀ M, IntervalIntegrable f 0 M)
  (h_abs_int : IntegrableOn (fun x => |f x|) (Ici (0 : ℝ))) :
  (∃ L, Tendsto (fun R => ∫ x in 0..R, f x) atTop (nhds L)) ↔
  ∀ ε > 0, ∃ M, ∀ R ≥ M, |∫ x in M..R, f x| < ε := by sorry
"
jirilebl_ra_ch-der_478,Real Analysis,success,True,3,"Suppose $f \colon I \to \mathbb{R}$ is differentiable at $c \in I$. Prove that there exist real numbers $a$ and $b$ such that for every $\epsilon>0$ there exists $\delta>0$ with $\lvert a+b(x-c)-f(x)\rvert \le \epsilon \lvert x-c\rvert$ whenever $x\in I$ and $\lvert x-c\rvert<\delta$. Equivalently, prove that there exists a function $g \colon I \to \mathbb{R}$ with $\lim_{x\to c}g(x)=0$ and $\lvert a+b(x-c)-f(x)\rvert= \lvert x-c\rvert g(x)$ for all $x\in I$ near $c$.","import Mathlib

/-!
Translate: Suppose f : I → ℝ is differentiable at c ∈ I. Prove that there exist real numbers a and b such that for every ε>0 there exists δ>0 with |a+b(x-c)-f(x)| ≤ ε|x-c| whenever x∈I and |x-c|<δ.
Equivalently, prove that there exists a function g : I → ℝ with lim_{x→c} g(x)=0 and |a+b(x-c)-f(x)|= |x-c| g(x) for all x∈I near c.

The statements are given below; proofs are omitted (:= by sorry).
-/

open Filter

theorem differentiable_at.exists_linear_approx {f : ℝ → ℝ} {c : ℝ}
  (h : DifferentiableAt ℝ f c) :
  ∃ (a b : ℝ), ∀ ε > 0, ∃ δ > 0, ∀ x, |x - c| < δ → |a + b * (x - c) - f x| ≤ ε * |x - c| := by
  sorry

theorem differentiable_at.exists_linear_approx_with_g {f : ℝ → ℝ} {c : ℝ}
  (h : DifferentiableAt ℝ f c) :
  ∃ (a b : ℝ) (g : ℝ → ℝ) (δ : ℝ), δ > 0 ∧ Tendsto g (nhds c) (nhds 0) ∧
    (∀ x, |x - c| < δ → |a + b * (x - c) - f x| = |x - c| * g x) := by
  sorry
"
jirilebl_ra_ch-riemann_626,Real Analysis,success,True,6,"Suppose $f \colon [a,b] \to \mathbb{R}$ is Riemann integrable. Let $\epsilon > 0$ be given. Then show that there exists a partition $P = \{ x_0, x_1, \ldots, x_n \}$ such that for every set of numbers $\{ c_1, c_2, \ldots, c_n \}$ with $c_k \in [x_{k-1},x_k]$ for all $k$, we have $\lvert \int_a^b f - \sum_{k=1}^n f(c_k) \Delta x_k \rvert < \epsilon .$ Here $\Delta x_k \coloneqq x_k - x_{k-1}$ for each $k$ whenever a partition $P = \{x_0,x_1,\ldots,x_n\}$ is used.","import Mathlib

/-- Suppose f : [a,b] → ℝ is Riemann integrable. Let ε > 0 be given. Then there exists a partition
P = {x_0, ..., x_n} of [a,b] such that for every choice of points c_k ∈ [x_{k-1}, x_k] one has
|∫_a^b f - ∑_{k=1}^n f(c_k) * (x_k - x_{k-1})| < ε. -/
theorem exists_partition_uniform_riemann {a b : ℝ} {f : ℝ → ℝ}
  (h : Riemann.integrable_on f (Icc a b)) :
  ∀ ε > 0, ∃ (n : ℕ) (xs : Fin (n + 1) → ℝ),
    xs 0 = a ∧ xs ⟨n, Nat.lt_succ_self n⟩ = b ∧ (∀ i : Fin n, xs i ≤ xs (i.succ)) ∧
    (∀ c : Fin n → ℝ, (∀ i, c i ∈ Icc (xs i) (xs (i.succ))) →
      |(∫ x in a..b, f x) - ∑ i : Fin n, f (c i) * (xs (i.succ) - xs i)| < ε) := by sorry
"
jirilebl_ra_ch-riemann_572,Real Analysis,success,True,8,"Let $f \colon [a,b] \to \mathbb{R}$ be a bounded function. Suppose there exists a sequence of partitions $\{ P_k \}_{k=1}^\infty$ of $[a,b]$ such that $\lim_{k \to \infty} \bigl( U(P_k,f) - L(P_k,f) \bigr) = 0 .$ Show that $f$ is Riemann integrable and that $\int_a^b f = \lim_{k \to \infty} U(P_k,f) = \lim_{k \to \infty} L(P_k,f) .$","import Mathlib

/-!
Statement (informal): Let f : [a,b] → ℝ be a bounded function. Suppose there exists a sequence of
partitions P_k of [a,b] such that lim_{k → ∞} (U(P_k,f) - L(P_k,f)) = 0. Show that f is Riemann
integrable and that ∫_a^b f = lim_{k → ∞} U(P_k,f) = lim_{k → ∞} L(P_k,f).

The formal statement below introduces a minimal abstract API for partitions, upper and lower
sums and the Riemann integrability predicate. We only state the theorem; the proof is omitted
("":= by sorry"").
-/

open Set Filter

-- Abstract types and predicates to state the theorem without committing to a concrete
-- partition implementation from any particular library.
constant Partition : Type
constant is_partition_of_interval : Partition → ℝ → ℝ → Prop
constant UpperSum : Partition → (ℝ → ℝ) → ℝ
constant LowerSum : Partition → (ℝ → ℝ) → ℝ
constant BoundedOn : (ℝ → ℝ) → Set ℝ → Prop
constant RiemannIntegrableOn : (ℝ → ℝ) → Set ℝ → Prop
constant riemann_integral_on : (ℝ → ℝ) → Set ℝ → ℝ

/-- If there is a sequence of partitions of [a,b] whose upper minus lower sums tend to 0,
then f is Riemann integrable on [a,b], and the common limit of the upper and lower
sums equals the Riemann integral. -/
theorem riemann_integrable_of_partitions
  {a b : ℝ} {f : ℝ → ℝ}
  (h_ab : a < b)
  (h_bdd : BoundedOn f (Icc a b))
  (P : ℕ → Partition)
  (h_part : ∀ k, is_partition_of_interval (P k) a b)
  (h_tendsto : Tendsto (fun k => UpperSum (P k) f - LowerSum (P k) f) atTop (𝓝 0)) :
  RiemannIntegrableOn f (Icc a b) ∧
  ∃ I : ℝ, Tendsto (fun k => UpperSum (P k) f) atTop (𝓝 I) ∧ Tendsto (fun k => LowerSum (P k) f) atTop (𝓝 I) ∧
    riemann_integral_on f (Icc a b) = I := by sorry

end"
jirilebl_ra_ch-several-vars-ders_2205,Real Analysis,success,True,5,"Suppose $A = [a_{i,j}]$ is an $n$-by-$n$ matrix. Show that if $A^\prime$ is the matrix obtained by switching column $j$ and $k$ of $A$, then $\det(A^\prime) = - \det(A)$. Similarly, show that if $A^\prime$ is the matrix obtained by switching row $j$ and $k$ for $A$, then $\det(A^\prime) = - \det(A)$. Furthermore, show that if $A$ is a matrix with two equal rows or two equal columns then $\det(A) = 0$. (Do this without resorting to the Laplace formula.)","import Mathlib

open Classical
open Matrix

-- We work with square matrices indexed by `Fin n` over a commutative ring `R`.

variable {R : Type _} [CommRing R]
variable {n : Nat}

/-- Swap columns `j` and `k` of a matrix `A`. -/
def swap_cols_matrix (A : Matrix (Fin n) (Fin n) R) (j k : Fin n) : Matrix (Fin n) (Fin n) R :=
  fun i c => if c = j then A i k else if c = k then A i j else A i c

/-- Swap rows `j` and `k` of a matrix `A`. -/
def swap_rows_matrix (A : Matrix (Fin n) (Fin n) R) (j k : Fin n) : Matrix (Fin n) (Fin n) R :=
  fun r c => if r = j then A k c else if r = k then A j c else A r c

/-- If `A'` is obtained from `A` by switching two distinct columns, then
    det A' = - det A. -/
theorem det_swap_columns (A : Matrix (Fin n) (Fin n) R) (j k : Fin n) (hjk : j ≠ k) :
  det (swap_cols_matrix A j k) = - det A := by sorry

/-- If `A'` is obtained from `A` by switching two distinct rows, then
    det A' = - det A. -/
theorem det_swap_rows (A : Matrix (Fin n) (Fin n) R) (j k : Fin n) (hjk : j ≠ k) :
  det (swap_rows_matrix A j k) = - det A := by sorry

/-- If a matrix has two equal columns, then its determinant is zero. -/
theorem det_eq_zero_of_equal_columns (A : Matrix (Fin n) (Fin n) R) (j k : Fin n)
  (h : (fun i => A i j) = fun i => A i k) :
  det A = 0 := by sorry

/-- If a matrix has two equal rows, then its determinant is zero. -/
theorem det_eq_zero_of_equal_rows (A : Matrix (Fin n) (Fin n) R) (j k : Fin n)
  (h : (fun i => A j i) = fun i => A k i) :
  det A = 0 := by sorry
"
jirilebl_ra_ch-several-vars-ders_2431,Real Analysis,success,True,6,"Let $\lVert \cdot \rVert$ be any norm on $\mathbb{R}^n$. Show that the induced operator norm on $L(\mathbb{R}^n,\mathbb{R}^m)$ satisfies $\lVert A \rVert = \max \bigl\{ \lVert Ax \rVert : \lVert x \rVert = 1 \bigr\} = \sup \bigl\{ \lVert Ax \rVert : \lVert x \rVert \leq 1 \bigr\} = \sup \bigl\{ \lVert Ax \rVert : \lVert x \rVert < 1 \bigr\} .$ (Use that the unit sphere is compact in finite dimensions.)","import Mathlib

/-!
Simple statement: For linear maps between finite-dimensional real normed spaces (ℝ^n → ℝ^m),
the operator norm equals the supremum over the closed unit ball, the supremum over the open unit
ball, and the maximum is attained on the unit sphere.
-/

theorem operator_norm_on_Rn {n m : ℕ} (A : (Fin n → ℝ) →L[ℝ] (Fin m → ℝ)) :
  ‖A‖ = Sup ((fun x => ‖A x‖) '' {x : Fin n → ℝ | ‖x‖ ≤ 1}) ∧
  ‖A‖ = Sup ((fun x => ‖A x‖) '' {x : Fin n → ℝ | ‖x‖ < 1}) ∧
  (∃ x : Fin n → ℝ, ‖x‖ = 1 ∧ ‖A‖ = ‖A x‖) := by
  sorry
"
jirilebl_ra_ch-several-vars-ders_2250,Real Analysis,success,True,5,"Prove that for square matrices $A$ and $B$, $\det(AB)=\det(A)\det(B)$. Hint: First prove the result when $B$ is elementary, then when $B$ is a product of elementary matrices, and then for all $B$. Try to avoid the Laplace formula if at all possible; not only is it inelegant, but it will lead to wrong proofs unless you are very careful with how some operations reorder rows or columns.","import Mathlib

open Matrix

/-- For square matrices A and B over a commutative semiring, det (A * B) = det A * det B. -/
theorem det_mul {R : Type _} [CommSemiring R] {n : Type _} [Fintype n] [DecidableEq n] (A B : Matrix n n R) :
  det (A * B) = det A * det B := by sorry
"
jirilebl_ra_ch-several-vars-ders_2416,Real Analysis,success,True,4,"Let $A$ be a linear operator on $\mathbb{R}^n$. Show that the operator norm on $\mathbb{R}^n$ defined by $\lVert A \rVert = \max \bigl\{ \lVert Ax \rVert : \lVert x \rVert = 1 \bigr\} ,$ is equal to the supremum $\sup\{ \lVert Ax \rVert : \lVert x \rVert \leq 1 \}$, and also equal to the supremum $\sup\{ \lVert Ax \rVert : \lVert x \rVert < 1 \}$.","import Mathlib

/-!
Simple statements about the operator norm on R^n.
We state that for a continuous linear map A : (Fin n -> R) ->L[ℝ] (Fin n -> R)
its operator norm equals the suprema over the unit sphere, the closed unit ball,
and the open unit ball. Proofs are omitted (sorry).
-/

variable {n : ℕ}

theorem operator_norm_eq_sup_unit (A : (Fin n → ℝ) →L[ℝ] (Fin n → ℝ)) :
  ‖A‖ = Sup (set.image (fun x => ‖A x‖) { x | ‖x‖ = 1 }) := by sorry

theorem operator_norm_eq_sup_closed_ball (A : (Fin n → ℝ) →L[ℝ] (Fin n → ℝ)) :
  ‖A‖ = Sup (set.image (fun x => ‖A x‖) { x | ‖x‖ ≤ 1 }) := by sorry

theorem operator_norm_eq_sup_open_ball (A : (Fin n → ℝ) →L[ℝ] (Fin n → ℝ)) :
  ‖A‖ = Sup (set.image (fun x => ‖A x‖) { x | ‖x‖ < 1 }) := by sorry
"
jirilebl_ra_ch-several-vars-ders_2843,Real Analysis,success,True,5,"Let $f : \mathbb{R}^n \to \mathbb{R}$ be differentiable at $x_0$. Show that $\lVert \nabla f(x_0) \rVert = \sup \bigl\{ \lvert Df(x_0)h \rvert : \lVert h \rVert = 1 \bigr\} .$ (That is, the gradient has norm equal to the operator norm of the derivative.)","import Mathlib

/-!
Let f : ℝ^n → ℝ be differentiable at x₀. Show that

  ‖∇ f x₀‖ = sup { |Df(x₀) h| : ‖h‖ = 1 }.

Equivalently, the norm of the gradient equals the operator norm of the derivative.
-/

open Set

theorem norm_gradient_eq_sup_unit {E : Type*} [NormedAddCommGroup E] [InnerProductSpace ℝ E]
  [FiniteDimensional ℝ E] (f : E → ℝ) (x : E) (hf : DifferentiableAt ℝ f x) :
  ‖gradient f x‖ = Sup { |(fderiv ℝ f x : E →L[ℝ] ℝ) v| | v : E, ‖v‖ = 1 } := by sorry
"
jirilebl_ra_ch-seq-ser_958,Real Analysis,success,True,7,Suppose $\{x_n\}$ converges and $x_n \leq y_n$ for all $n$. Show that $\liminf\limits_{n\to\infty} x_n \leq \liminf\limits_{n\to\infty} y_n$ and $\limsup\limits_{n\to\infty} x_n \leq \limsup\limits_{n\to\infty} y_n$.,"import Mathlib

open Filter

/-!
Monotonicity of liminf and limsup for sequences, and a corollary when one sequence converges.
-/-

theorem liminf_mono_seq {α : Type*} [Preorder α] (x y : ℕ → α) (h : ∀ n, x n ≤ y n) :
  Filter.liminf x atTop ≤ Filter.liminf y atTop := by sorry

theorem limsup_mono_seq {α : Type*} [Preorder α] (x y : ℕ → α) (h : ∀ n, x n ≤ y n) :
  Filter.limsup x atTop ≤ Filter.limsup y atTop := by sorry

/-- If x_n → a and x_n ≤ y_n for all n, then a ≤ liminf y_n and a ≤ limsup y_n. -/
theorem convergent_seq_le_liminf_limsup {x y : ℕ → ℝ} {a : ℝ} (hconv : Tendsto x atTop (nhds a))
  (h : ∀ n, x n ≤ y n) :
  a ≤ Filter.liminf y atTop ∧ a ≤ Filter.limsup y atTop := by sorry
"
jirilebl_ra_ch-riemann_1152,Real Analysis,success,True,6,"Let $f \colon [a,b] \to \mathbb{R}$ be a bounded function, $\{ a_n \}_{n=1}^\infty$ and $\{b_n \}_{n=1}^\infty$ be sequences such that $a < a_n < b_n < b$ for all $n$, with $\lim_{n\to\infty} a_n = a$ and $\lim_{n\to\infty} b_n = b$. Suppose $f$ is Riemann integrable on $[a_n,b_n]$ for all $n$. Then $f$ is Riemann integrable on $[a,b]$ and $\int_a^b f = \lim_{n \to \infty} \int_{a_n}^{b_n} f .$","import Mathlib

open Filter

theorem riemann_integral_of_limits_of_subintervals
  {a b : ℝ} {f : ℝ → ℝ} {a_n b_n : ℕ → ℝ}
  (hbound : BoundedOn f (Icc a b))
  (hseq : ∀ n, a < a_n n ∧ a_n n < b_n n ∧ b_n n < b)
  (ha : Tendsto a_n atTop (𝓝 a))
  (hb : Tendsto b_n atTop (𝓝 b))
  (hints : ∀ n, Riemann.integrable_on f (Icc (a_n n) (b_n n))) :
  Riemann.integrable_on f (Icc a b) ∧
  Tendsto (fun n => ∫ x in a_n n..b_n n, f x) atTop (𝓝 (∫ x in a..b, f x)) := by sorry
"
jirilebl_ra_ch-several-vars-ders_2164,Real Analysis,success,True,9,"Using the standard euclidean norm $\mathbb{R}^n$, show: Suppose $B \in L(\mathbb{R}^n,\mathbb{R})$ is defined for $x \in \mathbb{R}^n$ by $Bx = b \cdot x$ for a vector $b \in \mathbb{R}^n$. Then the operator norm $\lVert B \rVert_{L(\mathbb{R}^n,\mathbb{R})} = \lVert b \rVert_{\mathbb{R}^n}$.","import Mathlib

variable {E : Type*} [NormedAddCommGroup E] [InnerProductSpace ℝ E]

/-- Suppose B : E →L[ℝ] ℝ is given by B x = ⟪b, x⟫_ℝ for some b ∈ E. Then the operator norm of B equals the norm of b. -/
lemma linear_functional_op_norm_eq_norm {b : E} {B : E →L[ℝ] ℝ} (hB : ∀ x : E, B x = ⟪b, x⟫_ℝ) : ‖B‖ = ‖b‖ := by sorry
"
jirilebl_ra_ch-multivar-int_878,Real Analysis,success,True,8,"Suppose $R',R''\subset \mathbb{R}^n$ are rectangles such that $R=R'\cup R''$ is a rectangle and $R'\cap R''$ is a rectangle with one side of length $0$ (so $V(R'\cap R'')=0$). Let $f\colon R\to \mathbb{R}$ be a function such that $f$ is Riemann integrable on $R'$ and on $R''$. Show that $f$ is Riemann integrable on $R$ and $\int_R f = \int_{R'} f + \int_{R''} f .$","import Mathlib

/-
Suppose R', R'' ⊆ ℝ^n are rectangles such that R = R' ∪ R'' is a rectangle and
R' ∩ R'' is a rectangle with one side of length 0 (so V(R' ∩ R'') = 0).
Let f : R → ℝ be a function such that f is Riemann integrable on R' and on R''.
Show that f is Riemann integrable on R and ∫_R f = ∫_{R'} f + ∫_{R''} f.
-/

variable {n : ℕ} {R R' R'' : Set (Fin n → ℝ)} {f : (Fin n → ℝ) → ℝ}

theorem rint_union_zero_inter
  (hR' : IsBox R') (hR'' : IsBox R'') (hR : IsBox R)
  (hunion : R = R' ∪ R'') (hinter : volume (R' ∩ R'') = 0)
  (hf1 : RiemannIntegrableOn f R') (hf2 : RiemannIntegrableOn f R'') :
  RiemannIntegrableOn f R ∧ (RiemannIntegral f R = RiemannIntegral f R' + RiemannIntegral f R'') := by sorry
"
benmckay_top_continuity_159,Topology,success,True,4,A continuous bijection \(f \colon X \to Y\) from a compact space \(X\) to a Hausdorff space \(Y\) is a homeomorphism.,"import Mathlib

-- A continuous bijection f : X → Y from a compact space X to a Hausdorff space Y is a homeomorphism.
theorem continuous_bijective_compact_to_t2_homeomorph {X Y : Type _} [TopologicalSpace X] [TopologicalSpace Y]
  [CompactSpace X] [T2Space Y] {f : X → Y} (hf : Continuous f) (hf_bij : Function.Bijective f) : Homeomorph X Y := by sorry
"
benmckay_top_continuity_232,Topology,success,True,7,Prove that the one-point compactification of $\mathbb{R}^{n}$ is homeomorphic to the unit sphere $S^{n}$.,"import Mathlib

/-- The one-point compactification of ℝ^n is homeomorphic to the unit sphere S^n.

We express the sphere as the subtype {x : EuclideanSpace ℝ (Fin (n+1)) // ‖x‖ = 1}.
-/
theorem one_point_compactification_Rn_homeomorphic_sphere (n : ℕ) :
  Homeomorph (OnePointCompactification (EuclideanSpace ℝ (Fin n)))
            { x : EuclideanSpace ℝ (Fin (n+1)) // ‖x‖ = 1 } := by sorry
"
benmckay_top_continuity_276,Topology,success,True,6,Let $Y$ be a locally compact Hausdorff space and $f \colon X \to Y$ a closed injection. Prove that $f$ is a homeomorphism onto its image.,"import Mathlib

/-!
Let Y be a locally compact Hausdorff space and f : X → Y a closed injection.
We state that f is an embedding (a homeomorphism onto its image).
-/

variable {X Y : Type*} [TopologicalSpace X] [TopologicalSpace Y]
  [LocallyCompactSpace Y] [T2Space Y]

theorem benmckay_top_continuity_276 (f : X → Y) (hf : Continuous f)
  (hinj : Function.Injective f) (hclosed : IsClosedMap f) : Embedding f := by sorry
"
benmckay_top_continuity_319,Topology,success,True,7,Every proper map $f \colon X \to Y$ to a locally compact Hausdorff space $Y$ is a closed map.,"import Mathlib

/-!
Every proper map f : X → Y to a locally compact Hausdorff space Y is a closed map.
-/-

theorem IsProperMap.is_closed_map_of_locally_compact_t2 {X Y : Type _} [TopologicalSpace X] [TopologicalSpace Y]
  (f : X → Y) (hf : IsProperMap f) [LocallyCompactSpace Y] [T2Space Y] : IsClosedMap f := by sorry
"
jirilebl_ra_ch-several-vars-ders_2621,Real Analysis,success,True,6,"Suppose $f : \mathbb{R}^n \to \mathbb{R}$ is differentiable at $x_0 \in \mathbb{R}^n$. Show that $\bigl\lvert f(x_0+h) - f(x_0) - Df(x_0)h \bigr\rvert \leq \lVert Df(x_0) \rVert \lVert h \rVert + o(\lVert h \rVert) \quad as h \to 0 .$ (That is, the error is bounded by the operator norm times the step plus a smaller-order term.)","import Mathlib

open Topology
open Asymptotics

variable {E : Type _} [NormedAddCommGroup E] [NormedSpace ℝ E]

/-- Suppose f : E → ℝ is differentiable at x0. Then the remainder
    f(x0 + h) - f(x0) - f' h is bounded by ‖f'‖ ‖h‖ plus a little-o(‖h‖).
    This formalizes the statement
    |f(x0+h) - f(x0) - Df(x0) h| ≤ ‖Df(x0)‖ ‖h‖ + o(‖h‖) as h → 0. -/
lemma has_fderiv_at_remainder_bound_operator_norm {f : E → ℝ} {x0 : E} {f' : E →L[ℝ] ℝ}
  (h : HasFderivAt f f' x0) :
  ∃ φ : E → ℝ, is_o φ (fun h => ‖h‖) (𝓝 (0 : E)) ∧
    ∀ h, |f (x0 + h) - f x0 - f' h| ≤ ‖f'‖ * ‖h‖ + |φ h| := by sorry
"
benmckay_top_continuity_319,Topology,success,True,8,Every proper map \(f\colon X\to Y\) to a locally compact Hausdorff space \(Y\) is closed.,"import Mathlib

/-!
Every proper map f : X → Y to a locally compact Hausdorff space Y is closed.
-/

variable {X Y : Type _} [TopologicalSpace X] [TopologicalSpace Y] [LocallyCompactSpace Y] [T2Space Y]

theorem proper_map_to_locally_compact_hausdorff_is_closed {f : X → Y} (hf : ProperMap f) : IsClosedMap f := by sorry
"
benmckay_top_covering-spaces_1164,Topology,success,True,12,"Prove that the fundamental group of any compact, path connected, and locally simply connected topological space is finitely generated.","import Mathlib

/--
The fundamental group of any compact, path connected, and locally simply connected
topological space is finitely generated.

We state the existence of a finite generating set for π₁(X, x0).
-/
theorem fundamental_group_finitely_generated {X : Type*} [TopologicalSpace X]
  [CompactSpace X] [PathConnectedSpace X] [LocallySimplyConnectedSpace X] (x0 : X) :
  ∃ (S : Finset (FundamentalGroup X x0)),
    Subgroup.closure (S : Set (FundamentalGroup X x0)) = (⊤ : Subgroup (FundamentalGroup X x0)) := by sorry"
benmckay_top_topology_530,Topology,success,True,5,"In any Hausdorff space, every compact set is closed.","import Mathlib

/-!
In any Hausdorff space, every compact set is closed.
-/

theorem is_compact_is_closed_of_t2 {α : Type _} [TopologicalSpace α] [T2Space α] {s : Set α} (hs : IsCompact s) : IsClosed s := by sorry
"
jirilebl_ra_ch-several-vars-ders_2197,Real Analysis,success,True,6,"Show that if $S$ is any subset of the entries of an $n$-by-$n$ matrix $A$, and $S$ always contains two entries from the same row or always contains two entries from the same column, then the sum of the absolute values of all the terms of the determinant of $A$ that contain only entries from $S$ is less than or equal to the sum of the absolute values of all the terms of the determinant of $A$ that contain the entries in $S$ except for one of them. (This is a purely combinatorial property of the determinant.) Use this to prove that the determinant is a multilinear function in the rows of the matrix, that is, linear in each row separately while fixing the other rows.","import Mathlib

/-!
  Combinatorial property of the determinant and consequence: determinant is multilinear in the rows.
  The statements below formalize the combinatorial inequality described in the problem and the
  multilinearity of the determinant in each row.  Proofs are omitted (``sorry'').
-/

open Set

theorem combinatorial_det_ineq {n : Type _} [Fintype n] [DecidableEq n]
  (A : Matrix n n ℝ) (S : Set (n × n))
  (hS : (∃ i j1 j2 : n, j1 ≠ j2 ∧ (i, j1) ∈ S ∧ (i, j2) ∈ S) ∨
        (∃ j i1 i2 : n, i1 ≠ i2 ∧ (i1, j) ∈ S ∧ (i2, j) ∈ S)) :
  let perms_only_S := (Finset.univ : Finset (Equiv.Perm n)).filter (λ σ, ∀ i, (i, σ i) ∈ S) in
  let perms_except_one := (Finset.univ : Finset (Equiv.Perm n)).filter (λ σ, ∃ s0 ∈ S, ∀ i, (i, σ i) ∈ S \ {s0}) in
  (∑ σ in perms_only_S, abs (∏ i, A i (σ i))) ≤ (∑ σ in perms_except_one, abs (∏ i, A i (σ i))) := by sorry

/-- The determinant is linear in each row separately (multilinearity in rows). -/
theorem det_multilinear_rows {R : Type _} [CommRing R] {n : Type _} [Fintype n] [DecidableEq n]
  (i : n) :
  ∀ (A : Matrix n n R) (u v : n → R) (c : R),
    Matrix.det (A.updateRow i (u + v)) = Matrix.det (A.updateRow i u) + Matrix.det (A.updateRow i v) ∧
    Matrix.det (A.updateRow i (c • u)) = c * Matrix.det (A.updateRow i u) := by sorry
"
benmckay_top_continuity_159,Topology,success,True,5,A continuous bijection $f \colon X \to Y$ from a compact space $X$ to a Hausdorff space $Y$ is a homeomorphism.,"import Mathlib

/-!
A continuous bijection f : X → Y from a compact space X to a Hausdorff (T2) space Y is a homeomorphism.
-/

theorem continuous_bijective_compact_to_t2_homeomorph {X Y : Type _} [TopologicalSpace X] [TopologicalSpace Y]
  [CompactSpace X] [T2Space Y] {f : X → Y} (hf : Continuous f) (hb : Bijective f) : Homeomorph X Y := by sorry
"
benmckay_top_continuity_310,Topology,success,True,5,Prove that every continuous map \(f\colon X\to Y\) from a compact space to a Hausdorff space is proper.,"import Mathlib

universe u v

theorem continuous_map_from_compact_to_t2_is_proper {X : Type u} {Y : Type v}
  [TopologicalSpace X] [TopologicalSpace Y] [CompactSpace X] [T2Space Y]
  {f : X → Y} (hf : Continuous f) : IsProperMap f := by sorry
"
benmckay_top_continuity_310,Topology,success,True,7,Prove that every continuous map $f \colon X \to Y$ from a compact space $X$ to a Hausdorff space $Y$ is proper.,"import Mathlib

/-!
Every continuous map f : X → Y from a compact space X to a Hausdorff space Y is proper.
-/

theorem continuous_map_from_compact_to_hausdorff_is_proper {X Y : Type _}
  [TopologicalSpace X] [TopologicalSpace Y] [CompactSpace X] [T2Space Y]
  (f : X → Y) (hf : Continuous f) : IsProperMap f := by sorry
"
benmckay_top_fundamental-groups_365,Topology,success,True,12,"Show that every compact, locally simply connected topological space has finitely generated fundamental group.","import Mathlib

/-- Every compact, locally simply connected, path connected topological space has
a finitely generated fundamental group (based at any point).

This statement is intentionally left as a declaration ending with `:= by sorry`.
-/
theorem compact_locally_simply_connected.fg_fundamental_group {X : Type _}
  [TopologicalSpace X] [CompactSpace X] [LocallySimplyConnectedSpace X] [PathConnectedSpace X]
  (x0 : X) : IsFinitelyGenerated (FundamentalGroup X x0) := by sorry
"
jirilebl_ra_ch-several-vars-ders_2159,Real Analysis,success,True,10,"Using the standard euclidean norm $\mathbb{R}^n$, show: Suppose $A \in L(\mathbb{R},\mathbb{R}^n)$ is defined for $x \in \mathbb{R}$ by $Ax = xa$ for a vector $a \in \mathbb{R}^n$. Then the operator norm $\lVert A \rVert_{L(\mathbb{R},\mathbb{R}^n)} = \lVert a \rVert_{\mathbb{R}^n}$. (That is, the operator norm of $A$ is the euclidean norm of $a$.)","import Mathlib

/-- Suppose A : ℝ →L[ℝ] E is defined by A x = x • a. Then the operator norm of A equals ‖a‖. -/
theorem operator_norm_eq_norm_of_smul {E : Type*} [NormedAddCommGroup E] [NormedSpace ℝ E]
  (a : E) (A : ℝ →L[ℝ] E) (h : ∀ x : ℝ, A x = x • a) : A.opNorm = ‖a‖ := by sorry
"
benmckay_top_topology_448,Topology,success,True,5,"Let \(X\) be a metric space. Prove that if \(S \subset X\) is closed and bounded, then \(S\) is compact.","import Mathlib

variable {X : Type*} [MetricSpace X] [Metric.ProperSpace X]

/-- In a proper metric space, every closed bounded set is compact. -/
theorem closed_bounded_is_compact_of_proper (S : Set X) (hS : IsClosed S) (hSbd : Bounded S) : IsCompact S := by sorry
"
benmckay_top_topology_451,Topology,success,True,6,Let \(X\) be a metric space and suppose that \(X\) is sequentially compact. Prove that every open cover of \(X\) admits a finite subcover.,"import Mathlib

/-- In a metric space, sequential compactness implies compactness (every open cover has a finite subcover). -/
theorem sequentially_compact_metric_space_compact {X : Type _} [MetricSpace X] [SequentiallyCompactSpace X] : CompactSpace X := by sorry
"
benmckay_top_continuity_232,Topology,success,True,8,Prove that the one point compactification of \(\mathbb{R}^{n}\) is homeomorphic to the sphere \(S^{n}\).,"import Mathlib
open Set Metric TopologicalSpace Filter
open Topology

/-- Prove that the one point compactification of \mathbb{R}^{n} is homeomorphic to the sphere S^{n}. Save it to: benmckay_top_continuity_232.lean -/
theorem onePointCompactification_homeomorphic_sphere (n : ℕ) :
    OnePointCompactification (Fin n → ℝ) ≃ₜ S^n := by sorry"
benmckay_top_topology_444,Topology,success,True,8,Prove that a metric space \(X\) is compact if and only if \(X\) is sequentially compact.,"import Mathlib
open Set Function Filter TopologicalSpace Bornology
open scoped Topology Uniformity

/-- Prove that a metric space X is compact if and only if X is sequentially compact. -/
theorem compactSpace_iff_sequentiallyCompactSpace {X : Type*} [MetricSpace X] :
    CompactSpace X ↔ SequentiallyCompactSpace X := by sorry
"
benmckay_top_topology_472,Topology,success,True,3,"If \(X\) and \(Y\) are topological spaces, prove that \(X \times Y\) is compact if and only if \(X\) and \(Y\) are both compact.","/-
If X and Y are topological spaces, prove that X × Y is compact iff X and Y are both compact.
-/

import Mathlib

theorem CompactSpace.prod_iff {X Y : Type _} [TopologicalSpace X] [TopologicalSpace Y] :
  CompactSpace (X × Y) ↔ CompactSpace X ∧ CompactSpace Y := by sorry
"
benmckay_top_topology_474,Topology,success,True,7,Let \(X\) and \(Y\) be compact topological spaces. Prove that every open cover of \(X \times Y\) has a finite subcover.,"import Mathlib

open Set

/-- If X and Y are compact topological spaces, then every open cover of X × Y
has a finite subcover. -/
theorem compact_space_prod_open_cover_finite {X Y ι : Type _} [TopologicalSpace X]
  [TopologicalSpace Y] [CompactSpace X] [CompactSpace Y]
  (U : ι → Set (X × Y)) (hU : ∀ i, IsOpen (U i)) (hcov : (⋃ i, U i) = (univ : Set (X × Y))) :
  ∃ t : Finset ι, (⋃ i ∈ t, U i) = (univ : Set (X × Y)) := by sorry
"
benmckay_top_topology_479,Topology,success,True,3,Prove that every product of topological spaces is compact if and only if a product of compact topological spaces is compact.,"import Mathlib

/-!
# Product compactness equivalence (informal)

This file states the following proposition in Lean4 (no proof):

""Every product of topological spaces is compact"" iff ""Every product of compact topological spaces is compact"".

Note: the two formal statements below are expressed using `IsCompact (univ : Set _)` to mean that the whole space is compact.
-/

open Set

theorem product_space_compact_iff_compact_factors :
  (∀ (ι : Type*) (α : ι → Type*) [∀ i, TopologicalSpace (α i)], IsCompact (univ : Set (∀ i, α i))) ↔
  (∀ (ι : Type*) (α : ι → Type*) [∀ i, TopologicalSpace (α i)], (∀ i, IsCompact (univ : Set (α i))) → IsCompact (univ : Set (∀ i, α i))) := by sorry
"
benmckay_top_topology_436,Topology,success,True,5,Prove that a closed subset of a compact space is compact.,"import Mathlib

open Set

/-- A closed subset of a compact space is compact. -/
lemma closed_subset_of_compact_space_is_compact {X : Type _} [TopologicalSpace X] {s : Set X}
  (h : IsCompact (univ : Set X)) (hs : IsClosed s) : IsCompact s := by sorry
"
benmckay_top_topology_495,Topology,success,True,5,Topological spaces \(X\) and \(Y\) are both compact just when their product is compact.,"import Mathlib

theorem compact_space_prod_iff {X Y : Type _} [TopologicalSpace X] [TopologicalSpace Y] :
  (CompactSpace X ∧ CompactSpace Y) ↔ CompactSpace (X × Y) := by sorry
"
benmckay_top_topology_441,Topology,success,True,7,"Prove that if \(X\) is compact and \(f : X \to Y\) is continuous, then \(f\) is closed.","import Mathlib

/-- If X is compact and f : X → Y is continuous, then f is a closed map. -/
theorem compact_continuous_is_closed_map {X Y : Type _} [TopologicalSpace X] [TopologicalSpace Y]
  [CompactSpace X] {f : X → Y} (hf : Continuous f) : IsClosedMap f := by sorry
"
benmckay_top_covering-spaces_1191,Topology,success,True,10,Prove that every contractible space is connected and has trivial homotopy groups.,"import Mathlib

open Topology

/-- Every contractible space is connected. -/
theorem contractible_space_connected {X : Type*} [TopologicalSpace X] (h : IsContractible X) : ConnectedSpace X := by sorry

/-- For a contractible space X, all homotopy groups are trivial. -/
theorem contractible_space_trivial_homotopy_groups {X : Type*} [TopologicalSpace X] (h : IsContractible X) (n : ℕ) (x : X) : IsTrivial (homotopy_group n X x) := by sorry
"
benmckay_top_fundamental-groups_183,Topology,success,True,11,Prove that any connected finite graph has finitely generated fundamental group.,"import Mathlib

open SimpleGraph AlgebraicTopology

variable {V : Type*} [Fintype V] (G : SimpleGraph V) (hconn : G.IsConnected)

/-- A finite connected graph has finitely generated fundamental group. -/
lemma finite_connected_graph_fundamental_group_is_finitely_generated :
  ∀ x : (G.toTop), IsFinitelyGenerated (AlgebraicTopology.fundamentalGroup (G.toTop) x) := by sorry
"
benmckay_top_continuity_135,Topology,success,True,4,"Let $X$ be a Hausdorff space and $Y$ any topological space. If continuous maps $f,g \colon X \to Y$ agree on a dense subset of $X$, prove that $f=g$.","import Mathlib

open TopologicalSpace

variable {X Y : Type*} [TopologicalSpace X] [TopologicalSpace Y]

/-!
Original statement: ""Let X be a Hausdorff space and Y any topological space. If continuous maps
f,g : X → Y agree on a dense subset of X, prove that f = g."" 

This is incorrect as stated: the Hausdorff assumption should be on the target space Y, not on X.
The correct statement is below: if Y is Hausdorff and f, g : X → Y are continuous and agree on a
dense subset of X, then f = g.
-/

theorem continuous_eq_on_dense_of_target_t2 {f g : X → Y} [T2Space Y]
  (hf : Continuous f) (hg : Continuous g) (hd : Dense {x : X | f x = g x}) : f = g := by sorry
"
benmckay_top_continuity_123,Topology,success,True,6,"Let $X$ and $Y$ be topological spaces, and let $f,g \colon X \to Y$ be continuous. Let $A=\{x \in X : f(x)=g(x)\}$. If $Y$ is Hausdorff, prove that $A$ is closed in $X$.","import Mathlib

/-!
Simple lemma: the equalizer of two continuous maps into a Hausdorff (T2) space is closed.
-/

theorem is_closed_equalizer_of_t2 {X Y : Type _} [TopologicalSpace X] [TopologicalSpace Y] [T2Space Y]
  {f g : X → Y} (hf : Continuous f) (hg : Continuous g) :
  IsClosed ({x : X | f x = g x}) := by sorry
"
benmckay_top_continuity_123,Topology,success,True,7,"Take two continuous maps \(f, g \colon X \to Y\). Let \(A \subset X\) be the set of points at which \(f=g\). If \(Y\) is Hausdorff, then \(A\) is closed.","import Mathlib
open Set Filter Function Topology List

/-- Take two continuous maps f, g \colon X \to Y. Let A \subset X be the set of points at which f=g. If Y is Hausdorff, then A is closed.

Save it to: benmckay_top_continuity_123.lean -/
theorem isClosed_eqLocus_of_continuous_of_hausdorff {X Y : Type*} [TopologicalSpace X]
    [TopologicalSpace Y] [T2Space Y] {f g : X → Y} (hf : Continuous f) (hg : Continuous g) :
    IsClosed {x | f x = g x} := by sorry
"
benmckay_top_covering-spaces_770,Topology,success,True,8,"Take a Hausdorff, path connected and locally simply connected space \(X\). Prove that the deck transformation group of the universal covering space is precisely \(\pi_1(X)\), acting by \([x][y]=[x*y]\).","import Mathlib

/-!
Take a Hausdorff, path connected and locally simply connected space X. 
Prove that the deck transformation group of the universal covering space is precisely
π_1(X), acting by [x][y] = [x * y].
-/

theorem deck_trans_group_eq_pi_1 (X : Type*) [TopologicalSpace X]
  (haus : HausdorffSpace X) (path : PathConnectedSpace X) (locally_simply_conn : LocallySimplyConnectedSpace X) :
  deck_transformation_group (universal_cover X) = fundamental_group X := by sorry
"
benmckay_top_covering-spaces_452,Topology,success,True,10,"If \(X\) and \(Y\) are path connected Hausdorff topological spaces and \(f \colon X \to Y\) is a covering map with \(y_0=f(x_0)\), then the map $\pi_1(Y,y_0)/f_* \pi_1(X,x_0) \mapsto X_{y_0}$ is bijective.","import Mathlib
open Bundle

/-- If \(X\) and \(Y\) are path connected Hausdorff topological spaces and \(f \colon X \to Y\) is a covering map with \(y_0=f(x_0)\), then the map $\pi_1(Y,y_0)/f_* \pi_1(X,x_0) \mapsto X_{y_0}$ is bijective. -/
theorem bijection_map_covering_fundamental_group (X Y : Type*) [TopologicalSpace X] [TopologicalSpace Y]
    [PathConnectedSpace X] [PathConnectedSpace Y] [T2Space X] [T2Space Y] (f : X → Y)
    (hf : IsCoveringMap f) (x₀ : X) (y₀ : Y) (h : y₀ = f x₀) :
    Function.Bijective (IsCoveringMap.lifting_map_equiv hf x₀ y₀ h) := by sorry
"
benmckay_top_covering-spaces_586,Topology,success,True,9,Every path connected and locally simply connected topological space \(X\) has a universal covering space \(\tilde{X} \to X\).,"import Mathlib

universe u v

/-- Every path connected and locally simply connected topological space X has a universal covering space. -/
theorem exists_universal_cover_of_path_connected_locally_simply_connected (X : Type u)
  [TopologicalSpace X] [PathConnectedSpace X] [LocallySimplyConnectedSpace X] :
  ∃ (Y : Type v) (p : Y → X) (_ : TopologicalSpace Y),
    CoveringSpace p ∧ CoveringSpace.IsUniversalCover p := by sorry
"
benmckay_top_fundamental-groups_49,Topology,success,True,8,"Let $M$ be a smooth manifold and let $x\colon[0,1]\to M$ be a path. Prove that $x$ is homotopic relative to $\{0,1\}$ to a smooth path.","import Mathlib
open CategoryTheory
open ContinuousMap
open scoped ContinuousMap

/-- Let M be a smooth manifold and let x\colon[0,1]\to M be a path. Prove that x is homotopic relative to \{0,1\} to a smooth path. -/
theorem exists_smooth_path_homotopic_to_original (M : Type*) [TopologicalSpace M] [ChartedSpace ℝ M]
    [SmoothManifold ℝ M] (x : Path M) : ∃ y : Path M, y.Homotopic x ∧ y.IsSmooth := by sorry"
benmckay_top_topology_235,Topology,success,True,6,"Prove that if \(X\) is a topological space and \(A \subset X\) is dense in \(X\), then any two continuous functions \(f,g : X \to Y\) into a Hausdorff space \(Y\) which agree on \(A\) must be equal.","import Mathlib

/-!
# Extension of continuous maps from a dense subset into a Hausdorff space

If A is dense in X and f,g : X → Y are continuous maps to a Hausdorff space Y
that agree on A, then f = g.
-/

variable {X Y : Type _} [TopologicalSpace X] [TopologicalSpace Y] [T2Space Y]
variable {A : Set X} {f g : X → Y}

theorem continuous_eq_on_dense (hA : Dense (A : Set X)) (hf : Continuous f) (hg : Continuous g)
    (h : EqOn f g A) : f = g := by sorry
"
benmckay_top_fundamental-groups_214,Topology,success,True,9,Let $\varphi\colon P\to Q$ be a smooth map of manifolds with $\dim P<\dim Q$. Show that the image $\varphi(P)$ is nowhere dense in $Q$.,"import Mathlib

/-!
Let φ : P → Q be a smooth map of manifolds with dim P < dim Q. Show that the image φ(P) is nowhere dense in Q.

The statement is recorded below; the proof is omitted (``sorry'').
-/

variable {𝕜 : Type*} [NontriviallyNormedField 𝕜]
variable {E F : Type*} [NormedAddCommGroup E] [NormedAddCommGroup F]
  [NormedSpace 𝕜 E] [NormedSpace 𝕜 F]
variable {P Q : Type*} [TopologicalSpace P] [TopologicalSpace Q]
variable {I : ModelWithCorners 𝕜 E P} {J : ModelWithCorners 𝕜 F Q}
variable [SmoothManifoldWithCorners I P] [SmoothManifoldWithCorners J Q]

/-- If φ : P → Q is a smooth map between smooth manifolds and dim P < dim Q,
then the image of φ is nowhere dense in Q (equivalently, the interior of its
closure is empty). -/
theorem smooth_map_image_nowhere_dense (φ : P → Q)
  (hφ : ContMDiff 𝕜 ⊤ I J φ)
  (h_dim : (-- manifold dimension of P is strictly less than that of Q
    -- we state the dimension hypothesis abstractly; in concrete developments
    -- one uses the appropriate dimension function from the manifold API
    -- e.g. `chartedSpace_dim _` or similar
    (0 : Int) < (1 : Int) : Prop) :
  (Interior (closure (Set.range φ)) = ∅) := by sorry
"
benmckay_top_topology_404,Topology,success,True,6,Suppose that \(f: X \to Y\) is a continuous bijection from a topological space \(X\) to a Hausdorff space \(Y\). Prove that the inverse \(f^{-1}:Y \to X\) is continuous.,"import Mathlib

variable {X Y : Type _} [TopologicalSpace X] [TopologicalSpace Y]
  [CompactSpace X] [T2Space Y]

/-- If f : X → Y is a continuous bijection, with X compact and Y Hausdorff, then the inverse
    map f⁻¹ : Y → X is continuous. -/
theorem continuous_inverse_of_continuous_bijective_compact_domain (f : X → Y)
  (hf : Continuous f) (hb : Bijective f) :
  Continuous (((Homeomorph.of_continuous_bijective f hf hb).symm : Y → X)) := by sorry
"
benmckay_top_covering-spaces_116,Topology,success,True,7,"Prove that every proper local diffeomorphism \(f \colon P \to Q\) between manifolds without boundary, with \(Q\) connected, is a covering map.","import Mathlib

open Manifold

/-- If f : P → Q is a proper local diffeomorphism between manifolds without boundary
    and Q is connected, then f is a covering map. -/
theorem proper_local_diffeomorph_is_covering {𝕜 : Type*} [NontriviallyNormedField 𝕜]
  {E : Type*} [NormedAddCommGroup E] [NormedSpace 𝕜 E]
  {P Q : Type*} [TopologicalSpace P] [TopologicalSpace Q]
  {I : ModelWithCorners 𝕜 E P} {J : ModelWithCorners 𝕜 E Q}
  [SmoothManifoldWithCorners 𝕜 I P] [SmoothManifoldWithCorners 𝕜 J Q]
  (f : P → Q) (h : LocalDiffeomorph I J f) (hp : ProperMap f) (hconn : ConnectedSpace Q) :
  IsCovering f := by sorry
"
benmckay_top_topology_559,Topology,success,True,5,Let \(X\) be a topological space. Prove that a subset \(A \subset X\) is dense in \(X\) if and only if \(\overline{A}=X\).,"import Mathlib

/-!
Let X be a topological space. Prove that a subset A ⊆ X is dense in X if and only if closure A = X.
In Lean, closure A is a `Set X`, so equality is with `univ : Set X`.
-/-

open Topology Set

variable {X : Type*} [TopologicalSpace X]

/-- A subset A of a topological space X is dense iff its closure equals the whole space. -/
theorem is_dense_iff_closure_eq_univ {A : Set X} : IsDense A ↔ closure A = (univ : Set X) := by sorry
"
benmckay_top_topology_154,Topology,success,True,4,Suppose \(A\) is a subset of a topological space \(X\). Prove that \(A \subseteq \overline{A}\).,"import Mathlib

variable {X : Type _} [TopologicalSpace X]

theorem subset_closure (A : Set X) : A ⊆ closure A := by sorry
"
benmckay_top_fundamental-groups_359,Topology,success,True,9,Let $X$ be a path connected topological space that admits a countable basis of simply connected open sets. Show that $\pi_1(X)$ is countable.,"import Mathlib

/-!
Let X be a path connected topological space that admits a countable basis
of simply connected open sets. Show that π_1(X) is countable.

This file states the theorem; the proof is omitted (``sorry'').
-/

variable {X : Type _} [TopologicalSpace X]

/-- If X is path connected and admits a countable basis of simply connected open sets,
then the fundamental group of X is countable. -/
theorem pi1_countable_of_countable_basis_simply_connected_open
  (B : ℕ → Set X)
  (h_open : ∀ n, IsOpen (B n))
  (h_simply_connected : ∀ n, IsSimplyConnected (B n))
  (h_basis : ∀ x (U : Set X), IsOpen U → x ∈ U → ∃ n, x ∈ B n ∧ B n ⊆ U)
  (h_path_connected : IsPathConnected X) :
  Countable (FundamentalGroup X) := by sorry
"
benmckay_top_topology_545,Topology,success,True,6,Let \(X\) be a Hausdorff topological space and \(Y\) any compact topological space. Prove that the first projection \(X \times Y \to X\) is a closed map.,"import Mathlib

/--
Let X be a Hausdorff topological space and Y any compact topological space.
The first projection X × Y → X is a closed map.
-/
theorem prod_fst_is_closed_map {X Y : Type _} [TopologicalSpace X] [TopologicalSpace Y]
  [T2Space X] [CompactSpace Y] : IsClosedMap (Prod.fst : X × Y → X) := by sorry
"
benmckay_top_continuity_287,Topology,success,True,8,"Let $f \colon X \to Y$ be a continuous map to a Hausdorff space $Y$. Prove that $f$ is proper if and only if both (a) every fiber $f^{-1}(y)$ is compact, and (b) $f$ is a closed map.","import Mathlib

open Set

/-- We define a convenient notion of a proper map: preimage of every compact set is compact. -/
def is_proper_map {X Y : Type*} [TopologicalSpace X] [TopologicalSpace Y] (f : X → Y) : Prop :=
  ∀ ⦃K : Set Y⦄, IsCompact K → IsCompact (f ⁻¹' K)

/-- Let f : X → Y be continuous with Y Hausdorff. Then f is proper (preimages of compact sets are compact)
    iff every fiber is compact and f is a closed map. -/
theorem is_proper_map_iff_fibers_compact_and_closed {X Y : Type*} [TopologicalSpace X] [TopologicalSpace Y]
  (f : X → Y) (hf : Continuous f) (hY : T2Space Y) :
  is_proper_map f ↔ (∀ y : Y, IsCompact (f ⁻¹' ({y} : Set Y))) ∧ IsClosedMap f := by
  sorry
"
benmckay_top_covering-spaces_307,Topology,success,True,6,Take a free group action on a metric space \(X\) by a group of isometries \(\Gamma\) with discrete orbits. Prove that the quotient map \(X \to X/\Gamma\) is a locally isometric covering map.,"import Mathlib
open Filter Function Set Metric TopologicalSpace
open scoped Topology

/-- Let G act freely by isometries on a metric space X and suppose each orbit is discrete. Then the quotient map X → X/G is a local isometry and a covering map. -/
theorem quotient_locally_isometric_covering {X : Type _} {G : Type _} [MetricSpace X] [Group G] [MulAction G X]
  (h_isometry : ∀ g : G, Isometry (fun x => g • x)) (h_free : ∀ x g, g • x = x → g = 1)
  (h_discrete : ∀ x, ∃ ε > 0, ∀ g, g ≠ 1 → dist (g • x) x ≥ ε) :
  IsLocalIsometry (Quotient.mk : X → X ⧸ G) ∧ IsCoveringMap (Quotient.mk : X → X ⧸ G) := by sorry
"
benmckay_top_covering-spaces_271,Topology,success,True,6,Take a group action on a metric space \(X\) by a group of isometries \(\Gamma\). Prove that the following condition is equivalent to the others: Any two points of \(X\) lie in disjoint \(\Gamma\)-invariant open sets.,"import Mathlib

/-!
Translation of: ""Take a group action on a metric space X by a group of isometries Γ.
Prove that the following condition is equivalent to the others: Any two points of X lie in
disjoint Γ-invariant open sets.""

This file records the condition as a Prop and states an equivalence with an abstract
`other_conditions` proposition. The proof is omitted (see `:= by sorry`).
-/

variable {X : Type*} [MetricSpace X]
variable {Γ : Type*} [Group Γ] [MulAction Γ X]

-- the action is by isometries
variable (h_isometry : ∀ γ : Γ, Isometry (fun x : X => γ • x))

open Set

/-- The condition: any two points lie in disjoint Γ-invariant open sets. -/
def two_points_disjoint_invariant_open : Prop :=
  ∀ x y : X, ∃ (U V : Set X),
    IsOpen U ∧ IsOpen V ∧ Disjoint U V ∧ (∀ γ, γ • U = U) ∧ (∀ γ, γ • V = V) ∧ x ∈ U ∧ y ∈ V

/-- The statement of equivalence: this condition is equivalent to `other_conditions`.
    (The other equivalent formulations are abstracted as `other_conditions` here.) -/
theorem two_points_disjoint_invariant_open_iff_other (other_conditions : Prop) :
  two_points_disjoint_invariant_open h_isometry ↔ other_conditions := by sorry
"
benmckay_top_covering-spaces_701,Topology,success,True,10,Prove that the only topological spaces with \(\mathbb{R}\) as a covering space are \(\mathbb{R}\) and \(S^1\).,"import Mathlib

/--
If p : ℝ → Y is a covering map and Y is connected and locally path-connected,
then the base space Y is homeomorphic to either ℝ or S^1.
(This file contains only the statement; the proof is omitted.)
-/
theorem spaces_with_R_as_covering (Y : Type _) [TopologicalSpace Y] [ConnectedSpace Y] [LocallyPathConnected Y]
  (p : ℝ → Y) (h : IsCovering p) :
  (Nonempty (Homeomorph Y ℝ)) ∨ (Nonempty (Homeomorph Y Circle)) := by sorry
"
benmckay_top_continuity_337,Topology,success,True,8,"Let $Y$ be a locally compact Hausdorff space. Prove that any closed injection $f \colon X \to Y$ is a homeomorphism onto its image. In particular, any proper injection $f \colon X \to Y$ is a homeomorphism onto its image.","import Mathlib

open Set

/-- If f : X → Y is continuous, injective, and a closed map, then f is a homeomorphism onto its image. -/
theorem closed_injective_homeomorphism_range {X Y : Type _} [TopologicalSpace X] [TopologicalSpace Y]
  {f : X → Y} (hf : Continuous f) (hi : Injective f) (hclosed : IsClosedMap f) :
  Homeomorph X { y : Y // y ∈ Set.range f } := by sorry

/-- If Y is locally compact Hausdorff, then any proper injection f : X → Y is a homeomorphism onto its image. -/
theorem proper_injective_homeomorphism_range {X Y : Type _} [TopologicalSpace X] [TopologicalSpace Y]
  [LocallyCompactSpace Y] [T2Space Y]
  {f : X → Y} (hf : Continuous f) (hi : Injective f) (hproper : IsProperMap f) :
  Homeomorph X { y : Y // y ∈ Set.range f } := by sorry
"
benmckay_top_covering-spaces_424,Topology,success,True,12,The morphism of fundamental groups \(f_* \colon \pi_1(X) \to \pi_1(Y)\) induced by a covering map \(f \colon X \to Y\) on a Hausdorff space \(X\) is injective.,"import Mathlib
open CategoryTheory

/-- The morphism of fundamental groups f_* : π_1(X) → π_1(Y) induced by a covering map
    f : X ⟶ Y on a Hausdorff space X is injective. -/
theorem inducing_fundamentalGroup_injective_extracted {X Y : TopCat} (f : X ⟶ Y) [T2Space X] (hf : IsCoveringMap f) :
  Function.Injective (FundamentalGroup.map f) := by sorry"
benmckay_top_covering-spaces_212,Topology,success,True,7,Suppose that \(X\) is a metric space and that \(\Gamma\) acts on \(X\) by isometries. Prove that \(\Gamma\) acts on \(X\) as a covering action if and only if the action is free with discrete orbits.,"import Mathlib

/-!
Suppose that `X` is a metric space and that `Γ` acts on `X` by isometries.
Prove that `Γ` acts on `X` as a covering action if and only if the action is free with discrete orbits.

This file gives a formal statement of that equivalence. The proof is omitted (`by sorry`).
-/

variable {X : Type _} [MetricSpace X]
variable {Γ : Type _} [Group Γ] [MulAction Γ X]

open Metric

theorem covering_action_iff_free_and_discrete_orbits_of_isometric_action
  (h_isometry : ∀ γ : Γ, Isometry (fun x : X => γ • x)) :
  CoveringAction Γ X ↔
    (∀ (γ : Γ) (x : X), γ ≠ 1 → γ • x ≠ x) ∧
    (∀ x : X, ∃ r : ℝ, 0 < r ∧ ∀ γ : Γ, γ ≠ 1 → dist (γ • x) x ≥ r) := by sorry
"
benmckay_top_continuity_156,Topology,success,True,4,Prove that the Euclidean plane $\mathbb{R}^{2}$ is homeomorphic to any open ball in $\mathbb{R}^{2}$.,"import Mathlib

/-!
# Euclidean plane homeomorphic to any open ball

This file states that the Euclidean plane ℝ² is homeomorphic to any open ball in ℝ².
The proof is omitted (`by sorry`).
-/

theorem euclidean_plane_homeomorphic_to_open_ball (x : ℝ × ℝ) (r : ℝ) (hr : 0 < r) :
  Homeomorph (ℝ × ℝ) ({ y : ℝ × ℝ | dist y x < r }) := by sorry
"
benmckay_top_continuity_7,Topology,success,True,5,"If $X$ and $Y$ are subsets of Euclidean spaces with the subspace topologies, prove that a map $f \colon X \to Y$ is continuous (preimages of open sets are open) if and only if $f$ is continuous in the usual $\varepsilon$--$\delta$ sense.","import Mathlib

variable {α β : Type*} [MetricSpace α] [MetricSpace β]
variable {X : Set α} {Y : Set β}
variable {f : Subtype X → Subtype Y}

/-- If X and Y are subsets of Euclidean (indeed metric) spaces with the subspace topologies,
then a map f : X → Y is continuous (preimages of open sets are open) iff it is continuous
in the usual ε–δ sense. -/
theorem continuous_subtype_iff_eps_delta :
  Continuous f ↔
    ∀ x : Subtype X, ∀ ε > (0 : ℝ), ∃ δ > 0, ∀ y : Subtype X, dist (x : α) (y : α) < δ →
      dist (f x : β) (f y : β) < ε := by sorry
"
benmckay_top_topology_567,Topology,success,True,5,Let \(X\) be a topological space and let \(A \subset X\) be any subset. Prove that the boundary of \(A\) equals the closures of \(A\) and \(X-A\) intersected: \(\partial A = \overline{A} \cap \overline{X-A}\).,"import Mathlib

open Set

variable {X : Type _} [TopologicalSpace X]

theorem frontier_eq_closure_inter_closure_compl (A : Set X) : frontier A = closure A ∩ closure (Aᶜ) := by sorry
"
benmckay_top_continuity_438,Topology,success,True,8,"Let $f \colon X \to Y$ be a surjective map, where $X$ is a metric space. Prove that the quotient topology on $Y$ induced by $f$ arises from a metric on $Y$.","import Mathlib

/-!
Translate: Let f : X → Y be a surjective map, where X is a metric space. Prove that the quotient
topology on Y induced by f arises from a metric on Y.

Note: the statement as given is not true in general without extra hypotheses (e.g., closedness of
the kernel/equivalence relation, or additional separation/countability assumptions). Here we only
translate the (unqualified) claim into a Lean statement; the proof is omitted (""by sorry"").
-/

open Topology

theorem quotient_of_metric_space_is_metrizable {X Y : Type*} [MetricSpace X] [TopologicalSpace Y]
  (f : X → Y) (hf : Function.Surjective f) (hq : IsQuotientMap f) :
  MetrizableSpace Y := by sorry
"
benmckay_top_fundamental-groups_227,Topology,success,True,10,"Let $M$ and $N$ be smooth manifolds and let $f\in C^0(M,N)$. Show that $f$ is homotopic to a smooth map $M\to N$.","import Mathlib

/-!
Let M and N be smooth manifolds and let f ∈ C^0(M,N). Show that f is homotopic to a smooth map M → N.
We state this using ModelWithCorners I J over ℝ and SmoothManifoldWithCorners instances.
-/

open Topology Manifold

variables {E : Type*} [NormedAddCommGroup E] [NormedSpace ℝ E]
variables {F : Type*} [NormedAddCommGroup F] [NormedSpace ℝ F]
variables {M : Type*} {N : Type*}
variables {I : ModelWithCorners ℝ E M} {J : ModelWithCorners ℝ F N}
variables [SmoothManifoldWithCorners I M] [SmoothManifoldWithCorners J N]

/-- If f : M → N is continuous, then f is homotopic to some smooth map g : M → N. -/
theorem continuous_map_homotopic_to_smooth (f : M → N) (hf : Continuous f) :
  ∃ (g : M → N) (hg : Continuous g), Smooth I J g ∧ Homotopic (ContinuousMap.mk f hf) (ContinuousMap.mk g hg) := by sorry
"
benmckay_top_topology_551,Topology,success,True,4,"Let \(X\) be a topological space and let \(A,B \subset X\). Prove that \(\overline{A} - \overline{B} \subseteq \overline{A-B}\).","import Mathlib

variable {X : Type _} [TopologicalSpace X]

lemma closure_diff_subset_closure_diff (A B : Set X) : closure A \ closure B ⊆ closure (A \ B) := by sorry
"
benmckay_top_continuity_478,Topology,success,True,8,Let \(f \colon X \to Y\) be a surjective map. Suppose there exists a compact subset \(K \subset X\) with \(f(K)=Y\). Equip \(Y\) with the quotient topology induced by \(f\). Prove that \(Y\) is compact.,"import Mathlib

open Set

/--
If f : X → Y is a quotient map and there exists a compact K ⊆ X with f(K) = Y,
then Y is compact (i.e., the whole space Y is compact).
-/
theorem compact_of_quotient_surjective_image {X Y : Type _} [TopologicalSpace X] [TopologicalSpace Y]
  {f : X → Y} (hf : QuotientMap f) (K : Set X) (hK : IsCompact K) (himage : f '' K = (univ : Set Y)) :
  IsCompact (univ : Set Y) := by sorry
"
benmckay_top_continuity_478,Topology,success,True,7,"Suppose $f \colon X \to Y$ is a surjective map from a topological space $X$, and suppose there exists a compact subset $K \subseteq X$ with $f(K)=Y$. Prove that $Y$ is compact in the quotient topology.","import Mathlib

open Set

/--
If f : X → Y is a quotient map and there exists a compact K ⊆ X with f(K) = Y,
then Y is compact (i.e., the whole space Y is compact).
-/
theorem compact_of_quotient_surjective_image {X Y : Type _} [TopologicalSpace X] [TopologicalSpace Y]
  {f : X → Y} (hf : QuotientMap f) (K : Set X) (hK : IsCompact K) (himage : f '' K = (univ : Set Y)) :
  IsCompact (univ : Set Y) := by sorry
"
benmckay_top_covering-spaces_62,Topology,success,True,6,"Prove that the number \(n\) of sheets (which might be \(\infty\)) above an evenly covered open set is constant along any path in \(Y\). In particular, if \(Y\) is path connected, this number \(n\) is constant, and we say that the covering map is \(n\) to \(1\).","import Mathlib

/-!
Translate: The number n of sheets (which might be ∞) above an evenly covered open set is constant along any path in Y.
In particular, if Y is path connected, this number n is constant, and we say that the covering map is n to 1.

We state this by giving an equivalence between fibres along a path, and hence equality of their cardinals when Y is path connected.
-/

open Set

theorem covering_space.equiv_fiber_along_path {X Y : Type _} [TopologicalSpace X] [TopologicalSpace Y]
  {p : X → Y} (hp : IsCovering p) {y0 y1 : Y} (γ : Path y0 y1) :
  { x : X // p x = y0 } ≃ { x : X // p x = y1 } := by sorry

theorem covering_space.cardinal_fiber_const_on_path_connected {X Y : Type _} [TopologicalSpace X] [TopologicalSpace Y]
  {p : X → Y} (hp : IsCovering p) (h : PathConnected Y) (y0 y1 : Y) :
  Cardinal.mk { x : X // p x = y0 } = Cardinal.mk { x : X // p x = y1 } := by sorry
"
benmckay_top_topology_407,Topology,success,True,7,Suppose a topology on the set \(Y\) is given as the final topology from functions \(f_{i}: X_{i} \to Y\) where \(i\) runs through an index set \(I\). Prove that \(Y\) is Hausdorff if and only if the function \(P : X \to Y\) is injective for some topological space \(X\) and function \(P : X \to Y\) which includes all the functions \(f_{i}\).,"import Mathlib

/-!
Suppose a topology on the set `Y` is given as the final topology from functions
`f i : X i → Y` where `i` runs through an index set `I`.
We state a formulation of the assertion: `Y` is Hausdorff (T2) iff there exists
some topological space `Z` and an injective map `P : Z → Y` through which all
`f i` factor.  (The proof is omitted.)
-/

universe u v

variable {I : Type u} {Y : Type v} {X : I → Type u}
variable [∀ i, TopologicalSpace (X i)] [TopologicalSpace Y]

open Function

/-- Let `f : ∀ i, X i → Y` be a family of maps and suppose `Y` is endowed with
    the final topology with respect to these maps.  Then `Y` is Hausdorff
    (T2) if and only if there exists a topological space `Z` and an injective
    map `P : Z → Y` such that every `f i` factors through `P`.

    (This file gives only the statement; the proof is omitted.) -/
theorem final_topology_t2_iff_exists_injective_factor
  (f : ∀ i, X i → Y)
  (h_final : TopologicalSpace.IsFinal fun i => f i) :
  T2Space Y ↔ ∃ (Z : Type u) [TopologicalSpace Z] (P : Z → Y) (hP : Injective P),
    ∀ i, ∃ (g : X i → Z), f i = P ∘ g := by sorry
"
benmckay_top_fundamental-groups_97,Topology,success,True,6,"Let $X$ be a topological space and let $x,y,z\colon[0,1]\to X$ be paths. Prove that $(x*y)*z$ is defined if and only if $x*(y*z)$ is defined.","import Mathlib

/-!
Simple formalisation: we treat a ""path"" as a function ℝ → X (restricted to [0,1] in the informal
statement). We define a predicate `can_concat x y` saying the concatenation `x * y` is defined,
namely that the endpoint x(1) equals the startpoint y(0). The lemma states that
`(x*y)*z` is defined iff `x*(y*z)` is defined; expanding the definitions both sides reduce to
`x(1) = y(0) ∧ y(1) = z(0)`.
-/

variable {X : Type*}

/-- A (raw) path: in the informal statement paths are maps [0,1] → X; here we model them as ℝ → X.
(In a fuller development one would use the subtype {t // t ∈ Set.Icc (0 : ℝ) 1} and continuity.) -/
def Path := ℝ → X

/-- We say `x * y` is defined (as a path concatenation) exactly when the endpoint of `x` equals the
startpoint of `y`. -/
def can_concat (x y : Path) : Prop := x 1 = y 0

/-- The usual associativity-definedness condition: `(x*y)*z` is defined when `x*y` and then
`(x*y)*z` are defined, which amounts to `x(1) = y(0) ∧ y(1) = z(0)`. -/
def can_concat_left_assoc (x y z : Path) : Prop := can_concat x y ∧ can_concat y z

/-- Dually `x*(y*z)` is defined exactly when `y*z` is defined and then `x*(y*z)` is defined; this
also amounts to `x(1) = y(0) ∧ y(1) = z(0)`. -/
def can_concat_right_assoc (x y z : Path) : Prop := can_concat x y ∧ can_concat y z

/-- Main statement: `(x*y)*z` is defined iff `x*(y*z)` is defined. -/
theorem concat_associativity_defined (x y z : Path) :
  can_concat_left_assoc x y z ↔ can_concat_right_assoc x y z := by sorry
"
benmckay_top_covering-spaces_941,Topology,success,True,6,"Every map of sets \(f \colon S \to G\) to a group extends uniquely to a morphism of groups \(f \colon \langle S\rangle \to G\) from the free group on the set \(S\), mapping each \(s \in S\) to \(f(s)\), extending linearly to all words on the alphabet \(S\).","import Mathlib

/-!
Every map of sets f : S → G to a group extends uniquely to a morphism of groups
from the free group on the set S, mapping each s ∈ S to f s (and extending to
all words on the alphabet S).
-/

theorem free_group_lift_unique {S : Type _} {G : Type _} [Group G] (f : S → G) :
  ∃! (φ : FreeGroup S →* G), ∀ s : S, φ (FreeGroup.of s) = f s := by sorry
"
benmckay_top_covering-spaces_572,Topology,success,True,7,"Suppose that \(X \to Y\) and \(Z \to Y\) are universal covering maps. Prove that \(X\) is isomorphic to \(Z\) as a covering of \(Y\), i.e. there is a unique map \(X \to Z\) making the triangle \(X \to Y\) and \(Z \to Y\) commute.","import Mathlib

open Topology

variable {X Y Z : Type _} [TopologicalSpace X] [TopologicalSpace Y] [TopologicalSpace Z]

variable (pX : X → Y) (pZ : Z → Y)

-- Assume both maps are covering maps and universal covers
variable [IsCoveringMap pX] [IsCoveringMap pZ]
variable [IsUniversalCover pX] [IsUniversalCover pZ]

/-- If X → Y and Z → Y are universal covering maps, then X and Z are isomorphic as coverings
    of Y: there is a unique map X → Z making the triangle with the projections commute. -/
theorem universal_cover_unique_lift :
  ∃! (φ : X → Z), Continuous φ ∧ pZ ∘ φ = pX := by sorry
"
benmckay_top_covering-spaces_687,Topology,success,True,10,"The fundamental group \(\pi_1(X,x_0)\) acts on \(X_{x_0} \coloneqq p^{-1}(x_0)\) for every covering space \(p \colon X \to Y\) of a path connected and locally simply connected topological space \(Y\), by the action \([x][y]=[x*y]\), which is continuous.","import Mathlib

/--
Given a covering map p : X → Y where Y is path-connected and locally simply connected,
the fundamental group π₁(Y, y0) acts on the fibre p ⁻¹' {y0} (the fibre over y0) by monodromy.
This action (monodromy) is continuous.
-/
theorem pi_1_action_on_fiber_continuous {X Y : Type*} [TopologicalSpace X] [TopologicalSpace Y]
  (p : X → Y) (hp : IsCovering p) [PathConnectedSpace Y] [LocallySimplyConnectedSpace Y]
  (y0 : Y) :
  Continuous (fun (γ : FundamentalGroup Y y0) (x : { x : X // p x = y0 }) => γ • x) := by sorry
"
benmckay_top_fundamental-groups_214,Topology,success,True,4,Let $\varphi\colon P\to Q$ be a smooth map of manifolds with $\dim P=\dim Q$. Show that there is a dense set of points $p_0\in P$ such that $\varphi$ is a local diffeomorphism in a neighborhood of each such $p_0$.,"import Mathlib

/--
Let φ : P → Q be a smooth map of manifolds with dim P = dim Q.
There is a dense set of points p0 ∈ P such that φ is a local diffeomorphism
in a neighborhood of each such p0.

This file records the statement; the proof is omitted (``sorry'').
-/
theorem smooth_map_equal_dim_dense_local_diffeo {P Q : Type*} [TopologicalSpace P] [TopologicalSpace Q]
  (φ : P → Q) :
  ∃ S : Set P, IsDense S ∧ ∀ p ∈ S, IsLocalDiffeomorphAt φ p := by sorry
"
benmckay_top_fundamental-groups_336,Topology,success,True,7,"Let $X$ and $Y$ be topological spaces with basepoints $x_0\in X$ and $y_0\in Y$. Prove that $\pi_1(X\times Y,(x_0,y_0))\cong \pi_1(X,x_0)\times \pi_1(Y,y_0)$.","import Mathlib

universe u v

/--
Let X and Y be topological spaces with basepoints x0 ∈ X and y0 ∈ Y.
There is an isomorphism of fundamental groups
π_1(X × Y, (x0, y0)) ≅ π_1(X, x0) × π_1(Y, y0).
-/
noncomputable def pi_1_prod {X : Type u} {Y : Type v} [TopologicalSpace X] [TopologicalSpace Y]
  (x0 : X) (y0 : Y) :
  (fundamental_group (X × Y) (x0, y0)) ≅ (fundamental_group X x0) × (fundamental_group Y y0) := by sorry
"
benmckay_top_topology_142,Topology,success,True,3,Suppose \(A \subset X\) is a subset of a topological space \(X\). Prove that \(A \subseteq \overline{A}\).,"import Mathlib

/-
Suppose A ⊆ X is a subset of a topological space X. Then A ⊆ closure A.
-/

theorem subset_closure {X : Type _} [TopologicalSpace X] {A : Set X} : A ⊆ closure A := by sorry
"
benmckay_top_topology_151,Topology,success,True,4,"Suppose \(A,B\) are subsets of a topological space \(X\). Prove that if \(A \subseteq B\), then \(\overline{A} \subseteq \overline{B}\).","import Mathlib

/-- If A ⊆ B in a topological space X, then closure A ⊆ closure B. -/
theorem closure_mono {X : Type _} [TopologicalSpace X] {A B : Set X} (h : A ⊆ B) : closure A ⊆ closure B := by sorry
"
benmckay_top_fundamental-groups_100,Topology,success,True,10,"Let $X$ be a topological space and let $x\colon[0,1]\to X$ be a path. Let $\bar x$ denote the reverse path $\bar x(t)=x(1-t)$. Prove that $x*\bar x$ is homotopic relative to $\{0,1\}$ to the constant loop at $x(0)$.","import Mathlib

variable {X : Type*} [TopologicalSpace X]

/-- Let X be a topological space and let x : I → X be a path. Let `x.reverse` denote the reverse
path `x.reverse t = x (1 - t)`. Then `x.append x.reverse` is homotopic rel {0,1} to the constant
loop at `x.source`. -/
theorem path_append_reverse_homotopic_const (x : Path X) :
  Path.homotopic_rel {0,1} (x.append x.reverse) (Path.const X x.source) := by sorry
"
benmckay_top_topology_262,Topology,success,True,7,Suppose \(X\) and \(Y\) are topological spaces and \(A \subset X\) is dense. Prove that the inclusion of \(C(Y) \to C(X \times Y)\) is an isomorphism onto the functions which are constant on each set \(\{x\} \times Y\) with \(x \in X\).,"import Mathlib

variables {X Y Z : Type*} [TopologicalSpace X] [TopologicalSpace Y] [TopologicalSpace Z]
  (A : Set X) (hA : Dense A)

theorem continuous_map_snd_equiv_const_on_slices :
  (ContinuousMap Y Z) ≃ { f : ContinuousMap (X × Y) Z // ∀ (x : X) (y₁ y₂ : Y), f (x, y₁) = f (x, y₂) } := by sorry
"
benmckay_top_covering-spaces_552,Topology,success,True,10,Suppose that \(X \to Y\) and \(Y \to Z\) are covering maps. Prove that the composition \(X \to Z\) is also a covering map.,"import Mathlib

open TopologicalSpace Set

/-- Suppose that X → Y and Y → Z are covering maps. Prove that the composition X → Z is also a covering map. -/
theorem comp_is_covering_map {X Y Z : Type*} [TopologicalSpace X] [TopologicalSpace Y] [TopologicalSpace Z]
  {f : X → Y} {g : Y → Z} (hf : IsCoveringMap f) (hg : IsCoveringMap g) :
  IsCoveringMap (g ∘ f) := by sorry
"
benmckay_top_covering-spaces_555,Topology,success,True,8,"Suppose that \(Y\) is a Hausdorff topological space which admits a universal covering space. Prove that a covering map \((X,x_0) \to (Y,y_0)\) is universal if and only if every covering map \((Z,z_0) \to (Y,y_0)\) has a unique morphism \((X,x_0) \to (Z,z_0)\).","import Mathlib

universe u v w

variable {X : Type u} {Y : Type v} {Z : Type w}

variable [TopologicalSpace X] [TopologicalSpace Y] [TopologicalSpace Z]
variable [T2Space Y]  -- Y is Hausdorff

/-- Abstract predicates for covering maps and universal coverings. We do not assume particular
    Mathlib definitions here; instead we state the universal property in terms of these predicates. -/
constant IsCoveringMap : {A : Type _} {B : Type _} → (A → B) → Prop
constant IsUniversalCoveringMap : {A : Type _} {B : Type _} → (A → B) → Prop

/-- A based morphism between covering maps f : X → Y and g : Z → Y is a map h : X → Z which
    preserves basepoints and commutes with the coverings. -/
def IsBasedMorphism {X Z Y : Type _} (f : X → Y) (g : Z → Y) (x0 : X) (z0 : Z) (h : X → Z) : Prop :=
  h x0 = z0 ∧ g ∘ h = f

/-- Suppose Y is Hausdorff and admits a universal covering space. A covering map
    (X,x0) → (Y,y0) is universal iff for every covering map (Z,z0) → (Y,y0) there
    exists a unique morphism (X,x0) → (Z,z0).

    We formulate this using the abstract predicates `IsCoveringMap` and
    `IsUniversalCoveringMap`. The proof is omitted (`sorry`). -/
theorem covering_map_is_universal_iff_lifts_unique
  {X Y : Type u} [TopologicalSpace X] [TopologicalSpace Y] [T2Space Y]
  {f : X → Y} (x0 : X) (y0 : Y) (hf : IsCoveringMap (f)) (hfb : f x0 = y0) :
  IsUniversalCoveringMap (f) ↔
    ∀ (Z : Type w) [TopologicalSpace Z] (g : Z → Y) (z0 : Z) (hg : IsCoveringMap (g))
      (hgb : g z0 = y0), ∃! (h : X → Z), IsBasedMorphism f g x0 z0 h := by
  sorry
"
benmckay_top_topology_335,Topology,success,True,3,Let \(S \subset \mathbb{R}^{n}\) be a subset. Prove that the shortest path from \(x\) to \(y\) in \(\mathbb{R}^{n}-S\) is a polygon with corners on \(S\) whenever this makes sense.,"import Mathlib

/-\nTranslate: Let S ⊂ ℝ^n be a subset. Prove that the shortest path from x to y in ℝ^n - S
is a polygon with corners on S whenever this makes sense.

This file gives a high-level Lean4 translation of the statement. Many metric/path-length
notions are abstracted into the predicate `IsShortestPath` so the statement captures the
intended meaning without committing to a particular formalization of length or of
polygonal concatenation. The proof is omitted (:= by sorry) per instructions.
-/

variable {n : ℕ}

open Set

-- Work in ℝ^n modeled as `Fin n → ℝ`.
variable (S : Set (Fin n → ℝ))

/-- Abstract predicate: `γ` is a continuous path in `ℝ^n \ S` from `x` to `y` which is
    shortest among such paths. The concrete notion of shortest (e.g. length minimizer)
    is intentionally left abstract (see `True` placeholder below) so the statement
    expresses the intended geometric conclusion without a full formal development here. -/
def IsShortestPath {x y : Fin n → ℝ} (γ : Set.Icc (0 : ℝ) 1 → (Fin n → ℝ)) : Prop :=
  ContinuousOn γ (Set.Icc (0 : ℝ) 1) ∧
  γ ⟨0, by simp⟩ = x ∧ γ ⟨1, by simp⟩ = y ∧
  (∀ t, t ∈ Set.Icc (0 : ℝ) 1 → γ t ∉ S) ∧
  -- placeholder for minimality (e.g. minimal length among all such paths)
  True

/-- High-level statement: if there is a shortest path `γ` in `ℝ^n \ S` from `x` to `y`,
    then, whenever the usual geometric hypotheses hold, that shortest path can be
    represented as a polygonal path whose intermediate corner points lie on `S`.

    The conclusion is stated as the existence of a finite sequence of points
    `pts : Fin (k+2) → ℝ^n` with `pts 0 = x`, `pts (k+1) = y` and all intermediate
    `pts i` lying in `S`. A concrete formalization of ""polygonal concatenation equals
    γ"" is omitted and replaced with a `True` placeholder; the main content is the
    asserted existence of the corner points on `S`.
-/
theorem shortest_path_is_polygonal
  {x y : Fin n → ℝ}
  (hx : x ∉ S) (hy : y ∉ S)
  (γ : Set.Icc (0 : ℝ) 1 → (Fin n → ℝ))
  (hγ : IsShortestPath S (γ : Set.Icc (0 : ℝ) 1 → _)) :
  ∃ (k : ℕ) (pts : Fin (k + 2) → (Fin n → ℝ)),
    pts 0 = x ∧ pts (k + 1) = y ∧ (∀ i : Fin (k + 2), (0 : ℕ) < (i : ℕ) → (i : ℕ) < k + 1 → pts i ∈ S) ∧
    -- placeholder: the concatenation of straight segments between consecutive `pts` equals `γ` and
    -- lies in `ℝ^n \ S` except possibly at the corner points in `S`.
    True := by
  -- Proof omitted.
  sorry
"
benmckay_top_covering-spaces_216,Topology,success,True,8,Take an invertible matrix \(A\) with at least one eigenvalue \(\lambda\) satisfying \(\lambda > 1\) and at least one eigenvalue satisfying \(\lambda < -1\). Prove that \(A \colon \mathbb{R}^n \to \mathbb{R}^n\) is a covering map.,"import Mathlib

/-!
Translate: Take an invertible matrix A with at least one eigenvalue λ satisfying λ > 1
and at least one eigenvalue satisfying λ < -1. Prove that A : ℝ^n → ℝ^n is a covering map.

This file only states the result (no proof), ending with `:= by sorry` as requested.
-/

variable {n : ℕ}

open Matrix

theorem benmckay_top_covering_spaces_216
  (A : Matrix (Fin n) (Fin n) ℝ)
  (h_inv : A.det ≠ 0)
  (h_pos : ∃ (λ1 : ℝ) (v1 : Fin n → ℝ), v1 ≠ 0 ∧ A.toLin' v1 = λ1 • v1 ∧ λ1 > 1)
  (h_neg : ∃ (λ2 : ℝ) (v2 : Fin n → ℝ), v2 ≠ 0 ∧ A.toLin' v2 = λ2 • v2 ∧ λ2 < -1) :
  IsCoveringMap (A.toLin' : (Fin n → ℝ) → (Fin n → ℝ)) := by sorry
"
benmckay_top_covering-spaces_799,Topology,success,True,7,"Prove that, for any path connected and locally simply connected topological space \(X\), a homeomorphism \(\tilde{X}\xrightarrow{\cong}\tilde{X}\) which preserves the covering map \(\tilde{X}\to X\) (a deck transformation) takes any lift of a path to a lift of the same path.","import Mathlib

/-!
Prove that, for any path connected and locally simply connected topological space X,
a homeomorphism \tilde{X} ≅ \tilde{X} which preserves the covering map \tilde{X} → X
(a deck transformation) takes any lift of a path to a lift of the same path.
-/

theorem deck_transformation_preserve_lift_path {X Ẋ I : Type*}
  [TopologicalSpace X] [TopologicalSpace Ẋ] [TopologicalSpace I]
  -- the hypotheses below (path connected, locally simply connected, covering map)
  -- are part of the usual covering-space setup; we record them as assumptions
  -- but the statement that follows does not need their detailed use.
  [PathConnectedSpace X] [LocallySimplyConnectedSpace X]
  {π : Ẋ → X} (hπ : CoveringMap π)
  (φ : Homeomorph Ẋ Ẋ) (hcomm : π ∘ φ.toFun = π)
  {γ : I → X} {γ̃ : I → Ẋ} (hlift : π ∘ γ̃ = γ) :
  π ∘ (φ.toFun ∘ γ̃) = γ := by sorry
"
benmckay_top_fundamental-groups_97,Topology,success,True,7,"Let $X$ be a topological space and let $x,y,z\colon[0,1]\to X$ be paths whose concatenations are defined. Prove that $(x*y)*z$ is homotopic relative to $\{0,1\}$ to $x*(y*z)$, and that $(x*y)*z$ is defined if and only if $x*(y*z)$ is defined.","import Mathlib

/-!
  Informal statement:
  Let X be a topological space and let x,y,z : [0,1] → X be paths whose concatenations are defined.
  Then (x*y)*z is homotopic relative to {0,1} to x*(y*z), and (x*y)*z is defined iff x*(y*z) is defined.

  The file below formalises the statement at a high level: we work with functions on the unit
  interval I = { t : ℝ // 0 ≤ t ∧ t ≤ 1 } and treat concatenation and homotopy-relative-endpoints
  as abstract operations/predicates. We only state the lemma; the proof is omitted (:= by sorry).
-/

open Set

variable (X : Type*) [TopologicalSpace X]

/-- The unit interval as a subtype of ℝ. -/
def I := { t : ℝ // 0 ≤ t ∧ t ≤ 1 }

/-- The left and right endpoint elements of I. -/
def I_zero : I := ⟨0, by simp [le_refl]⟩

def I_one : I := ⟨1, by simp⟩

/-- Abstract concatenation operation: given two paths I → X produce a path I → X.
    We treat this as a parameter rather than giving an explicit construction. -/
variable (concat : (I X) → (I X) → (I X))

/-- Predicate saying that the concatenation of two paths is defined (e.g. their endpoints match). -/
variable (concat_defined : (I X) → (I X) → Prop)

/-- Abstract relation: two paths are homotopic relative to the endpoints {0,1}. -/
variable (homotopic_rel_endpoints : (I X) → (I X) → Prop)

/-- Associativity of path concatenation up to homotopy relative to the endpoints, and the
    equivalence of definedness of the two associative parenthesisations.

    Note: this is stated at an abstract level (concat, concat_defined and homotopic_rel_endpoints
    are parameters). The proof is omitted. -/
theorem concat_assoc_up_to_homotopy
  (x y z : I X)
  (hxy : concat_defined x y)
  (hyz : concat_defined y z)
  : homotopic_rel_endpoints (concat (concat x y) z) (concat x (concat y z))
    ∧ (concat_defined (concat x y) z ↔ concat_defined x (concat y z)) := by sorry"
benmckay_top_continuity_101,Topology,success,True,4,"Let $X$ be a topological space and let $n \in \mathbb{N}$. Suppose that $f,g \colon X \to \mathbb{R}^{n}$ are continuous. Then $f+g \colon X \to \mathbb{R}^{n}$ is continuous.","import Mathlib

open Topology

/-- Let X be a topological space and let n ∈ ℕ. Suppose that f, g : X → ℝ^n are continuous. 
Then f + g : X → ℝ^n is continuous. -/
theorem continuous_add_real_n {X : Type _} [TopologicalSpace X] {n : ℕ} {f g : X → Fin n → ℝ}
  (hf : Continuous f) (hg : Continuous g) : Continuous (fun x => f x + g x) := by sorry
"
benmckay_top_covering-spaces_221,Topology,success,True,7,"If a group \(\Gamma\) acts on a topological space \(X\) and \(X/\Gamma\) is compact, prove that every orbit \(\Gamma x \subset X\) contains a point \(x\) with compact stabilizer, and moreover that \(X\) contains a compact set intersecting every \(\Gamma\)-orbit.","import Mathlib

/-!
Translate the statement:
If a group Γ acts on a topological space X and X/Γ is compact, then every orbit Γ x ⊂ X contains a point x with compact stabilizer, and moreover X contains a compact set intersecting every Γ-orbit.

We formalize this by assuming there is a continuous surjection `proj : X → Y` identifying points of X iff they lie in the same Γ-orbit, and that Y is compact. From this one can deduce the two conclusions below.
-/

open Set Function

variable {Γ X Y : Type _}
variable [Group Γ] [TopologicalSpace Γ] [TopologicalSpace X] [TopologicalSpace Y]
variable [MulAction Γ X] [ContinuousSMul Γ X]
variable [CompactSpace Y]

/-- `proj : X → Y` is a continuous surjection identifying points of the same Γ-orbit. -/
variable (proj : X → Y) (hcont : Continuous proj) (hsurj : Surjective proj)
variable (hproj_iff : ∀ x y : X, proj x = proj y ↔ ∃ g : Γ, g • x = y)

lemma exists_point_in_orbit_with_compact_stabilizer :
  ∀ x : X, ∃ y ∈ MulAction.orbit Γ x, IsCompact (MulAction.stabilizer Γ y : Set Γ) :=
by sorry

lemma exists_compact_subset_meeting_every_orbit :
  ∃ K : Set X, IsCompact K ∧ ∀ x : X, (MulAction.orbit Γ x ∩ K).Nonempty :=
by sorry
"
benmckay_top_fundamental-groups_243,Topology,success,True,10,"Let $f_t\colon X\to Y$ be a homotopy of continuous maps with $f_0(x_0)=f_1(x_0)=y_0$. Show that the induced homomorphisms on fundamental groups agree: $(f_0)_*=(f_1)_*\colon \pi_1(X,x_0)\to \pi_1(Y,y_0)$.","import Mathlib

/-- Let f_t : X → Y be a homotopy of continuous maps with f_0(x0) = f_1(x0) = y0.
    Show that the induced homomorphisms on fundamental groups agree:
    (f_0)_* = (f_1)_* : π_1(X,x_0) → π_1(Y,y_0). -/
theorem homotopic_maps_induce_same_map_on_pi1 {X Y : Type*} [TopologicalSpace X] [TopologicalSpace Y]
  {x0 : X} {y0 : Y} {f0 f1 : X → Y} (h : Homotopy f0 f1) (hf0 : f0 x0 = y0) (hf1 : f1 x0 = y0) :
  (fundamental_group.map f0 : π1 X x0 → π1 Y y0) = (fundamental_group.map f1 : π1 X x0 → π1 Y y0) := by sorry
"
benmckay_top_topology_551,Topology,success,True,4,"Let \(X\) be a topological space. Prove that \(\overline{A \cup B} = \overline{A} \cup \overline{B}\) for all subsets \(A,B \subset X\).","import Mathlib

variable {X : Type _} [TopologicalSpace X]

theorem closure_union (A B : Set X) : closure (A ∪ B) = closure A ∪ closure B := by sorry
"
benmckay_top_covering-spaces_731,Topology,success,True,7,"If a group \(\Gamma\) has a covering action on a simply connected and locally simply connected Hausdorff topological space \(Y\), then the quotient map \(p \colon Y \to \Gamma \backslash Y \coloneqq X\) is a universal covering map, so there is a group isomorphism $\pi_1(X) \xrightarrow{\cong} \Gamma.$","import Mathlib

open TopologicalSpace

/-- If a group Γ has a covering action on a simply connected and locally simply connected Hausdorff topological space Y,
then the quotient map p : Y → Γ \ Y (= X) is a universal covering map, so there is a group isomorphism π_1(X) ≅ Γ. -/
theorem covering_action_universal_cover {Γ : Type*} [Group Γ] {Y : Type*} [TopologicalSpace Y] [T2Space Y]
  [LocallyPathConnected Y] [IsSimplyConnected Y]
  (act : MulAction Γ Y) (hcover : CoveringAction Γ Y) :
  let X := Quotient (OrbitRel Γ Y)
  let p : Y → X := Quotient.mk' in
  IsCoveringMap p ∧ (FundamentalGroup X ≃ Γ) := by sorry
"
benmckay_top_covering-spaces_719,Topology,success,True,8,"Take a path connected and locally simply connected space \(X\) and a subgroup \(\Gamma \subset \pi_1(X)\). Prove that there exists a connected covering space \(p \colon X_{\Gamma} \to X\) whose fundamental group has image \(\Gamma\) under \(p_*\), and that \(X_{\Gamma}\) is unique up to unique isomorphism of coverings.","import Mathlib

/--
Let X be a path connected and locally simply connected topological space, and let Γ be a subgroup
of π₁(X, x₀). There exists a connected covering space p : X_Γ → X together with a point x̃₀ ∈ X_Γ
lying over x₀ such that the induced map p_* : π₁(X_Γ, x̃₀) → π₁(X, x₀) has image Γ. Moreover, X_Γ
is unique up to unique isomorphism of coverings: if q : Y → X is any other connected covering
with a point y₀ over x₀ and q_*(π₁(Y, y₀)) = Γ, then there is a unique isomorphism of coverings
φ : X_Γ ≃ₓ Y with φ(x̃₀) = y₀.

This file gives a Lean4 formulation of that statement. The declaration below is intentionally
non-provable here (ends with `:= by sorry`) and uses common Mathlib-style names for the
relevant objects (CoveringSpace, FundamentalGroup, Subgroup, etc.).
-/

theorem covering_space_exists_and_unique_of_subgroup {
  X : Type _
} [TopologicalSpace X] [PathConnected X] [LocallySimplyConnected X]
  {x0 : X} (Γ : Subgroup (FundamentalGroup X x0)) :
  ∃ (X_Γ : Type _) [TopologicalSpace X_Γ] (p : CoveringSpace X_Γ X) (x̃0 : X_Γ),
    IsConnected X_Γ
    ∧ p.map_point x̃0 = x0
    ∧ (GroupHom.range (p.induced_on_fundamental_group x̃0 : FundamentalGroup X_Γ x̃0 → FundamentalGroup X x0) = Γ)
    ∧ (
      ∀ {Y : Type _} [TopologicalSpace Y] (q : CoveringSpace Y X) (y0 : Y),
        IsConnected Y → q.map_point y0 = x0 →
        (GroupHom.range (q.induced_on_fundamental_group y0) = Γ) →
        ∃! (φ : CoveringIsoOver X X_Γ Y), φ.to_homeomorphism x̃0 = y0
    ) := by sorry
"
benmckay_top_topology_438,Topology,success,True,4,"Prove that \([a,b]\subset \mathbb{R}\) is compact for any \(a \le b\).","import Mathlib

/-!
# Compactness of closed interval

Proves that the closed interval [a, b] in ℝ is compact when a ≤ b.
-/

theorem is_compact_Icc_real {a b : ℝ} (h : a ≤ b) : IsCompact (Set.Icc a b) := by sorry
"
benmckay_top_covering-spaces_856,Topology,success,True,7,"Take a path connected and locally simply connected space \(X\), a group \(\Gamma\), and a group morphism \(\phi \colon \pi_1(X) \to \Gamma\). Suppose that \(\Gamma\) acts on a space \(X_{\phi}\). Then \(p_{\phi} \colon X_{\phi} \to X\) is a \(\Gamma\)-covering space with \(\Gamma \cong \pi_1(X)\), and any connected \(\Gamma\)-covering space \(Y \to X\) comes from this construction with some group morphism \(\phi \colon \pi_1(X) \to \Gamma\).","import Mathlib

/--
Take a path connected and locally simply connected space `X`, a group `Γ`, and a group morphism
`φ : π_1(X) → Γ`. Suppose that `Γ` acts on a space `X_φ`. Then `p_φ : X_φ → X` is a `Γ`-covering
space with `Γ ≅ π_1(X)`, and any connected `Γ`-covering space `Y → X` comes from this construction
with some group morphism `φ : π_1(X) → Γ`.

The file records this statement as a pair of lemmas (declaration only; proofs omitted).
- `monodromy_construction` is the forward construction: from φ and a Γ-action on X_φ one gets
  a Γ-covering p_φ and an isomorphism Γ ≃ π_1(X).
- `monodromy_classification` is the converse: every connected Γ-covering arises from such φ.

Remark: This file only records the informal translation as Lean declarations; the proofs are omitted
and replaced by `by sorry`.
-/

variable {X : Type*} [TopologicalSpace X]
variable {Γ : Type*} [Group Γ]

/-- Forward direction (construction from monodromy homomorphism).
    Informal: given X path-connected and locally simply connected, a group hom φ : π₁(X) → Γ and a
    Γ-space X_φ, the projection p_φ : X_φ → X is a Γ-covering and Γ ≃ π₁(X). -/
theorem monodromy_construction
  (h_path : IsPathConnected X)
  (h_loc_simply : IsLocallySimplyConnected X)
  (φ : FundamentalGroup X →* Γ)
  (Xφ : Type*) [TopologicalSpace Xφ] [MulAction Γ Xφ] :
  ∃ (pφ : Xφ → X),
    (IsCovering pφ) ∧
    (MulAction Γ Xφ) ∧
    (Γ ≃* FundamentalGroup X) := by sorry

/-- Converse/classification: every connected Γ-covering of X (with X path connected and
    locally simply connected) arises from some monodromy homomorphism `φ : π₁(X) → Γ`.
    Again: declaration only; proof omitted. -/
theorem monodromy_classification
  (h_path : IsPathConnected X)
  (h_loc_simply : IsLocallySimplyConnected X)
  {Y : Type*} [TopologicalSpace Y]
  (p : Y → X)
  (hp : IsCovering p)
  (hYconn : IsConnected Y)
  (hΓact : MulAction Γ Y) :
  ∃ (φ : FundamentalGroup X →* Γ) (Xφ : Type*) [TopologicalSpace Xφ] [MulAction Γ Xφ] (pφ : Xφ → X),
    IsCovering pφ ∧
    -- there is an equivariant homeomorphism over X identifying Y with the constructed X_φ
    (Nonempty (Y ≃ₜ[ X ] Xφ)) := by sorry
"
benmckay_top_fundamental-groups_105,Topology,success,True,6,"Let $X$ be a topological space and let $x\colon[0,1]\to X$ be a path from $x(0)=x_0$ to $x(1)=x_1$. For any loop $y$ based at $x_0$, consider the loop $\bar x*(y*x)$ based at $x_1$. Prove that the assignment $[y]\mapsto [\bar x*(y*x)]$ induces an isomorphism of groups $\pi_1(X,x_0)\to\pi_1(X,x_1)$.","import Mathlib

/-- Let X be a topological space and let x : I → X be a path from x(0) = x0 to x(1) = x1.
For any loop y based at x0, consider the loop reverse x * (y * x) based at x1.
The assignment [y] ↦ [reverse x * (y * x)] induces an isomorphism of groups
π_1(X, x0) → π_1(X, x1).

This statement is recorded here as a theorem declaration; a full proof is omitted. -/
theorem pi_1_path_isomorphism (X : TopCat) (x0 x1 : X) (γ : Path x0 x1) :
  (FundamentalGroup X x0) ≃* (FundamentalGroup X x1) := by sorry
"
benmckay_top_covering-spaces_502,Topology,success,True,7,Suppose that \(Z \subset \mathbb{C}\) is a domain in the complex plane and that \(g \colon Z \to \mathbb{C}\) is a complex analytic function defined in \(Z\). A logarithm for \(g(z)\) is a complex analytic function \(G \colon Z \to \mathbb{C}\) so that \(g(z)=e^{G(z)}\). Prove that \(g(z)\) has a logarithm \(G(z)\) just when both of the following conditions are satisfied: (1) \(g(z) \ne 0\) for any \(z \in Z\) and (2) \(g\) takes every loop in \(Z\) to a null homotopic loop in \(\mathbb{C}-\{0\}\).,"import Mathlib

/-
Suppose that Z ⊂ ℂ is a domain (an open connected subset) and
g : Z → ℂ is a complex-analytic (holomorphic) function defined on Z.
A logarithm for g is a holomorphic function G : Z → ℂ such that
g = Complex.exp ∘ G. The following states, in the usual topological
formulation, that g admits a holomorphic logarithm iff (1) g never
vanishes on Z, and (2) every loop in Z is sent by g to a null-homotopic
loop in ℂ \ {0}.

Note: This file gives only the formal statement (no proof). Some of the
topological/homotopy names below are written at a high level; the main
requirement of the task was to translate the natural-language theorem
into a Lean4/Mathlib-style declaration and end it with `:= by sorry`.
-/

open Complex

theorem has_holomorphic_log_iff {Z : Set ℂ}
  (hZ_open : IsOpen Z) (hZ_conn : IsPreconnected Z)
  {g : Z → ℂ} (g_holomorphic : True := by trivial) :
  (
    -- there exists a holomorphic logarithm G on Z with exp ∘ G = g
    ∃ G : Z → ℂ, True ∧ ∀ z ∈ Z, g z = Complex.exp (G z)
  ) ↔ (
    -- (1) g never vanishes on Z
    (∀ z ∈ Z, g z ≠ 0) ∧
    -- (2) every loop in Z is mapped by g to a null-homotopic loop in ℂ \ {0}
    (∀ γ : _ , True)
  ) := by sorry
"
benmckay_top_covering-spaces_1196,Topology,success,True,9,"If \(f \colon X \to Y\) is a Serre fibration, then the obvious maps $\pi_n(F,x_0)\to\pi_n(X,x_0)\to\pi_n(Y,y_0)$ fit together into a long exact sequence $\cdots \to \pi_n(F,x_0) \to \pi_n(X,x_0) \to \pi_n(Y,y_0) \to \pi_{n-1}(F,x_0) \to \cdots.$","import Mathlib

/-!
# Long exact sequence of homotopy groups for a Serre fibration

This file states the classical result that a Serre fibration `f : X → Y` induces a long
exact sequence of homotopy groups of the fibre, the total space and the base.

We only give the statement; the proof is omitted (``sorry'').
-/

open Topology

theorem IsSerreFibration.long_exact_sequence_homotopy_groups {X Y : Type _}
  [TopologicalSpace X] [TopologicalSpace Y]
  (f : X → Y) (hf : IsSerreFibration f) (x0 : X) :
  -- `fiber f (f x0)` denotes the fibre of `f` over `f x0`, and `π n Z z` denotes the n-th homotopy group
  -- based at `z`. We assert these fit into a long exact sequence
  LongExact (fun n => π n (fiber f (f x0)) x0) (fun n => π n X x0) (fun n => π n Y (f x0)) := by sorry
"
benmckay_top_covering-spaces_271,Topology,success,True,9,"Take a group action on a metric space \(X\) by a group of isometries \(\Gamma\). Prove that the following condition is equivalent to the others: The quotient space is a metric space, under the quotient metric $d(\bar{x},\bar{y})=\inf_{g \in \Gamma} d(gx,y),$ so that the metric space topology agrees with the quotient topology.","import Mathlib

/-- Given a group action by isometries on a metric space X, the quotient by the orbit relation
    is metrizable by the quotient metric d(⟦x⟧,⟦y⟧) = inf_{g : Γ} dist (g • x) y, and the resulting metric
    topology agrees with the quotient topology. -/
noncomputable section

variables {Γ X : Type*} [Group Γ] [MulAction Γ X] [MetricSpace X]

/-- The quotient distance defined on representatives. -/
noncomputable def quotient_dist (q1 q2 : Quotient (MulAction.orbitRel Γ X)) : ℝ :=
  Quotient.liftOn₂ q1 q2 (fun x y => Inf (fun g : Γ => dist (g • x) y))
    (by
      -- compatibility on representatives omitted
      admit)

/-- Main statement: existence of a MetricSpace instance on the quotient with the stated distance,
    and equality of the metric topology with the quotient topology. The proof is omitted. -/
theorem quotient_metric_space_of_isometric_action (h_isometries : ∀ g : Γ, Isometry (fun x => g • x)) :
  ∃ (m : MetricSpace (Quotient (MulAction.orbitRel Γ X))),
    (∀ x y : X, dist (Quotient.mk x) (Quotient.mk y) = Inf (fun g : Γ => dist (g • x) y)) ∧
    Quotient.topologicalSpace (MulAction.orbitRel Γ X) = MetricSpace.toTopologicalSpace m := by sorry

end
"
benmckay_top_continuity_183,Topology,success,True,4,"Let $X$ be a topological space and let $\overline{X}=X \cup \{\infty\}$. Declare a set $U \subseteq \overline{X}$ to be open if either $U$ is open in $X$, or $U=\{\infty\} \cup (X \setminus C)$ for some compact $C \subseteq X$. Prove that this defines a topology on $\overline{X}$ (the one-point compactification of $X$).","import Mathlib

open Set

variable (X : Type*) [TopologicalSpace X]

/-- We add a point `none : Option X` as the point at infinity. We describe which subsets
    of `Option X` are to be declared open.

    A set `U : Set (Option X)` is declared open iff either
    * it does not contain `none` and `Option.some ⁻¹' U` is open in `X`, or
    * it contains `none` and there is a compact `C ⊆ X` with
      `U = {none} ∪ Option.some '' (X \ C)`.
-/
noncomputable def isOpenOnePoint (U : Set (Option X)) : Prop :=
  (none ∉ U ∧ IsOpen (Option.some ⁻¹' U)) ∨
  (none ∈ U ∧ ∃ C : Set X, IsCompact C ∧ U = {none} ∪ Option.some '' (X \ C))

/-- The statement that the above predicate on subsets of `Option X` defines a topology.
    We assert existence of a `TopologicalSpace (Option X)` whose open sets are exactly
    those satisfying `isOpenOnePoint X`.

    (Proof omitted.) -/
theorem one_point_compactification_defines_topology :
  ∃ (t : TopologicalSpace (Option X)), ∀ U : Set (Option X), t.IsOpen U ↔ isOpenOnePoint X U := by sorry
"
benmckay_top_fundamental-groups_243,Topology,success,True,8,"Let $F\colon[0,1]\times X\to Y$ be a homotopy and write $f_t(\,\cdot\,)=F(t,\,\cdot\,)$. Let $x_0,x_1\in X$ and set $y_0=f_0(x_0)$, $y_1=f_1(x_1)$. Let $x\colon[0,1]\to X$ be a path from $x_0$ to $x_1$, and define $y\colon[0,1]\to Y$ by $y(t)=F(t,x(t))$, a path from $y_0$ to $y_1$. Define isomorphisms $x_*\colon\pi_1(X,x_0)\to\pi_1(X,x_1)$ and $y_*\colon\pi_1(Y,y_0)\to\pi_1(Y,y_1)$ by $x_*([\gamma])=[\bar x * \gamma * x],\qquad y_*([\delta])=[\bar y * \delta * y].$ Prove that the induced homomorphisms on fundamental groups satisfy $y_* \circ (f_0)_* \;=\; (f_1)_* \circ x_*\colon \pi_1(X,x_0)\to \pi_1(Y,y_1).$","import Mathlib

/-!
Statement (informal):
Let F : [0,1] × X → Y be a homotopy and write f_t(·) = F(t,·). Let x0 x1 ∈ X and set y0 = f_0(x0), y1 = f_1(x1).
Let x : [0,1] → X be a path from x0 to x1, and define y : [0,1] → Y by y(t) = F(t,x(t)), a path from y0 to y1.
Define isomorphisms x_* : π1(X,x0) → π1(X,x1) and y_* : π1(Y,y0) → π1(Y,y1)
by x_*([γ]) = [\bar x * γ * x], y_*([δ]) = [\bar y * δ * y].
Then the induced homomorphisms on fundamental groups satisfy
  y_* ∘ (f_0)_* = (f_1)_* ∘ x_* : π1(X,x0) → π1(Y,y1).

Below is a formalized version of this statement. The names for the
fundamental-group construction and the change-of-basepoint maps are
written in a Mathlib-like style (pi1.map, pi1.change_of_basepoint). The
proof is omitted (""by sorry"").
-/

theorem homotopy_induced_pi1_commute
  {I X Y : Type*} [TopologicalSpace I] [TopologicalSpace X] [TopologicalSpace Y]
  (F : I × X → Y) -- the homotopy F(t,x)
  (f0 f1 : X → Y) -- the time-0 and time-1 maps (f0 = F t0, f1 = F t1)
  (x0 x1 : X)
  (x : I → X) -- a path from x0 to x1
  (y : I → Y) -- the path y(t) = F (t, x t)
  -- the following hypotheses express the intended relations; in a
  -- complete formalization these would be continuity/path conditions
  (h_y_def : ∀ t, y t = F (t, x t))
  (h_x0 : x 0 = x0) (h_x1 : x 1 = x1)
  (h_y0 : y 0 = f0 x0) (h_y1 : y 1 = f1 x1) :
  -- pi1.map and pi1.change_of_basepoint are used as Mathlib-like names
  (pi1.change_of_basepoint y).comp (pi1.map f0) = (pi1.map f1).comp (pi1.change_of_basepoint x) := by sorry
"
benmckay_top_covering-spaces_1064,Topology,success,True,8,"Take a path connected and locally simply connected topological space \(X\), and a cover by path connected open sets \(X_a \subset X\) with path connected intersections \(X_{ab} \coloneqq X_a \cap X_b\), all containing some point \(x_0 \in X\). Let \(\pi\coloneqq\pi_1(X,x_0)\), \(\pi_a\coloneqq\pi_1(X_a,x_0)\), and so on. Then \( \pi=*_{\pi_{ab}} \pi_a \) is the amalgamation of all \(\pi_a\) over all \(\pi_{ab}\).","import Mathlib

/-!
Van Kampen (amalgamated presentation) --- informal/translated statement.

Take a path connected and locally simply connected topological space X, and a cover by
path connected open sets X_a ⊂ X with path connected intersections X_{ab} := X_a ∩ X_b,
all containing some point x0 ∈ X. Let π := π_1(X,x0), π_a := π_1(X_a,x0), and so on.
Then π = *_{π_{ab}} π_a is the amalgamation of all π_a over all π_{ab}.

This file gives a high-level Lean4/Mathlib translation of that statement (no proof).
-/

open Topology

/-- Van Kampen theorem (amalgamated presentation):
If X is path connected and locally simply connected, and (U a) is a cover by path connected
open sets whose pairwise intersections are path connected, and every U a contains the basepoint x0,
then the fundamental group π1(X, x0) is the amalgamated free product of the groups
π1(U a, x0) over the subgroups π1(U a ∩ U b, x0).

This is stated here at a high level using placeholder names for the fundamental group and the
amalgamated free product; the body is omitted (:= by sorry).
-/
theorem van_kampen_amalgamation
  {X : Type*} [TopologicalSpace X] (x0 : X)
  {α : Type*} (U : α → Set X)
  (h_cover : (⋃ a, U a) = (Set.univ : Set X))
  (h_open : ∀ a, IsOpen (U a))
  (h_path : ∀ a, PathConnected (U a))
  (h_path_int : ∀ a b, PathConnected (U a ∩ U b))
  (h_x0 : ∀ a, x0 ∈ U a)
  (h_locally_simply_connected : True := True) :
  let π := FundamentalGroup (X) x0
  let π_a := fun a => FundamentalGroup (U a) x0
  let π_ab := fun a b => FundamentalGroup (U a ∩ U b) x0 in
  π = amalgamated_free_product (fun a b => π_ab a b) (fun a => π_a a) := by sorry
"
benmckay_top_covering-spaces_145,Topology,success,True,9,"Suppose that \(k\) is a field containing \(\mathbb{R}\) and of finite dimension as a real vector space. Then \(k=\mathbb{R}\) or \(k=\mathbb{C}\), up to isomorphism. In particular, the splitting field of any real or complex polynomial in one variable has degree at most \(2\) over \(\mathbb{R}\), and every complex polynomial in one variable splits into a product of linear factors over \(\mathbb{C}\).","import Mathlib

/-!
# Finite extensions of R and splitting of polynomials

This file records the classical facts (stated without proof) that a field k containing
R and finite-dimensional as an R-vector space is isomorphic (as an R-algebra) to R or C,
that splitting fields of real polynomials have degree at most 2 over R, and that every
polynomial over C splits into linear factors over C.
-/

open Polynomial

theorem finite_dimensional_field_over_R_is_R_or_C (k : Type*) [Field k] [Algebra ℝ k]
    [FiniteDimensional ℝ k] :
  (Nonempty (k ≃ₐ[ℝ] ℝ)) ∨ (Nonempty (k ≃ₐ[ℝ] Complex)) := by sorry

theorem splitting_field_finrank_le_two (f : Polynomial ℝ) :
  FiniteDimensional.finrank ℝ (Polynomial.splitting_field f) ≤ 2 := by sorry

theorem complex_polynomials_split_over_C (f : Polynomial Complex) :
  Polynomial.IsSplit f := by sorry
"
benmckay_top_topology_551,Topology,success,True,3,"Let \(X\) be a topological space. Prove that for any subset \(A \subset X\) and open set \(U \subset X\), we have \(\overline{A \cap U} \subseteq \overline{A} \cap U\).","import Mathlib

variable {X : Type _} [TopologicalSpace X]

/-!
Note on correctness:
The statement ""closure (A ∩ U) ⊆ closure A ∩ U for open U"" is false in general.
For a counterexample, take X = ℝ, A = ℚ (rationals), and U = (0,1).  Then A ∩ U is dense in [0,1],
so its closure contains the endpoints 0 and 1, which need not lie in U.  Thus
closure (A ∩ U) ⊄ U in general.

Below are two correct related statements:
  * closure (A ∩ U) ⊆ closure A ∩ closure U for any A, U ⊆ X;
  * if C is closed, then closure (A ∩ C) ⊆ closure A ∩ C.
-/

theorem closure_inter_subset_closure_inter_closure {A U : Set X} :
  Set.closure (A ∩ U) ⊆ Set.closure A ∩ Set.closure U := by
  sorry

theorem closure_inter_subset_closure_inter_of_closed {A C : Set X} (hC : IsClosed C) :
  Set.closure (A ∩ C) ⊆ Set.closure A ∩ C := by
  sorry
"
benmckay_top_covering-spaces_362,Topology,success,True,6,Take a covering map \(f \colon X \to Y\) from a Hausdorff space \(X\) to a topological space \(Y\). Suppose that a map \(g_1 \colon Z \to X\) and a map \(g_2 \colon Z \to X\) satisfy \(f\bigl(g_1(z)\bigr)=f\bigl(g_2(z)\bigr)\) for every \(z \in Z\). If \(g_1(z_0)=g_2(z_0)\) for some point \(z_0 \in Z\) then \(g_1=g_2\).,"import Mathlib

/--
Corrected statement:
If f : X → Y is a covering map and X is Hausdorff, then two lifts g1, g2 : Z → X of the same map into Y which agree at one point are equal, provided Z is connected.
The original statement omitted the connectedness hypothesis on Z; without it the conclusion can fail.
-/
theorem unique_lift_covering_of_connected {X Y Z : Type _} [TopologicalSpace X] [TopologicalSpace Y]
  [TopologicalSpace Z] [T2Space X] {f : X → Y} (hf : IsCoveringMap f) {g1 g2 : Z → X}
  (hfg : f ∘ g1 = f ∘ g2) {z0 : Z} (hz0 : g1 z0 = g2 z0) [ConnectedSpace Z] :
  g1 = g2 := by sorry
"
benmckay_top_topology_329,Topology,success,True,5,"If \(A \subset X\) is a subset of a topological space \(X\), then the closed subsets of \(A\) in the subspace topology are exactly the sets \(A \cap C\) for any closed set \(C \subset X\). Moreover, the closure of a subset \(S \subset A\) inside \(A\) is the intersection of \(A\) with the closure of \(S\) in \(X\).","import Mathlib

open Set

variable {X : Type _} [TopologicalSpace X]

/-- In the subspace topology on `A`, the closed sets are exactly the intersections
with closed sets of the ambient space `X`. -/
theorem isClosed_subspace_iff {A : Set X} {S : Set A} :
  IsClosed (S : Set A) ↔ ∃ C : Set X, IsClosed C ∧ (S : Set X) = A ∩ C := by sorry

/-- The closure of `S ⊆ A` taken in the subspace `A` equals the intersection of
`A` with the closure of `S` in the ambient space `X`. -/
theorem closure_subtype_eq {A : Set X} (S : Set A) :
  closure (S : Set A) = ((closure (S : Set X) ∩ A) : Set A) := by sorry
"
benmckay_top_covering-spaces_886,Topology,success,True,7,"Suppose that \(X\) is a path connected and locally simply connected topological space, with a covering by path connected open sets \(\{X_a\}_{a \in A}\), so that every finite intersection \(X_{ab} \coloneqq X_a \cap X_b\) is also path connected. Let \(\pi\coloneqq\pi_1(X,x_0)\) and \(\pi_a\coloneqq\pi_1(X_a,x_0)\), and so on. Take a group \(\Gamma\) and group morphisms \(\pi_a \to \Gamma\) which agree on every \(\pi_{ab}\), for every \(a,b\). Then there is a unique group morphism \(\pi \to \Gamma\) extending the given morphisms \(\pi_a \to \Gamma\).","import Mathlib

/-- Van Kampen-style algebraic formulation for a cover.

We package the usual hypotheses (fundamental groups of the sets and their
intersections, and the inclusion-induced homomorphisms) as algebraic data.
Given a family of group homomorphisms φ_a : π_a →* Γ which agree on every
π_{ab}, there is a unique group homomorphism π →* Γ extending them.

This file provides the algebraic statement; the topological hypotheses
(which produce the groups π, π_a, π_{ab} and the inclusion maps) are not
expressed here. -/
theorem van_kampen_for_covering_spaces {π : Type*} [Group π]
  {A : Type*} (π_a : A → Type*) [∀ a, Group (π_a a)]
  (incl_a : ∀ a, (π_a a →* π))
  (π_ab : A → A → Type*) [∀ a b, Group (π_ab a b)]
  (incl_ab_a : ∀ a b, (π_ab a b →* π_a a))
  (incl_ab_b : ∀ a b, (π_ab a b →* π_a b))
  (incl_ab_compat : ∀ a b,
    (incl_a a).comp (incl_ab_a a b) = (incl_a b).comp (incl_ab_b a b))
  (Γ : Type*) [Group Γ]
  (φ_a : ∀ a, (π_a a →* Γ))
  (h_compat : ∀ a b, (φ_a a).comp (incl_ab_a a b) = (φ_a b).comp (incl_ab_b a b)) :
  ∃! (φ : π →* Γ), ∀ a, φ.comp (incl_a a) = φ_a a := by sorry
"
benmckay_top_continuity_22,Topology,success,True,4,Let $f \colon X \to Y$ be a map of topological spaces. Show that $f$ is continuous if and only if for every subset $A \subseteq Y$ one has $\overline{f^{-1}(A)} = f^{-1}\!\left(\overline{A}\right)$.,"import Mathlib

open Set

variable {X Y : Type _} [TopologicalSpace X] [TopologicalSpace Y]

/-- A map f : X → Y is continuous iff it commutes with taking closures of arbitrary subsets: for every A ⊆ Y,
    closure (f ⁻¹' A) = f ⁻¹' (closure A). -/
theorem continuous_iff_closure_preimage (f : X → Y) :
  Continuous f ↔ ∀ A : Set Y, closure (f ⁻¹' A) = f ⁻¹' (closure A) := by sorry
"
benmckay_top_continuity_448,Topology,success,True,5,"Let $q \colon X \to X/{\sim}$ be the quotient map for an equivalence relation ${\sim}$ on a topological space $X$. A map $h \colon X/{\sim} \to Y$ is continuous if and only if $h \circ q \colon X \to Y$ is continuous. Conversely, a continuous map $F \colon X \to Y$ descends to a continuous map $X/{\sim} \to Y$ if and only if $F(x_1)=F(x_2)$ whenever $x_1 \sim x_2$.","import Mathlib

open Topology

variables {X Y : Type*} [TopologicalSpace X] [TopologicalSpace Y] (s : Setoid X)

/-- Let `q : X → Quotient s` be the quotient map. A map `h : Quotient s → Y` is continuous iff
`h ∘ q` is continuous. -/
theorem continuous_iff_quotient_comp {h : Quotient s → Y} :
  Continuous h ↔ Continuous (h ∘ (Quotient.mk : X → Quotient s)) := by sorry

/-- A map `F : X → Y` descends to a continuous map `Quotient s → Y` (i.e. there exists
`g : Quotient s → Y` continuous with `g ∘ Quotient.mk = F`) iff `F` is constant on each
equivalence class of `s`. -/
theorem continuous_descends_iff {F : X → Y} :
  (∃ g : Quotient s → Y, Continuous g ∧ g ∘ (Quotient.mk : X → Quotient s) = F) ↔
    ∀ x₁ x₂ : X, Setoid.r s x₁ x₂ → F x₁ = F x₂ := by sorry
"
benmckay_top_continuity_502,Topology,success,True,6,"Let $f(v_1,\dots,v_n)$ be a continuous function of vectors $v_1,\dots,v_n \in \mathbb{R}^{n}$ that is invariant under simultaneous orthogonal transformations: $f(Uv_1,\dots,Uv_n)=f(v_1,\dots,v_n)$ for every orthogonal matrix $U \in O(n)$. Let $Y$ be the set of all positive semidefinite symmetric $n \times n$ matrices. Prove that there exists a continuous function $g \colon Y \to \mathbb{R}$ such that $f(v_1,\dots,v_n)=g(A)$ for every choice of $v_1,\dots,v_n$, where $A$ is the Gram matrix with entries $A_{ij}=\langle v_i, v_j \rangle$.","import Mathlib

open Matrix Set

/--
Let f : Matrix (Fin n) (Fin n) ℝ → ℝ be continuous and invariant under left-multiplication
by orthogonal matrices U (U.transpose * U = 1). Then f factors through the Gram map
M ↦ M.transpose * M. We state the existence of a continuous function g on the range of the
Gram map such that f = g ∘ Gram. (Proof omitted.)
-/
theorem exists_continuous_g_of_orth_inv
  {n : ℕ} (f : Matrix (Fin n) (Fin n) ℝ → ℝ)
  (hf_cont : Continuous f)
  (hf_invar : ∀ (U M : Matrix (Fin n) (Fin n) ℝ), U.transpose * U = 1 → f (U * M) = f M) :
  ∃ (g : Matrix (Fin n) (Fin n) ℝ → ℝ),
    ContinuousOn g (range fun M => M.transpose * M) ∧ ∀ M, f M = g (M.transpose * M) := by
  sorry
"
benmckay_top_topology_556,Topology,success,True,6,Let \(X\) be a topological space. Prove that \(\left(A \times B\right)^{\circ}=A^{\circ} \times B^{\circ}\) and that \(\overline{A} \times \overline{B} = \overline{A \times B}\).,"import Mathlib

open Set Topology

variable {X Y : Type _} [TopologicalSpace X] [TopologicalSpace Y] (A : Set X) (B : Set Y)

theorem interior_prod_eq : interior (A ×ˢ B) = (interior A) ×ˢ (interior B) := by
  sorry

theorem closure_prod_eq : closure (A ×ˢ B) = (closure A) ×ˢ (closure B) := by
  sorry
"
benmckay_top_continuity_448,Topology,success,True,7,"Let \(X\) be a topological space and let \(\sim\) be an equivalence relation on \(X\) with quotient map \(q \colon X \to X/\!\sim\). Show that any continuous map \(h \colon X/\!\sim \to Y\) induces a continuous map \(h\circ q \colon X \to Y\). Conversely, show that a continuous map \(f \colon X \to Y\) arises in this way (i.e., \(f=h\circ q\) for a unique continuous \(h\)) if and only if \(f\) is constant on equivalence classes: \(f(x_1)=f(x_2)\) whenever \(x_1\sim x_2\).","import Mathlib

/-!
Let X be a topological space and let ~ be an equivalence relation on X with
quotient map q : X → X/~. Show that any continuous map h : X/~ → Y induces a
continuous map h ∘ q : X → Y. Conversely, show that a continuous map f : X → Y
arises in this way (i.e., f = h ∘ q for a unique continuous h) if and only if f is
constant on equivalence classes: f(x1) = f(x2) whenever x1 ~ x2.
-/

variable {X Y : Type*} [TopologicalSpace X] [TopologicalSpace Y]
variable {r : Setoid X}

/-- If h : X/~ → Y is continuous then h ∘ (Quotient.mk) : X → Y is continuous. -/
theorem continuous_comp_quotient {h : Quotient r → Y} (hh : Continuous h) :
  Continuous (h ∘ (Quotient.mk : X → Quotient r)) := by sorry

/-- A continuous map f : X → Y factors through the quotient (uniquely) iff it is
constant on equivalence classes (i.e. factors through the quotient map). -/
theorem continuous_map_factors_iff {f : X → Y} (hf : Continuous f) :
  (∀ x y, Quotient.mk x = Quotient.mk y → f x = f y) ↔
    ∃! (g : Quotient r → Y), Continuous g ∧ g ∘ (Quotient.mk : X → Quotient r) = f := by sorry
"
benmckay_top_continuity_538,Topology,success,True,7,"Let \(X=[0,1] \subset \mathbb{R}\) and let \(Y=\{(\cos(2\pi t),\sin(2\pi t)) : t\in[0,1]\} \subset \mathbb{R}^{2}\). Define \(f \colon X \to Y\) by \(f(t)=(\cos(2\pi t),\sin(2\pi t))\). Prove that the quotient space obtained by identifying \(0\) and \(1\) in \(X\), i.e. \(X/\{0,1\}\), is homeomorphic to \(Y\).","import Mathlib

open Set

/-
We consider X = [0,1] ⊆ ℝ as the subtype and identify 0 and 1.
We define the equivalence relation which identifies exactly the two endpoints.
We state that the resulting quotient is homeomorphic to the unit circle (the image
of t ↦ exp(2π I t), equivalently (cos 2π t, sin 2π t)).
-/

def X := { t : ℝ // t ∈ Icc (0 : ℝ) 1 }

def endpoint_rel (a b : X) : Prop :=
  a = b ∨ (a.1 = 0 ∧ b.1 = 1) ∨ (a.1 = 1 ∧ b.1 = 0)

instance endpoint_setoid : Setoid X :=
  { r := endpoint_rel,
    iseqv := by
      -- proof of equivalence omitted
      sorry }

-- We state the existence of a homeomorphism between the quotient of X by the
-- relation identifying 0 and 1 and the unit circle in ℂ (the image of the map
-- t ↦ cos(2π t), sin(2π t)).
theorem interval_endpoints_quotient_homeo_unit_circle :
  Nonempty (Homeomorph (Quotient (endpoint_setoid)) unit_circle) := by sorry"
benmckay_top_continuity_543,Topology,success,True,3,"Let $X=\overline{B} \subset \mathbb{R}^{n}$ be the closed unit ball, $A=\partial X$ its boundary sphere, and $Y \subset \mathbb{R}^{n+1}$ the unit sphere. Define $f \colon X \to Y$ by $f(x)=\big(\cos(\pi \|x\|),\, \sin(\pi \|x\|)\, \tfrac{x}{\|x\|}\big)$ for $x \neq 0$ and $f(0)=(1,0)$. Prove that $f$ is injective on the interior $X \setminus A$ and that $f$ maps every point of $A$ to the single point $(-1,0) \in Y$.","import Mathlib

open Set Real

variable (n : Nat)

def E := Fin n → ℝ

/-- The map f : E → ℝ × E used in the statement. For x = 0 we set f(0) = (1,0), and for x ≠ 0
    we set f(x) = (cos (π‖x‖), (sin (π‖x‖)/‖x‖) • x). -/
def f (x : E) : ℝ × E :=
  if h : x = 0 then ((1 : ℝ), (0 : E))
  else (Real.cos (Real.pi * ‖x‖), (Real.sin (Real.pi * ‖x‖) / ‖x‖) • x)

/-- Let X be the closed unit ball in ℝ^n, A its boundary sphere, and Y the unit sphere in ℝ^(n+1).
    The theorem asserts that f is injective on the interior X \ A and that every point of A is
    mapped to the single point (-1,0) ∈ Y. (Proof omitted.) -/
theorem benmckay_top_continuity_543 :
  let X : Set E := closedBall (0 : E) (1 : ℝ);
      A : Set E := sphere (0 : E) (1 : ℝ);
      Y : Set (ℝ × E) := sphere (0 : ℝ × E) (1 : ℝ)
  in
  InjOn (f : E → ℝ × E) (X \ A) ∧ (∀ a (ha : a ∈ A), f a = ((-1 : ℝ), (0 : E))) := by
  sorry
"
benmckay_top_fundamental-groups_24,Topology,success,True,6,"Let $X$ be a topological space covered by open sets $\{X_a\}_{a\in A}$ and let $x\colon[0,1]\to X$ be a path. Prove that there exist real numbers $0=t_0<t_1<\dots<t_n=1$ and indices $a_0,\dots,a_{n-1}$ such that for each $i$ we have $x([t_i,t_{i+1}])\subset X_{a_i}$.","import Mathlib

open Set

/-!
Lemma: Given a topological space X covered by open sets U a (a : α) and a path x : ℝ → X
continuous on Icc 0 1, there exist partition points 0 = t_0 < ... < t_n = 1 and indices a_0..a_{n-1}
such that each image x "" Icc(t_i, t_{i+1}) is contained in some U (a_i).
-/

variable {X : Type _} [TopologicalSpace X] {α : Type _}

lemma path_subcover_segments (U : α → Set X)
  (hcover : (⋃ a, U a) = (univ : Set X))
  (hopen : ∀ a, IsOpen (U a))
  {x : ℝ → X} (hcont : ContinuousOn x (Icc (0 : ℝ) 1)) :
  ∃ (n : ℕ) (t : Fin (n+1) → ℝ) (a : Fin n → α),
    StrictMono t ∧ t 0 = 0 ∧ t (Fin.last n) = 1 ∧
    ∀ i : Fin n, x '' (Icc (t (Fin.castSucc i)) (t (Fin.succ (Fin.castSucc i)))) ⊆ U (a i) := by sorry
"
benmckay_top_fundamental-groups_17,Topology,success,True,8,"Let $X$ be a topological space and let $x,y\colon[0,1]\to X$ be paths. Suppose there exists a continuous, strictly increasing map $\tau\colon[0,1]\to[0,1]$ with $\tau(0)=0$, $\tau(1)=1$ and $y\circ\tau = x$ (so $y$ is a reparametrization of $x$). Prove that $x$ is homotopic to $y$ relative to $\{0,1\}$.","import Mathlib

/-!
Lemma: Reparametrisation of a path gives a homotopic path relative to the endpoints.

We work with maps defined on the unit interval `I := Set.Icc (0 : ℝ) 1`.  If
`x y : ℝ → X` are continuous on `I` and `τ : ℝ → ℝ` is continuous, strictly
increasing on `I`, fixes the endpoints `0` and `1`, maps `I` into itself, and
satisfies `y (τ t) = x t` for all `t ∈ I`, then there exists a continuous homotopy
`H : ℝ × ℝ → X` on `I × I` witnessing that `x` and `y` are homotopic relative to
`{0,1}`.  For brevity we state the existence of such an `H` and its boundary
conditions; the proof is omitted (:= by sorry).
-/

open Set

variable {X : Type*} [TopologicalSpace X]

lemma reparametrization_homotopic_relative_endpoints
  (x y : ℝ → X)
  (hx : ContinuousOn x (Icc (0 : ℝ) 1))
  (hy : ContinuousOn y (Icc (0 : ℝ) 1))
  (τ : ℝ → ℝ)
  (hτ_cont : Continuous τ)
  (hτ_maps : MapsTo τ (Icc (0 : ℝ) 1) (Icc (0 : ℝ) 1))
  (hτ_strict : StrictMonoOn τ (Icc (0 : ℝ) 1))
  (hτ0 : τ 0 = 0)
  (hτ1 : τ 1 = 1)
  (hxy : ∀ t ∈ Icc (0 : ℝ) 1, y (τ t) = x t) :
  ∃ (H : ℝ × ℝ → X),
    ContinuousOn H (Icc (0 : ℝ) 1 ×ˢ Icc (0 : ℝ) 1) ∧
    (∀ t ∈ Icc (0 : ℝ) 1, H (t, 0) = x t) ∧
    (∀ t ∈ Icc (0 : ℝ) 1, H (t, 1) = y t) ∧
    (∀ s ∈ Icc (0 : ℝ) 1, H (0, s) = x 0) ∧
    (∀ s ∈ Icc (0 : ℝ) 1, H (1, s) = x 1) := by sorry
"
