import Mathlib

open Equiv Perm Subgroup

/-- For n ≥ 2, the symmetric group on n letters is generated by the transposition (0 1)
    and the n-cycle (0 1 2 ... n-1). -/
theorem Sym_n_generated_by_transposition_and_cycle {n : ℕ} (hn : 2 ≤ n) :
  Subgroup.closure
    ({ (swap (0 : Fin n) 1 : Perm (Fin n)),
       (cycle ((List.range n).map fun k => (k : Fin n)) : Perm (Fin n)) } : Set (Perm (Fin n))) =
  (⊤ : Subgroup (Perm (Fin n))) := by sorry
