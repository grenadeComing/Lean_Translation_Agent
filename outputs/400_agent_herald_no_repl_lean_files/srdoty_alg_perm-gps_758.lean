import Mathlib

open Equiv Subgroup

/--
Let alpha := (0 1) and beta := (0 1 2) as permutations of Fin 3 (which we view as {1,2,3} with elements 0,1,2).
Let G be the subgroup generated by alpha and beta. The statement asserts G = S3, i.e. G = ⊤ as a subgroup of Perm (Fin 3).
(The proof is omitted and replaced by `sorry`.)
-/
theorem srdoty_alg_perm_gps_758 :
  let alpha := Equiv.swap (0 : Fin 3) 1
  let beta  := (Equiv.swap (0 : Fin 3) 2) * (Equiv.swap (0 : Fin 3) 1) -- a 3-cycle 0→1→2→0
  let G := Subgroup.gclosure ({alpha, beta} : Set (Perm (Fin 3)))
  in G = (⊤ : Subgroup (Perm (Fin 3))) := by sorry
