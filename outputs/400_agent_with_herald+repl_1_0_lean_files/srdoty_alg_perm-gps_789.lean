import Mathlib

open List

/-- Let n ≥ 2. The symmetric group S_n is generated by the transposition (0 1)
    and the n-cycle (0 1 2 ... n-1). -/
theorem symmetric_group_generated_by_transposition_and_cycle {n : Nat} (hn : 2 ≤ n) :
  Subgroup.closure ({Equiv.swap (Fin n) (0 : Fin n) (1 : Fin n),
                    (Perm.cycle ((range n).map (fun k => (k : Fin n))) : Equiv.Perm (Fin n))} : Set (Equiv.Perm (Fin n)))
    = (⊤ : Subgroup (Equiv.Perm (Fin n))) := by sorry
