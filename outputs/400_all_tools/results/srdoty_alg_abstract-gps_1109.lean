import Mathlib

/-- For n ≥ 2, Sym_n is generated by the transposition (0 1) and an n-cycle. -/
theorem sym_n_generated_by_trans_cycle {n : ℕ} (h : 2 ≤ n) :
  ∃ σ : Equiv.Perm (Fin n),
    Subgroup.closure ({Equiv.swap (Fin.mk 0 (lt_of_lt_of_le Nat.zero_lt_two h))
                           (Fin.mk 1 (lt_of_lt_of_le Nat.one_lt_two h)), σ} : Set (Equiv.Perm (Fin n)))
      = (⊤ : Subgroup (Equiv.Perm (Fin n))) := by sorry
