import Mathlib

open Matrix

def is_orthogonal (M : Matrix (Fin 2) (Fin 2) ℝ) : Prop := M * M.transpose = 1

def is_special (M : Matrix (Fin 2) (Fin 2) ℝ) : Prop := is_orthogonal M ∧ Matrix.det M = 1

def O2 : Set (Matrix (Fin 2) (Fin 2) ℝ) := { M | is_orthogonal M }

def SO2 : Set (Matrix (Fin 2) (Fin 2) ℝ) := { M | is_special M }

/--
For any fixed improper orthogonal matrix A ∈ O(2) \ SO(2), every element of O(2)
is either in SO(2) or is the product of an element of SO(2) with A. This
expresses that O(2) is generated by SO(2) ∪ {A}.
-/
theorem O2_generated_by_SO2_and_A (A : Matrix (Fin 2) (Fin 2) ℝ) (hA : A ∈ O2) (hA' : A ∉ SO2) :
  ∀ M, M ∈ O2 → (M ∈ SO2) ∨ (∃ R, R ∈ SO2 ∧ M = R * A) := by sorry
