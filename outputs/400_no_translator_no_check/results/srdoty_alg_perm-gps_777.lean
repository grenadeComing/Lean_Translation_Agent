import Mathlib

/-!
Let n ≥ 2. Prove that S_n is generated by the adjacent transpositions {(1,2),(2,3),...,(n-1,n)}.
We state this as: the subgroup generated by the set of adjacent swaps equals the whole permutation group on Fin n.
(Note: to avoid definitional equality issues with (n - 1) + 1 = n, we keep the target type as Fin ((n - 1) + 1)).
-/

theorem symmetric_group_generated_by_adjacent_transpositions {n : ℕ} (hn : 2 ≤ n) :
  Subgroup.closure (Set.range (fun (i : Fin (n - 1)) => (Equiv.swap (Fin.castSucc i) (Fin.succ i) : Equiv.Perm (Fin ((n - 1) + 1))))) =
    (⊤ : Subgroup (Equiv.Perm (Fin ((n - 1) + 1)))) := by
  sorry
