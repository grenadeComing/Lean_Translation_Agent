import Mathlib

noncomputable section

/-- The ideal in Polynomial ℤ generated by X^2 + 1. -/
def gaussian_ideal : Ideal (Polynomial ℤ) := Ideal.span ({Polynomial.X ^ 2 + 1} : Set (Polynomial ℤ))

/-- The ring of Gaussian integers R := ℤ[X] / (X^2 + 1). -/
def R := Polynomial ℤ ⧸ gaussian_ideal

instance : CommRing R := Ideal.Quotient.commRing gaussian_ideal

/-- Every nonzero ideal in the ring of Gaussian integers contains a nonzero integer. -/
theorem gaussian_integers_nonzero_ideal_contains_nonzero_int (I : Ideal R) (hI : I ≠ ⊥) :
  ∃ z : ℤ, Ideal.Quotient.mk gaussian_ideal (Polynomial.C z) ∈ I ∧ z ≠ 0 := by sorry

end noncomputable section
