import Mathlib

open Subgroup

variable {G : Type _} [Group G]

/-- The commutator subgroup [G, H] generated by all commutators g h g^{-1} h^{-1} with g ∈ G, h ∈ H. -/
def commutator_of_G_H (H : Subgroup G) : Subgroup G :=
  Subgroup.closure { x : G | ∃ g h : G, h ∈ (H : Set G) ∧ x = g * h * g⁻¹ * h⁻¹ }

/-- A subgroup H is normal iff the commutator subgroup [G, H] is contained in H. -/
theorem subgroup_normal_iff_commutator_le (H : Subgroup G) :
  (∀ g x, x ∈ H → g * x * g⁻¹ ∈ H) ↔ commutator_of_G_H H ≤ H := by
  sorry
