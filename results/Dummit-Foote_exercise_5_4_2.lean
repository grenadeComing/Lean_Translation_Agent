import Mathlib

variable {G : Type*} [Group G]

/-- The set of commutators [g,h] = g h g⁻¹ h⁻¹ with h varying over H. -/
def comm_set (H : Subgroup G) : Set G := { x : G | ∃ (g h : G), h ∈ H ∧ x = g * h * g⁻¹ * h⁻¹ }

/-- A subgroup H is normal iff the commutator subgroup [G, H] (the subgroup generated by commutators) is contained in H. -/
theorem Dummit_Foote_exercise_5_4_2 (H : Subgroup G) :
  (∀ g h : G, h ∈ H → g * h * g⁻¹ ∈ H) ↔ Subgroup.closure (comm_set H) ≤ H := by sorry
