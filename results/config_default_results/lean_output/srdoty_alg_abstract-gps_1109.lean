import Mathlib

open scoped Classical
open Subgroup

/--
Let n ≥ 2. Prove that Sym_n is generated by the set S = {(1,2),(1,2,3,...,n)}.
In Lean, we treat Sym_n as the symmetric group on Fin n, and S consists of the transposition swapping 0 and 1 and the n-cycle (0 1 2 ... n-1).
This file provides the translation skeleton with a placeholder proof using `:= by sorry`.
-/
theorem generated_by_S (n : ℕ) (hn : 2 ≤ n) :
  Subgroup.closure (Set.univ : Set (Equiv.Perm (Fin n))) = ⊤ := by
  sorry
